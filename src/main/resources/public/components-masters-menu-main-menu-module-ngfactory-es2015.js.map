{"version":3,"sources":["webpack:///./src/app/components/masters/menu/main-menu.component.html","webpack:///./src/app/components/masters/menu/main-menu.component.ts","webpack:///./src/app/components/masters/menu/main-menu.module.ts","webpack:///./src/app/services/main.menu.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGAiBgB,qQACC,YAD0C;;wBAAmB;MAA9D,wBACC,uFAED;uGAcI,mVAA+G,oGAE/G,iCAFA,qGAA+G;uGAG/G,sWAAyI,kGAAsB,iCAA/J,qGAAyI;uGACzI,mVAA+E,qGAE/E,iCAFA,qGAA+E;uGAG/E,sWAA2I,6GAAiC,iCAA5K,qGAA2I;uGAO3I,oVAAwH,mGAGxH,iCAHA,qGAAwH;uGAIxH,uWAAiJ,kGAAsB,iCAAvK,qGAAiJ;uGACjJ,uWAAmJ,4GAAgC,iCAAnL,qGAAmJ;uGA9BzJ;;;;;wBACqC;MAArC;;wBAAmC;MADnC,g0BACqC,IAEnC,4IAAsB,0FAAmB,MAIzC,6MAA0E,KAExE,4qFAA4B,MAC1B;;;;;;;;;;;;;;;;;;;;;4rGAAyI,KACzI,yYAA+G,IAG/G,yYAAyI,IACzI,yYAA+E,IAG/E,yYAA2I,IAK7I,orFAA4B,MAC1B;;;;;;;;;;;;;;;;;;;;;8rGAA8I,KAC9I,yYAAwH,IAIxH,yYAAiJ,IACjJ,yYAAmJ,IAIrJ,+MAA+E,KAC3E,s5BACgD,+EAE1C,MAGV,yIAAkB,KACd,kQACC,YADwC;;wBAAoB;MAA7D,wBACC,oFAED,MAMN,oLAAoE,iGAAyB,mDAnDf,mBAA0B,eAA1G,YACqC,EAD2C,SAA0B,GAU1B,qBAAc,EAAxF,aAAyI,EAA/D,UAAc,GAA/C,uBAAsB,EAA/D,aAAyI,EAAhG,UAAsB,GAA/C,4BAAuB,EAAvC,aAAyI,EAAzH,UAAuB,GAAkD,iDAA6C,GAAtI,aAAyI,EAAhD,UAA6C,GAC3H,4GAAmG,YAA9G,aAA+G,EAApG,UAAmG,GAGnG,2GAAkG,YAA7G,aAAyI,EAA9H,UAAkG,GAClG,+EAAmE,GAA9E,aAA+E,EAApE,UAAmE,GAGnE,6GAAoG,YAA/G,aAA2I,EAAhI,UAAoG,GAMnC,qBAAc,EAA1F,aAA8I,EAAlE,UAAc,GAAnD,2BAA0B,EAAjE,aAA8I,EAAvG,UAA0B,GAAjD,2BAAsB,EAAtC,aAA8I,EAA9H,UAAsB,GAAqD,qDAAiD,GAA5I,aAA8I,EAAnD,UAAiD,GAChI,oHAA2G,YAAvH,aAAwH,EAA5G,UAA2G,GAI5G,oHAA0G,YAArH,aAAiJ,EAAtI,WAA0G,GAC1G,sHAA4G,YAAvH,aAAmJ,EAAxI,WAA4G,GAMvG,qBAAiC,uBADrB,0BAAc,EAAxC,aACgD,EAAlC,WAAiC,EADrB,WAAc,mDAnChD,8sBACqC,GAEb,kDAAmB,GAMvC,24EAA4B,IAC1B,k4DAAyI,IAa3I,o6EAA4B,IAC1B,k4DAA8I,IAW5I,4PACgD,0DAE1C,GAaP,sBAAmB,SAAxB,aAAoE,EAA/D,WAAmB,GAA4C,uDAAyB;wGAkB3F;;;;;;;;;;;;q7BAAmD,6EAAI,2BAApB,kBAAe,EAAlD,YAAmD,EAAhB,SAAe,2BAAlD,8NAAmD;wGACnD,2bAAgC,kLAAY;wGAK5C;;;;;;;;;;;;q7BAAmD,kFAAS,2BAAzB,kBAAe,EAAlD,YAAmD,EAAhB,SAAe,2BAAlD,8NAAmD;wGACnD,2bAAgC,mLAAa;wGAK7C;;;;;;;;;;;;q7BAAmD,iFAAQ,2BAAxB,kBAAe,EAAlD,YAAmD,EAAhB,SAAe,2BAAlD,8NAAmD;wGACnD,2bAAgC,sLAAgB;wGAShD;;;;;;;;;;;;q7BAAmD,gFAAO,2BAAvB,kBAAe,EAAlD,YAAmD,EAAhB,SAAe,2BAAlD,8NAAmD;wGACnD,4bAAiC,IAC7B;;;;;;;;;;;wBAAiG;MAAjC;;wBAAgC;MAAhG,goDAAiG,IAE7F,q1BAA4C,6EAAI,MAEnD;;;;;;;;wBAA8E;MAAlC;;wBAAgC;MAA5E,smDAA8E,IAC3E,u1BAA4C,+EAAM,2BALjB,uBAA0B,EAA5C,sBAAiB,EAApC,YAAiG,EAA5D,SAA0B,EAA5C,SAAiB,GAEhC,YAA4C,GAEvB,yBAAmB,EAA3C,aAA8E,EAAtD,UAAmB,GACxC,aAA4C,2BALhD,khBAAiG,GAE7F,2XAA4C,GAE/C,iPAA8E,GAC3E,oYAA4C;wGAOxD,4vBAAoD;wGACpD,gtBAA0D;2VAjIxE,8nBAAqB,IAGrB,4IAAqB,KACrB,qIAAc,KACV,2IAAoB,KAEhB,wOAA4F,KAE1F,4IAAsB,oGAAuB,MAC7C,0IAAkB,KAGhB,2MAAwE,KAGtE,yIAAkB,KAChB,4YACC,IAKH,4YACqC,IAwD3C,oJAA4B,KAC1B,kqFAAgB,MACZ;;;;;;;;wBAAgF;MAAhE;;wBAA0C;MAA1D,w5BAAgF,KAItF,wKAAgD,KAE9C,4pDAA6C,MAGzC,y6BAAiC,KAC7B,siBAAmD,KACnD,ohBAAgC,KAIpC,y6BAAkC,KAC9B,siBAAmD,KACnD,ohBAAgC,KAIpC,y6BAAqC,KACjC,siBAAmD,KACnD,ohBAAgC,KAQlC,y6BAAgC,KAC9B,siBAAmD,KACnD,ohBAAiC,KAarC,0nBAAoD,KACpD,wmBAA0D,KAI9D,kuBAAoD,GAArC,yDAAoC,iDApHkB,oBAAmB,WAAlF,aACC,EAD8D,SAAmB,GAMvB,mBAAkB,WAA/E,aACqC,EADwB,SAAkB,GA2DpB,yBAAoB,EAA/E,aAAgF,EAArB,UAAoB,GAMnF,aAA6C,GAAlC,oBAAyB,aAApC,aAA6C,EAAlC,UAAyB,GAGlB,sBAAkB,EAAhC,aAAiC,EAAnB,UAAkB,GAMlB,uBAAmB,EAAjC,aAAkC,EAApB,UAAmB,GAMnB,0BAAsB,EAApC,aAAqC,EAAvB,UAAsB,GAUpB,qBAAiB,EAA/B,aAAgC,EAAlB,UAAiB,GAejB,oBAAmC,mBAAnD,aAAoD,EAApC,UAAmC,GAC1C,oBAAgD,mBAAzD,aAA0D,EAAjD,UAAgD,GAI9C,+CAAoC,GAAnD,cAAoD,EAArC,UAAoC,2BApDnD,o5EAAgB,IACZ,u/BAAgF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClF9F;AAAA;AAAA;AAAA;AAAA;AAAoF;AAEH;AACQ;AAUlF,MAAM,iBAAiB;IA+B1B,YAAoB,WAAwB,EAChC,gBAAiC,EAClC,MAAiB,EAChB,cAAwC,EACxC,aAA2B;QAJnB,gBAAW,GAAX,WAAW,CAAa;QAChC,qBAAgB,GAAhB,gBAAgB,CAAiB;QAClC,WAAM,GAAN,MAAM,CAAW;QAChB,mBAAc,GAAd,cAAc,CAA0B;QACxC,kBAAa,GAAb,aAAa,CAAc;QA9BvC,qBAAgB,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAEpD,4BAA4B;QAC5B,UAAK,GAAW,MAAM,CAAC;QACvB,SAAI,GAAY,KAAK,CAAC;QACtB,OAAE,GAAW,CAAC,CAAC;QACf,WAAM,GAAW,EAAE,CAAC;QAEpB,UAAK,GAAO,EAAE,CAAC;QAEf,aAAQ,GAAQ,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7D,cAAS,GAAQ,EAAE,CAAC;QACpB,YAAO,GAAG,oBAAoB,CAAC;QAC/B,mBAAc,GAAW,EAAE,CAAC;QAmBxB,uBAAuB;QACvB,IAAI,CAAC,UAAU,GAAG;YACd,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;SACf,CAAC;IACN,CAAC;IAED,QAAQ;QACJ,sBAAsB;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,EAAE,EAAE,CAAC;YACL,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvJ,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC3H,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;YAC1C,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;QAIH,sDAAsD;QACtD,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,+BAA+B;QAC/B,gEAAgE;QAChE,4BAA4B;QAC5B,kCAAkC;QAClC,0CAA0C;QAE1C,uCAAuC;QACvC,mCAAmC;QACnC,YAAY;QACZ,mDAAmD;QACnD,qDAAqD;QACrD,+CAA+C;QAC/C,YAAY;QACZ,QAAQ;QACR,KAAK;IAET,CAAC;IAED,2BAA2B;IAC3B,iBAAiB,CAAC,EAAE;QAChB,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,CAAC;aACpC,SAAS,CAAC,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;gBACzB,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACpB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;gBACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;aAClC,CAAC,CAAC;QACP,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IACD,iBAAiB;QACb,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACtC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;gBACpC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;gBAC5F,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;gBACnG,UAAU,EAAE,IAAI;gBAChB,WAAW,EAAE,IAAI;gBACjB,YAAY,EAAE,IAAI;gBAClB,WAAW,EAAE,IAAI;gBACjB,UAAU,EAAE,IAAI;aACnB,CAAC,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,EAAE;gBAC3B,IAAI,aAAa,EAAE;oBACf,OAAO,CAAC,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC1C;qBAAM;oBACH,OAAO,CAAC,IAAI,CAAC,CAAC;iBACjB;YACL,CAAC,EAAE,GAAG,EAAE,GAAG,OAAO,CAAC,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,CAAC;IACb,CAAC;IAGD,2BAA2B;IAC3B,WAAW;QACP,uCAAuC;IAC3C,CAAC;IACD,8BAA8B;IAC9B,mBAAmB;QACf,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YACjC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;gBACxC,SAAS;aACZ;YACD,wBAAwB;YACxB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC5B,kBAAkB;YAClB,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC5C,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;aAC3C;SACJ;IACL,CAAC;IAED,gBAAgB;IAEhB,oBAAoB;QAEhB,IAAI,MAAM,GAAW,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC;QAChD,IAAI,QAAQ,GAAW,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC;QACpD,IAAI,YAAY,GAAW,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC1B,OAAO;SACV;QAED,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,EAAE,EAAE,6BAA6B;YACrD,yBAAyB;YACzB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;gBAC/B,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC;gBAC5D,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,YAAY,CAAC;gBACnE,UAAU,EAAE,CAAC;gBACb,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;gBACpC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;gBACrC,WAAW,EAAE,SAAS;gBACtB,UAAU,EAAE,CAAC;aAChB,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAClB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,CAAC;gBAChE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;gBACzC,aAAa;gBACO,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACxC,KAAK;gBACW,UAAU,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,EAAC,CAAC,EAAE,IAAI,CAAC;gBAC/C,IAAI,CAAC,OAAO,EAAE,CAAC;gBAEf,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;gBAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACvB,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;gBAChB,IAAI,CAAC,UAAU,GAAG,KAAK;gBACvB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACtD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC/B,CAAC,CAAC,CAAC;SAEN;aACI,IAAI,IAAI,CAAC,KAAK,IAAI,QAAQ,EAAE,EAAE,oBAAoB;YACnD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;gBACjC,MAAM,EAAE,QAAQ;gBAChB,SAAS,EAAE,YAAY;gBACvB,UAAU,EAAE,CAAC;gBACb,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;gBACpC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;gBACrC,WAAW,EAAE,SAAS;gBACtB,UAAU,EAAE,CAAC;aAChB,EAAE,MAAM,CAAC;iBACL,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAChB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,4BAA4B,CAAC,CAAC;gBAClE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;gBACpB,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC9B,CAAC,EAAE,KAAK,CAAC,EAAE;gBACP,IAAI,CAAC,UAAU,GAAG,KAAK;gBACvB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACtD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC/B,CAAC,CAAC,CAAC;SACV;IAEL,CAAC;IACD,WAAW,CAAC,WAAmB;QAC3B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,2CAA2C;QACpF,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;IACzC,CAAC;IACD,OAAO;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACzB,CAAC;IACD,mBAAmB;IACnB,cAAc,CAAC,EAAE;QACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACvB,wBAAwB;QACvB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAG/B,CAAC;IACD,QAAQ;QACJ,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IACD,oBAAoB;IACpB,cAAc,CAAC,EAAE;QACb,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC;aACnC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAChB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,4BAA4B,CAAC,CAAC;YAClE,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,wCAAwC;QAC5C,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,UAAU,GAAG,KAAK;YACvB,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACrD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACX,CAAC;IAEO,OAAO;QACX,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5B;YACD,IAAI,CAAC,UAAU,CAAC;YAEhB,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACjC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,EAAE,KAAK,CAAC,EAAE;YACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC,CACA,CAAC;IACN,CAAC;CAEJ;AAED,yCAAyC;AACzC,SAAS,mBAAmB,CAAC,OAAoB;IAC7C,IAAI,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC;IAChC,4BAA4B;IAC5B,2CAA2C;IAC3C,wCAAwC;IACxC,qCAAqC;IACrC,eAAe;IACf,0BAA0B;IAC1B,+BAA+B;IAC/B,UAAU;IACV,QAAQ;IACR,MAAM;IACN,IAAI;IACJ,OAAO;QACH,cAAc,EAAE;YACZ,YAAY,EAAE,MAAM;SACvB;KACJ;IAGD,eAAe;AACnB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5SD;AAAA;AAAA;AAA0D;AAQ1D,MAAM,MAAM,GAAG;IACX;QACI,IAAI,EAAO,EAAE;QACb,SAAS,EAAE,sEAAiB;KAC/B;CACJ,CAAC;AAwBK,MAAM,cAAc;CAE1B;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACgB;AAClB;AAEd;AACE;AACE;AACwB;AAGpD,MAAM,eAAe;IAKxB,YAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAJrC,aAAQ,GAAW,qEAAW,CAAC,MAAM,CAAC;QAEtC,gBAAW,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAG7D,IAAI,CAAC,MAAM,GAAG,IAAI,gEAAW,CAAC;YAC3B,cAAc,EAAE,mCAAmC;YACnD,QAAQ,EAAE,kBAAkB;SAC7B,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACpC,oCAAoC;IACxC,CAAC;IAED,WAAW;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,yBAAyB,GAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;aACzF,GAAG,CAAC,CAAC,QAAkB,EAAE,EAAE,SAAQ,CAAC;aACpC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAED,eAAe,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,YAAY,GAAE,EAAE,GAAC,gBAAgB,GAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;aACjG,GAAG,CAAC,CAAC,QAAkB,EAAE,EAAE,CAAC,QAAQ,CAAC;aACrC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC;IACjC,CAAC;IAED,YAAY,CAAC,QAAQ;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,6BAA6B,GAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,QAAQ,CAAC;aACxG,GAAG,CAAC,CAAC,QAAkB,EAAE,EAAE;QAC5B,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC;IACjC,CAAC;IAED,cAAc,CAAC,QAAQ,EAAC,EAAE;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,gBAAgB,GAAC,EAAE,GAAC,gBAAgB,GAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,QAAQ,CAAC;aAC/G,GAAG,CAAC,CAAC,QAAkB,EAAE,EAAE,CAAC,QAAQ,CAAC;aACrC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAED,cAAc,CAAC,EAAE;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,mBAAmB,GAAG,EAAE,GAAC,gBAAgB,GAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;aACzG,GAAG,CAAC,CAAC,QAAkB,EAAE,EAAE,CAAC,QAAQ,CAAC;aACrC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IACD,iBAAiB,CAAC,QAAQ;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,mCAAmC,GAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,QAAQ,CAAC;aAC9G,GAAG,CAAC,CAAC,QAAkB,EAAE,EAAE,CAAC,QAAQ,CAAC;aACrC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IACD,YAAY,CAAC,KAAe;QACxB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,0DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;CACJ","file":"components-masters-menu-main-menu-module-ngfactory-es2015.js","sourcesContent":["<ng4-loading-spinner> </ng4-loading-spinner>\n\n\n<div class=\"content\">\n<div class=\"\">\n    <div class=\"col-12\">\n        \n        <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\" fusePerfectScrollbar>\n       \n          <div class=\"h1 mt-16\">Menu Master Information</div>\n          <div class=\"p-24\">\n        \n        \n            <div fxLayout=\"column\" fxLayoutAlign=\"start start\" fxLayout.gt-md=\"row\">\n        \n              <!-- REACTIVE FORM EXAMPLE -->\n              <div class=\"p-12\">  \n                <span class=\"mat-raised-button mat-accent\" (click)=\"AddMenu()\" *ngIf = \"!menuForm\" color=\"accent\" mat-raised-button=\"\" \n                >\n                Add Menu\n                </span> \n                </div>\n        \n              <form class=\"mat-white-bg mat-elevation-z4 p-24 mr-24 mb-24\" *ngIf = \"menuForm\" [formGroup]=\"mainMenuForm\" fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"mainMenuForm\"\n              (ngSubmit)=\"onMainMenuFormSubmit()\" >\n        \n                <div class=\"h2 mb-24\">{{title}} Main Menu</div>\n        \n        \n        \n                <div fxLayout=\"row\" layout-align=\"center space-between\" fxFlex=\"1 0 auto\">\n        \n                  <mat-form-field fxFlex=\"45\">\n                    <input matInput placeholder=\"Menu name\"  formControlName=\"menu\" size=\"25\" maxlength=\"25\" [formControl]=\"mainMenuForm.controls['menu']\" />\n                    <mat-error *ngIf=\"mainMenuForm.controls['menu'].hasError('required') && mainMenuForm.controls['menu'].touched\">\n                      Menu name is required!\n                    </mat-error>\n                    <mat-error *ngIf=\"mainMenuForm.controls['menu'].hasError('pattern') && mainMenuForm.controls['menu'].touched\" class=\"alert alert-danger\">Only alphabets allowed</mat-error>\n                    <mat-error *ngIf=\"mainMenuForm.controls['menu'].hasError('duplicateMenuName')\">\n                      Menu Name Already Exits\n                    </mat-error>\n                    <mat-error *ngIf=\"mainMenuForm.controls['menu'].hasError('minlength') && mainMenuForm.controls['menu'].touched\" class=\"alert alert-danger\">Menu Name minimum of 3 Characters</mat-error>\n                   \n                    \n                  </mat-form-field>\n        \n                  <mat-form-field fxFlex=\"45\">\n                    <input matInput placeholder=\"Menu URL\" formControlName=\"menu_url\" size=\"25\" maxlength=\"25\" [formControl]=\"mainMenuForm.controls['menu_url']\"/>\n                    <mat-error  *ngIf=\"mainMenuForm.controls['menu_url'].hasError('required') && mainMenuForm.controls['menu_url'].touched\">\n                       \n                      Menu URL is required!\n                    </mat-error>\n                    <mat-error *ngIf=\"mainMenuForm.controls['menu_url'].hasError('pattern') && mainMenuForm.controls['menu_url'].touched\" class=\"alert alert-danger\">Only alphabets allowed</mat-error>\n                    <mat-error *ngIf=\"mainMenuForm.controls['menu_url'].hasError('minlength') && mainMenuForm.controls['menu_url'].touched\" class=\"alert alert-danger\">Menu URL minimum of 3 Characters</mat-error>\n                    \n                 \n                  </mat-form-field>\n                  <div  fxFlex=\"10\"  fxLayoutAlign=\"center center\" style=\"padding-bottom:10px;\" >\n                      <button mat-raised-button color=\"accent\" class=\"submit-button\" aria-label=\"Submit\"\n                                    [disabled]=\"mainMenuForm.invalid\">\n                                {{title}}\n                            </button>\n                            \n                  </div>\n                  <div class=\"p-12\">  \n                      <span class=\"mat-raised-button mat-warn\" (click)=\"onGoBack()\"  color=\"warn\" mat-raised-button=\"\" \n                      >\n                     Close\n                      </span> \n                      </div>\n        \n        \n                </div>\n        \n                <div [hidden] =\"!status\"  style=\"color:darkgreen;text-align:center\">{{title}} Successfully!!!</div>\n              </form>\n            </div>\n        \n        \n        \n        <div class=\"example-header\">\n          <mat-form-field>\n              <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n          </mat-form-field>\n        </div>\n        <!-- Grid stat-->\n        <div class=\"example-container mat-elevation-z8\">\n        \n          <mat-table [dataSource]=\"dataSource\" matSort>\n        \n              <!-- ID Column -->\n              <ng-container matColumnDef=\"sno\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Sno.</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.sno}}</mat-cell>\n              </ng-container>\n        \n              <!-- Progress Column -->\n              <ng-container matColumnDef=\"menu\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Menu Name</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.menu}}</mat-cell>\n              </ng-container>\n        \n              <!-- Name Column -->\n              <ng-container matColumnDef=\"menuURL\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Menu URL</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\"> {{row.menuURL}}</mat-cell>\n              </ng-container>\n        \n              <!-- Color Column -->\n                <!-- <ng-container matColumnDef=\"color\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Color</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.color}}</mat-cell>\n                </ng-container>  -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" > \n                      <a mat-icon-button matTooltip=\"Edit\" matTooltipPosition=\"after\" (click)=\"updateMainmenu(row.id)\">\n                      \n                          <mat-icon  style=\"color: rgb(0, 145, 234);\">edit</mat-icon>\n                      </a>\n                       <button mat-icon-button matTooltip=\"Delete\" (click)=\"deleteMainmenu(row.id)\" >\n                          <mat-icon  style=\"color: rgb(244, 67, 54);\">delete</mat-icon>\n                      </button> \n                     <!-- {{row.id}} -->\n                  \n                  </mat-cell>\n              </ng-container>\n        \n              <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n              <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n              </mat-row>\n          </mat-table>\n        \n          <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator> \n        </div>\n        </div>\n    </div>\n</div>\n</div>\n</div>\n\n","import { Component, ViewChild, OnInit, OnDestroy, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MatPaginator, MatDialog, MatSort, MatTableDataSource } from '@angular/material';\nimport { MainMenuService } from '../../../services/main.menu.service';\nimport { Subscription } from 'rxjs';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { CommonService } from '../../../common/common.service';\n@Component({\n    selector: 'app-main-menu',\n    templateUrl: './main-menu.component.html',\n    styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent implements OnInit, OnDestroy {\n\n    mainMenuForm: FormGroup;\n    formErrors: any;\n    menuForm: boolean;\n    displayedColumns = ['sno', 'menu', 'menuURL', 'id'];\n    dataSource: MatTableDataSource<MainMenuModel>;\n    // checkInput:boolean=false;\n    title: string = \"Save\";\n    flag: boolean = false;\n    id: number = 0;\n    action: string = \"\";\n    response:any;\n    users: any =[];\n    data: any ;\n    userdata: any = JSON.parse(localStorage.getItem('userData'));\n    MenusList: any = [];\n    pattern = \"[a-zA-Z][a-zA-Z ]*\";\n    responseStatus: Object = [];\n    status: boolean;\n    @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n    @ViewChild(MatSort, {static: true}) sort: MatSort;\n    @ViewChild('filter', {static: true}) filter: ElementRef;\n    // Horizontal Stepper\n    horizontalStepperStep1: FormGroup;\n    horizontalStepperStep2: FormGroup;\n    horizontalStepperStep3: FormGroup;\n    horizontalStepperStep1Errors: any;\n    horizontalStepperStep2Errors: any;\n    horizontalStepperStep3Errors: any;\n\n    constructor(private formBuilder: FormBuilder,\n        private _meinMenuService: MainMenuService,       \n        public dialog: MatDialog,\n        private spinnerService: Ng4LoadingSpinnerService,\n        private commonService:CommonService        \n    ) {\n        // Reactive form errors\n        this.formErrors = {\n            menu: {},\n            menu_url: {}\n        };       \n    }\n\n    ngOnInit() {\n        // Reactive Form      \n        this.MenusList = JSON.parse(localStorage.getItem('userMenuList'));\n        this.MenusList.sort((a,b) => a.MenuName.localeCompare(b.MenuName));\n        this.menuForm = false;\n        this.spinnerService.show();\n        this.mainMenuForm = this.formBuilder.group({          \n            id: 0,\n            'menu': [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.pattern(this.pattern)]), this.duplicateMenuName.bind(this)],            \n            'menu_url': [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.pattern(this.pattern)])],\n        });\n\n        this.mainMenuForm.valueChanges.subscribe(() => {\n            this.onFormValuesChanged();\n        });\n\n\n\n        //subscribe for read set MAT table datasource for GRID\n        this.getGrid();\n\n        //subscribe for read get params\n        // this.paramSubscription = this.actRoute.queryParams.subscribe(\n        //     (params: Params) => {\n        //         this.id = params['id'];\n        //         this.action = params['action'];\n\n        //         if (this.action == 'edit') {\n        //             this.title = \"Edit\";\n        //         }\n        //         //console.log(this.id +\"--\"+this.title);\n        //         if (this.id > 0 && this.title == \"Edit\") {\n        //             this.processEditAction(this.id);\n        //         }\n        //     }\n        // );\n        \n    }\n\n    //Populate Edit from values\n    processEditAction(id) {        \n        this._meinMenuService.getMainMenuById(id)\n            .subscribe(resp => {                        \n                this.response = resp;      \n                this.mainMenuForm.patchValue({\n                    id: this.response.id,\n                    menu: this.response.menu,\n                    menu_url: this.response.menuURL\n                });\n            }, error => this.formErrors = error);\n        this.commonService.scrollTop(\"forms\");\n    }\n    duplicateMenuName() {\n        const q = new Promise((resolve, reject) => {\n            this._meinMenuService.duplicateMenuName({\n                'menu': this.commonService.removeSpaceMaoreThanOne(this.mainMenuForm.controls['menu'].value),\n                'menuURL': this.commonService.removeSpaceMaoreThanOne(this.mainMenuForm.controls['menu_url'].value),\n                'statusid': null,\n                'createdBy': null,\n                'modifiedBy': null,\n                'menuColor': null,\n                'menuIcon': null,\n            }).subscribe((duplicateMenu) => {                             \n                if (duplicateMenu) {\n                    resolve({ 'duplicateMenuName': true });\n                } else {\n                    resolve(null);\n                }\n            }, () => { resolve({ 'duplicateMenuName': true }); });\n        });\n        return q;\n    }\n\n\n    //To destroy param subcribe\n    ngOnDestroy() {\n        //this.paramSubscription.unsubscribe();\n    }\n    // On form values change event\n    onFormValuesChanged() {\n        for (const field in this.formErrors) {\n            if (!this.formErrors.hasOwnProperty(field)) {\n                continue;\n            }\n            // Clear previous errors\n            this.formErrors[field] = {};\n            // Get the control\n            const control = this.mainMenuForm.get(field);\n            if (control && control.dirty && !control.valid) {\n                this.formErrors[field] = control.errors;\n            }\n        }\n    }\n\n    //On form submit\n\n    onMainMenuFormSubmit() {\n        \n        let var_id: string = this.mainMenuForm.value.id;\n        let var_menu: string = this.mainMenuForm.value.menu;\n        let var_menu_url: string = this.mainMenuForm.value.menu_url;\n        if (!this.mainMenuForm.valid) {\n            return;\n        }\n\n        if (this.title == \"Save\") { // on create menu form submit\n            // this.checkInput=false;\n            this.spinnerService.show();\n            this._meinMenuService.saveMainMenu({\n                'menu': this.commonService.removeSpaceMaoreThanOne(var_menu),\n                'menuURL': this.commonService.removeSpaceMaoreThanOne(var_menu_url),\n                'statusid': 1,\n                'createdBy': this.userdata['one'].ID,\n                'modifiedBy': this.userdata['one'].ID,\n                'menuColor': '#2b84ee',\n                'menuIcon': 1,\n            }).subscribe((data) => {\n                this.commonService.showAlertMessage('Menu Added Successfully.');         \n                console.log(\"helllooooo\")     \n//if (data) {\n                    this.status = false;\n///} \n                setTimeout(() => { this.status = false }, 4000)               \n                this.getGrid();\n\n                this.mainMenuForm.reset();\n                this.status = true;               \n            }, error => error => {\n                this.formErrors = error\n                this.commonService.showAlertMessage(error.statusText);\n                this.spinnerService.hide();\n            });\n\n        }\n        else if (this.title == \"Update\") { // on edit menu form\n            this.spinnerService.show();\n            this._meinMenuService.updateMainMenu({\n                'menu': var_menu,\n                'menuURL': var_menu_url,\n                'statusid': 1,\n                'createdBy': this.userdata['one'].ID,\n                'modifiedBy': this.userdata['one'].ID,\n                'menuColor': '#2b84ee',\n                'menuIcon': 1,\n            }, var_id)\n                .subscribe((data) => {\n                    this.commonService.showAlertMessage('Menu Updated Successfully.');                           \n                    this.title = \"Save\";                    \n                    this.getGrid();\n                    this.mainMenuForm.reset();\n                }, error => {\n                    this.formErrors = error\n                    this.commonService.showAlertMessage(error.statusText);              \n                    this.spinnerService.hide();\n                });\n        }\n\n    }\n    applyFilter(filterValue: string) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n    }\n    AddMenu() {\n        this.menuForm = true;\n    }\n    // Update Main Menu\n    updateMainmenu(id) {\n        this.menuForm = true;      \n        this.spinnerService.show();\n        this.processEditAction(id);        \n        this.title = \"Update\";\n       // this.checkInput=true;\n        this.spinnerService.hide();\n        \n        \n    }\n    onGoBack() {\n        this.mainMenuForm.reset();\n        this.menuForm = false;\n    }\n    // Delete main Menu.\n    deleteMainmenu(id) {\n        this._meinMenuService.deleteMainMenu(id)\n            .subscribe((data) => {\n                this.commonService.showAlertMessage('Menu Deleted Successfully.'); \n                this.getGrid();\n                this.mainMenuForm.reset();\n                this.status = true; \n                //this._router.navigate(['/main-menu']);\n            }, error => {\n                this.formErrors = error\n                this.commonService.showAlertMessage(this.formErrors); \n                this.spinnerService.hide();\n            });\n    }\n\n    private getGrid() {        \n        this.menuForm = false;\n       \n        this._meinMenuService.getMainMenu().subscribe(data => {\n            this.data = [];\n            this.users = [];\n            this.data = data;\n            for (let i = 0; i < this.data.length; i++) {\n                this.data[i].sno = i + 1;\n                this.users.push(data[i]);\n            }\n            this.dataSource;\n            \n            this.dataSource = new MatTableDataSource(this.users);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.spinnerService.hide();            \n        }, error => {\n            this.formErrors = error;\n            this.spinnerService.hide();\n        }\n        );\n    }\n\n}\n\n//custom validation for chec unique menu.\nfunction checkUniqueMainMenu(control: FormControl) {\n    let mainManuVal = control.value;\n    // console.log(mainManuVal);\n    // if (email && email.indexOf(\"@\") != -1) {\n    //   let [_, domain] = email.split(\"@\");\n    //   if (domain !== \"codecraft.tv\") {\n    //     return {\n    //       mainMenuExists: {\n    //         parsedDomain: domain\n    //       }\n    //     }\n    //   }\n    // }\n    return {\n        mainMenuExists: {\n            parsedDomain: 'test'\n        }\n    }\n\n\n    // return null;\n}\n\nexport interface MainMenuModel {\n    createdBy: number,\n    createdDate: string,\n    id: number\n    menu: String,\n    menuColor: String,\n    menuIcon: number\n    menuURL: String,\n    modifiedBy: number,\n    modifiedDate: String,\n    sno: number,\n    statusId: number\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MainMenuComponent } from './main-menu.component';\nimport { MainMenuService } from '../../../services/main.menu.service';\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\nimport { MatDialogModule, MatGridListModule, MatMenuModule, MatIconModule, MatToolbarModule, MatSidenavModule, MatNavList, MatListModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from 'src/app/modules/material.modules';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst routes = [\n    {\n        path     : '',\n        component: MainMenuComponent\n    }\n];\n\n@NgModule({\n    declarations: [\n        MainMenuComponent,\n\n    ],\n    imports     : [\n        RouterModule.forChild(routes),\n        Ng4LoadingSpinnerModule.forRoot(),\n        MatGridListModule,\n        MaterialModule,   \n        ReactiveFormsModule       \n    ],\n    providers: [\n        MainMenuService,\n        MatDialogModule,\n        MatNavList,\n    ],\n    exports     : [\n        MainMenuComponent\n    ]\n})\n\nexport class MainMenuModule\n{\n}\n","import { Injectable, Inject } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Router } from '@angular/router';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class MainMenuService {\r\n    myAppUrl: string = environment.apiUrl;\r\n    header:any;\r\n    accessToken:any = JSON.parse(localStorage.getItem('accessToken'));\r\n\r\n    constructor(private _http: HttpClient) {\r\n         this.header = new HttpHeaders({\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Accept': 'application/json'\r\n          });\r\n          console.log(\"environment.apiUrl\");\r\n        //  console.log(environment.apiUrl);\r\n    }\r\n\r\n    getMainMenu() {       \r\n        return this._http.get(this.myAppUrl + '/api/menu?access_token='+this.accessToken.access_token)\r\n            .map((response: Response) =>response)\r\n            .catch(this.errorHandler);\r\n    }\r\n\r\n    getMainMenuById(id: number) {      \r\n        return this._http.get(this.myAppUrl + \"/api/menu/\" +id+'?access_token='+this.accessToken.access_token)\r\n            .map((response: Response) => response)\r\n            .catch(this.errorHandler)\r\n    }\r\n\r\n    saveMainMenu(MainMenu) {    \r\n        return this._http.post(this.myAppUrl + '/api/menu/add?access_token='+this.accessToken.access_token, MainMenu)\r\n            .map((response: Response) => {              \r\n            })\r\n            .catch(this.errorHandler)\r\n    }\r\n\r\n    updateMainMenu(MainMenu,id) {\r\n        return this._http.post(this.myAppUrl + '/api/menu/Put/'+id+'?access_token='+this.accessToken.access_token, MainMenu)\r\n            .map((response: Response) => response)\r\n            .catch(this.errorHandler);\r\n    }\r\n\r\n    deleteMainMenu(id) {\r\n        return this._http.get(this.myAppUrl + \"/api/menu/Delete/\" + id+'?access_token='+this.accessToken.access_token)\r\n            .map((response: Response) => response)\r\n            .catch(this.errorHandler);\r\n    }\r\n    duplicateMenuName(MainMenu){      \r\n        return this._http.post(this.myAppUrl + '/api/menu/Duplicate?access_token='+this.accessToken.access_token, MainMenu)\r\n            .map((response: Response) => response)\r\n            .catch(this.errorHandler);\r\n    }\r\n    errorHandler(error: Response) {\r\n        console.log(error);\r\n        return Observable.throw(error);\r\n    }\r\n}"],"sourceRoot":""}