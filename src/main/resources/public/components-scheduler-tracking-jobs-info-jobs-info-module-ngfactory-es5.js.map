{"version":3,"sources":["webpack:///./node_modules/ng4-loading-spinner/ng4-loading-spinner.d.ts.Ng4LoadingSpinnerComponent.html","webpack:///./src/app/components/scheduler-tracking/jobs-info/jobs-info.component.html","webpack:///./src/app/components/scheduler-tracking/jobs-info/jobs-info.component.ts","webpack:///./src/app/components/scheduler-tracking/jobs-info/jobs-info.module.ts"],"names":[],"mappings":"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","file":"components-scheduler-tracking-jobs-info-jobs-info-module-ngfactory-es5.js","sourcesContent":["<div #spinnerContainer [class]=\"showSpinner ? 'visible spinner center' : 'hidden spinner center'\" [innerHTML]=\"template\">     </div> <div id=\"loading-spinner-text\" class=\"loading-spinner-text\" [style.zIndex]=\"zIndex\" [class]=\"showSpinner ? 'visible loading-text' : 'hidden loading-text'\"> {{loadingText}} </div> ","<ng4-loading-spinner> </ng4-loading-spinner>\n<div class=\"content container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"breadcrumb-section\">\n                <nav aria-label=\"breadcrumb\">\n                    <ol class=\"breadcrumb\">\n                        <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Home</a></li>\n                        <li class=\"breadcrumb-item\"><a [routerLink]=\"['/schedule']\">Schedule Tracking </a></li>\n                        <li class=\"breadcrumb-item active\" aria-current=\"page\">Jobs Info</li>\n                    </ol>\n                </nav>\n            </div>\n\n            <div class=\"clear\"> </div>\n            <div class=\"row-fluid\">\n                <div class=\"panel panel-primary\">\n                    <div class=\"panel-heading\">Jobs Information</div>\n                    <div class=\"panel-body\">\n                        <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\" fusePerfectScrollbar>\n\n                            <div class=\"p-12\" style=\"text-align: right;\" >\n                                <span class=\"mat-raised-button mat-accent\" [routerLink]=\"['/schedule']\"\n                                    color=\"accent\" mat-raised-button=\"\">\n                                    Back\n                                </span>\n                            </div>\n                            <div class=\"p-24\">\n\n\n                                <div class=\"example-header\">\n                                    <mat-form-field>\n                                        <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n                                    </mat-form-field>\n                                </div>\n\n                                <div class=\"example-container mat-elevation-z8\">\n\n                                    <mat-table [dataSource]=\"schedulerDataSource\" matSort>\n\n                                        <ng-container matColumnDef=\"sno\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Sno.</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.sno}}</mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"trackingId\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>PId\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.trackingId}}</mat-cell>\n                                        </ng-container>\n                                        <ng-container matColumnDef=\"operationId\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Job Id\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\" style=\"cursor: pointer;text-decoration: underline;font-weight: 600;color: #014884;\"\n                                                [routerLink]=\"['/divisions/'+row.operationId+'/'+row.jobType]\"> {{row.operationId}}\n                                            </mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"jobType\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Job Name\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.jobType}}</mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"processedDate\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Processed Date\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.processedDate | date:'yyyy-MM-dd' }}\n                                            </mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"startTime\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Start Time\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.startTime}}</mat-cell>\n                                        </ng-container>\n                                        <ng-container matColumnDef=\"endTime\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>End Time\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.endTime}}</mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"jobStatus\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Job Status\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.jobStatus}}</mat-cell>\n                                        </ng-container>\n\n\n                                        <mat-header-row *matHeaderRowDef=\"schedulerDisplayedColumns\"></mat-header-row>\n                                        <mat-row *matRowDef=\"let row; columns: schedulerDisplayedColumns;\">\n                                        </mat-row>\n                                    </mat-table>\n                                    <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 500]\"></mat-paginator>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, ViewChild, OnInit, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog, MatDialogRef } from '@angular/material';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { FuseConfirmDialogComponent } from '../../../components/confirm-dialog/confirm-dialog.component';\nimport { CommonService } from 'src/app/common/common.service';\nimport { SchedulerTrackingService } from '../../../services/scheduler-tracking.service';\nimport { SchedulerTrackingModel } from 'src/app/models/scheduler-tracking.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { DivisionHistoryDialogComponent } from '../../division-history-dialog/division-history-dialog.component';\nimport { ViewEncapsulation } from '@angular/compiler/src/core';\n@Component({\n  selector: 'app-jobs-info',\n  templateUrl: './jobs-info.component.html',\n  styleUrls: ['./jobs-info.component.css'],\n  \n})\nexport class JobsInfoComponent implements OnInit {\n\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n  status: boolean;\n  divisionHistoryDialogRef:MatDialogRef<DivisionHistoryDialogComponent>;\n  schedulerData: any;\n \n \n  schedulerResponse: any;\n  portPattern = \"^[0-9]{4}$\";\n  pattern = \"[a-zA-Z][a-zA-Z ]*\";\n  ipPattern = \"(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\";\n  loggedUserData: any = JSON.parse(localStorage.getItem('userData'));\n  title: string = \"Add\";\n  schedulerDisplayedColumns = ['sno','trackingId', 'operationId', 'jobType', 'processedDate', 'startTime', 'endTime', 'jobStatus'];\n  schedulerDataSource: MatTableDataSource<SchedulerTrackingModel>;\n  @ViewChild(MatPaginator, { static: true }) schedulerPaginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  constructor(   \n    public dialog: MatDialog,\n    private spinnerService: Ng4LoadingSpinnerService,\n    private commonService: CommonService,\n    private route: ActivatedRoute,\n    private schedulerTrackingService: SchedulerTrackingService,\n  ) {\n    \n  }\n\n  ngOnInit() {\n    this.spinnerService.show();\n    this.findTrackingIdJobHistoryInfo();   \n  }\n\n  \n\n \n\n  findTrackingIdJobHistoryInfo() {\n    const schedulerData: SchedulerTrackingModel[] = [];\n    //console.log(JSON.stringify(this.route.snapshot.params['id']))\n    localStorage.setItem(\"pid\", this.route.snapshot.params['id']);\n    this.schedulerTrackingService.findOperationTypesHistoryInfo(this.route.snapshot.params['id']).subscribe((data) => {\n      this.schedulerData = data; \n      //console.log(JSON.stringify(data))     \n      for (let i = 0; i < this.schedulerData.length; i++) {\n        this.schedulerData[i].sno = i + 1;\n        schedulerData.push(this.schedulerData[i]);\n      }\n      this.schedulerDataSource = new MatTableDataSource(schedulerData);\n      this.schedulerDataSource.paginator = this.schedulerPaginator;\n      this.schedulerDataSource.sort = this.sort;\n      this.spinnerService.hide();\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.schedulerDataSource.filter = filterValue;\n  }\n\n  /* viewDivisionDetails(divisionId, id){\n    this.spinnerService.show();    \n    this.schedulerTrackingService.divisionInfo(divisionId, id).subscribe((response) => {     \n      this.spinnerService.hide(); \n       this.divisionHistoryDialogRef = this.dialog.open(DivisionHistoryDialogComponent, {\n        disableClose: false,\n        height: '600px',\n        width: '80%',       \n        data:response\n      });            \n    }, error => this.commonService.showAlertMessage(error));\n   \n    \n  } */\n  \n\n /*  runSchedulerJobById(jobId, runTypeId){\n    console.log(\"runSchedulerJobById: \"+jobId+\" = \"+runTypeId);\n    this.schedulerTrackingService.reRunByIdByType(jobId, runTypeId).subscribe((response) => {      \n      this.schedulerResponse = response;\n     // console.log(\"resp: \" + JSON.stringify(response));\n      this.findAllJobInfo()\n    }, error => this.commonService.showAlertMessage(error));\n    this.commonService.scrollTop(\"forms\");\n  } */\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { JobsInfoComponent } from './jobs-info.component';\r\nimport { MatMenuModule, MatGridListModule } from '@angular/material';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\r\nimport { RepositoryService } from 'src/app/services/repository.service';\r\nimport { MaterialModule } from 'src/app/modules/material.modules';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SchedulerTrackingService } from 'src/app/services/scheduler-tracking.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : '',\r\n        component: JobsInfoComponent,\r\n       \r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports     : [     \r\n        RouterModule.forChild(routes),\r\n        Ng4LoadingSpinnerModule.forRoot(),\r\n        MatMenuModule,\r\n        MatGridListModule,\r\n        CommonModule,\r\n        MaterialModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [\r\n        JobsInfoComponent\r\n    ],\r\n    providers   : [\r\n        RepositoryService,\r\n        SchedulerTrackingService\r\n    ],\r\n    exports     : [\r\n        JobsInfoComponent\r\n    ]\r\n})\r\nexport class JobsInfoModule\r\n{\r\n}\r\n\r\n"],"sourceRoot":""}