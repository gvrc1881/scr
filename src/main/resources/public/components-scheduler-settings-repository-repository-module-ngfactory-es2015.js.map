{"version":3,"sources":["webpack:///./node_modules/@angular/material/icon/typings/index.d.ts.MatIcon.html","webpack:///./node_modules/ng4-loading-spinner/ng4-loading-spinner.d.ts.Ng4LoadingSpinnerComponent.html","webpack:///./src/app/components/scheduler-settings/repository/repository.component.html","webpack:///./src/app/components/scheduler-settings/repository/repository.component.ts","webpack:///./src/app/components/scheduler-settings/repository/repository.module.ts","webpack:///./src/app/payloads/repository.payload.ts"],"names":[],"mappings":"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","file":"components-scheduler-settings-repository-repository-module-ngfactory-es2015.js","sourcesContent":["<ng-content></ng-content>","<div #spinnerContainer [class]=\"showSpinner ? 'visible spinner center' : 'hidden spinner center'\" [innerHTML]=\"template\">     </div> <div id=\"loading-spinner-text\" class=\"loading-spinner-text\" [style.zIndex]=\"zIndex\" [class]=\"showSpinner ? 'visible loading-text' : 'hidden loading-text'\"> {{loadingText}} </div> ","<ng4-loading-spinner> </ng4-loading-spinner>\n<div class=\"content\">\n    <div class=\"\">\n        <div class=\"col-12\">\n                <div class=\"breadcrumb-section\">\n                        <nav aria-label=\"breadcrumb\">\n                            <ol class=\"breadcrumb\">\n                                    <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Home</a></li>\n                                    <li class=\"breadcrumb-item\"><a [routerLink]=\"['/settings']\">Schedule Settings </a></li>\n                                    <li class=\"breadcrumb-item active\" aria-current=\"page\">Repository</li>\n                            </ol>\n                        </nav>\n                      </div>\n\n            <div class=\"clear\"> </div>\n            <div class=\"row-fluid\">\n                <div class=\"panel panel-primary\">\n                    <div class=\"panel-heading\">Repository</div>\n                    <div class=\"panel-body\">\n                        <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\" fusePerfectScrollbar>\n\n                        <div class=\"p-24\">\n                                <div fxLayout=\"column\" fxLayoutAlign=\"start start\" fxLayout.gt-md=\"row\">\n                                    <div class=\"p-12\" style=\"text-align: right;\" *ngIf=\"addPermission\">\n                                        <span class=\"mat-raised-button mat-accent\" (click)=\"AddRepository()\"\n                                            *ngIf=\"!addRepository\" color=\"accent\" mat-raised-button=\"\">\n                                            Add Repository\n                                        </span>\n                                    </div>\n\n\n                                    <form class=\"mat-white-bg mat-elevation-z4 p-24 mr-24 mb-24\" *ngIf=\"addRepository\"\n                                        fxLayout=\"column\" fxLayoutAlign=\"start\" [formGroup]=\"repositoryFormGroup\"\n                                        fxFlex=\"1 0 auto\" (ngSubmit)=\"onAddRepositoryFormSubmit();\">\n                                        <div class=\"panel panel-primary\">\n                                            <div class=\"panel-heading\">{{title}} Repository</div>\n                                            <div class=\"panel-body\">                                                \n\n                                                <div class=\"col-md-12\">\n                                                    <!--Division Code-->\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <input matInput placeholder=\"Division Code\"\n                                                                [formControl]=\"repositoryFormGroup.controls['divisionCode']\" required/>\n                                                            <mat-error\n                                                                *ngIf=\"repositoryFormGroup.controls['divisionCode'].hasError('required')\">\n                                                                Enter Division Code\n                                                            </mat-error>\n                                                             <mat-error\n                                                                *ngIf=\"repositoryFormGroup.controls['divisionCode'].hasError('duplicateDivisionCode')\"\n                                                                class=\"alert alert-danger\">\n                                                                Division Code Already Exits\n                                                            </mat-error> \n                                                        </mat-form-field>\n                                                    </div>\n\n                                                    <!-- Division Name -->\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <input matInput placeholder=\"Division Name\"\n                                                                [formControl]=\"repositoryFormGroup.controls['divisionName']\" required/>\n                                                            <mat-error\n                                                                *ngIf=\"repositoryFormGroup.controls['divisionName'].hasError('required')\">\n                                                                Enter Division Name\n                                                            </mat-error>\n                                                             <mat-error\n                                                                *ngIf=\"repositoryFormGroup.controls['divisionName'].hasError('duplicateDivisionName')\"\n                                                                class=\"alert alert-danger\">\n                                                                Division Name Already Exits\n                                                            </mat-error> \n                                                        </mat-form-field>\n                                                    </div>\n                                                    <!-- Division IP -->\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <input matInput placeholder=\"IP\" ng-ip-address\n                                                                [formControl]=\"repositoryFormGroup.controls['ip']\" required/>\n                                                            <mat-error\n                                                                *ngIf=\"repositoryFormGroup.controls['ip'].hasError('required')\">\n                                                                Enter Division IP\n                                                            </mat-error>\n                                                            <mat-error\n                                                            *ngIf=\"repositoryFormGroup.controls['ip'].hasError('pattern') && repositoryFormGroup.controls['ip'].touched\"\n                                                            class=\"alert alert-danger\">Invalid format (0.0.0.0)</mat-error>\n                                                             <mat-error\n                                                                *ngIf=\"repositoryFormGroup.controls['ip'].hasError('duplicateIP')\"\n                                                                class=\"alert alert-danger\">\n                                                                Division IP Already Exits\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <!-- Division Port -->\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <input matInput placeholder=\"Port\"\n                                                                [formControl]=\"repositoryFormGroup.controls['port']\" required/>\n                                                            <mat-error\n                                                                *ngIf=\"repositoryFormGroup.controls['port'].hasError('required')\">\n                                                                Enter Division Port\n                                                            </mat-error>          \n                                                            <mat-error\n                                                            *ngIf=\"repositoryFormGroup.controls['port'].hasError('pattern') && repositoryFormGroup.controls['port'].touched\"\n                                                            class=\"alert alert-danger\">Only numbers allowed with length 4</mat-error>                                                \n                                                        </mat-form-field>\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-md-12\">\n\n                                                    <!-- Division DB Name -->\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <input matInput placeholder=\"DB Name\"\n                                                                [formControl]=\"repositoryFormGroup.controls['dbName']\" required/>\n                                                            <mat-error\n                                                                *ngIf=\"repositoryFormGroup.controls['dbName'].hasError('required')\">\n                                                                Enter Division DB Name\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                    <!-- Division User Name -->\n                                                    <div class=\"col-md-3\">\n                                                            <mat-form-field fxFlex=\"30\">\n                                                                <input matInput placeholder=\"DB User Name\"\n                                                                    [formControl]=\"repositoryFormGroup.controls['userName']\" required/>\n                                                                <mat-error\n                                                                    *ngIf=\"repositoryFormGroup.controls['userName'].hasError('required')\">\n                                                                    Enter Division DB User Name\n                                                                </mat-error>\n                                                            </mat-form-field>\n                                                        </div>\n                                                        <!-- Division User Name -->\n                                                        <div class=\"col-md-3\">\n                                                                <mat-form-field fxFlex=\"30\">\n                                                                    <input matInput placeholder=\"DB Password\"\n                                                                        [formControl]=\"repositoryFormGroup.controls['password']\" required/>\n                                                                    <mat-error\n                                                                        *ngIf=\"repositoryFormGroup.controls['password'].hasError('required')\">\n                                                                        Enter Division DB Password\n                                                                    </mat-error>\n                                                                </mat-form-field>\n                                                            </div>\n                                                    \n                                                    <div class=\"col-md-3 mt-10\">\n                                                        <div fxFlex=\"10\" fxLayoutAlign=\"center center\" class=\"pr-5 d-inline\"\n                                                            style=\"padding-bottom:10px;\">\n                                                            <button mat-raised-button color=\"accent\"\n                                                                [disabled]=\"repositoryFormGroup.invalid\"\n                                                                class=\"submit-button\" aria-label=\"Submit\">\n                                                                {{title}}\n                                                            </button></div>\n\n                                                            <div class=\"p-12 pl-5 d-inline\">\n                                                                    <span class=\"mat-raised-button mat-warn\"\n                                                                        (click)=\"onGoBack()\" color=\"warn\" mat-raised-button=\"\">\n                                                                        Close\n                                                                    </span>\n                                                                </div>\n                                                                <div [hidden]=\"!status\" style=\"color:darkgreen;text-align: center\">Added\n                                                                        Successfully!!!</div>\n                                                    </div>\n                                                    \n                                                </div>\n                                                \n                                            </div>\n\n                                        </div>\n                                    </form>\n                                </div>\n\n\n                                <div class=\"example-header\">\n                                    <div class=\"col-sm-4\">\n                                    <mat-form-field>\n                                        <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n                                    </mat-form-field>\n                                    </div>\n                                </div>\n                                <div class=\"clear\"></div>\n\n                                <div class=\"example-container mat-elevation-z8\">\n\n                                    <mat-table [dataSource]=\"repositoryDataSource\" matSort>\n\n                                        <ng-container matColumnDef=\"sno\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Sno.</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.sno}}</mat-cell>\n                                        </ng-container>\n\n\n                                        <ng-container matColumnDef=\"repositoryCode\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Division Code\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.repositoryCode}}</mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"repositoryName\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Division Name\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.repositoryName}}</mat-cell>\n                                        </ng-container>\n                                        <ng-container matColumnDef=\"repositoryIp\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>IP\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.repositoryIp}}</mat-cell>\n                                        </ng-container>\n                                        <ng-container matColumnDef=\"repositoryPort\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Port\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.repositoryPort}}</mat-cell>\n                                        </ng-container>\n                                        <ng-container matColumnDef=\"repositoryDbName\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>DB Name</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.repositoryDbName}}</mat-cell>\n                                        </ng-container>\n                                        <ng-container matColumnDef=\"repositoryUser\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>User Name\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.repositoryUser}}</mat-cell>\n                                        </ng-container>\n                                        <ng-container matColumnDef=\"repositoryPassword\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Password\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.repositoryPassword}}</mat-cell>\n                                        </ng-container>\n                                        <!-- <ng-container matColumnDef=\"isActive\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.isActive}}</mat-cell>\n                                        </ng-container> -->\n                                        <ng-container matColumnDef=\"id\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\">\n                                                <a mat-icon-button matTooltip=\"Edit\">\n                                                    <button mat-icon-button matTooltip=\"Edit\" *ngIf=\"editPermission\"\n                                                        (click)=\"editRepositoryById(row.repositoryId)\">\n                                                        <mat-icon style=\"color: rgb(0, 145, 234);\">edit</mat-icon>\n                                                    </button>\n                                                </a>\n                                                <button mat-icon-button matTooltip=\"Delete\" *ngIf=\"deletePermission\"\n                                                    (click)=\"deleteRepository(row.repositoryId)\">\n                                                    <mat-icon style=\"color: rgb(244, 67, 54);\">delete</mat-icon>\n                                                </button>\n                                            </mat-cell>\n                                        </ng-container>\n                                        <mat-header-row *matHeaderRowDef=\"repositoryDisplayedColumns\"></mat-header-row>\n                                        <mat-row *matRowDef=\"let row; columns: repositoryDisplayedColumns;\">\n                                        </mat-row>\n                                    </mat-table>\n                                    <div [hidden]=\"!status\" style=\"color: rgb(244, 67, 54);text-align: center\">delected\n                                        Successfully!!!\n                                    </div>\n                                    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, ViewChild, OnInit, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog, MatDialogRef } from '@angular/material';\nimport { UsersService } from '../../../services/users.service';\nimport { UsersModel } from '../../../models/users.model';\nimport { Subscription } from 'rxjs';\nimport { RepositoryPayload } from '../../../payloads/repository.payload';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { FuseConfirmDialogComponent } from '../../../components/confirm-dialog/confirm-dialog.component';\nimport { RepositoryModel } from 'src/app/models/repository.model';\nimport { RepositoryService } from 'src/app/services/repository.service';\nimport { Constants } from 'src/app/common/constants';\nimport { CommonService } from 'src/app/common/common.service';\n\n@Component({\n  selector: 'app-repository',\n  templateUrl: './repository.component.html',\n  styleUrls: ['./repository.component.css']\n})\nexport class RepositoryComponent implements OnInit {\n\n  rolePermission:boolean=true;\n  editPermission:boolean=true;\n  addPermission:boolean=true;\n  deletePermission:boolean=true;\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n  status: boolean;\n  addRepository: boolean = false;\n  saveRepository: boolean;\n  cloneUpdateRepository: boolean = true;\n  repositoryData: any;\n  repositoryFormGroup: FormGroup;\n  repositoryErrors: any;\n  repositoryResponse: any;\n  portPattern = \"^[0-9]{4}$\";\n  pattern = \"[a-zA-Z][a-zA-Z ]*\";\n  ipPattern = \"(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\";\n  loggedUserData: any = JSON.parse(localStorage.getItem('userData'));\n  title: string = \"Add\";\n  repositoryDisplayedColumns = ['sno', 'repositoryCode', 'repositoryName', 'repositoryIp', 'repositoryPort', 'repositoryDbName', 'repositoryUser', 'repositoryPassword', 'id'];\n  repositoryDataSource: MatTableDataSource<RepositoryModel>;\n  @ViewChild(MatPaginator, { static: true }) repositoryPaginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  constructor(\n    private formBuilder: FormBuilder,\n    private repositoryService: RepositoryService,\n    public dialog: MatDialog,\n    private spinnerService: Ng4LoadingSpinnerService,\n    private commonService: CommonService,\n  ) {\n    this.repositoryErrors = {\n      divisionCode: {},\n      divisionName: {},\n      ip: {},\n      port: {},\n      dbName: {},\n      userName: {},\n      password: {}\n    };\n  }\n\n  ngOnInit() {\n    this.rolePermission = this.commonService.rolePermission();\n    this.addPermission = this.commonService.getPermission(\"Add\");\n    this.editPermission = this.commonService.getPermission(\"Edit\");\n    this.deletePermission = this.commonService.getPermission(\"Delete\");\n    this.spinnerService.show();\n    this.findAllRepositoryData();\n    this.repositoryFormGroup = this.formBuilder.group({     \n      'divisionCode': [null, Validators.compose([Validators.required]), this.duplicateDivisionCode.bind(this)], \n      'divisionName': [null, Validators.compose([Validators.required]) , this.duplicateDivisionName.bind(this)], \n      'ip': [null, Validators.compose([Validators.required, Validators.pattern(this.ipPattern)]), this.duplicateIP.bind(this)], \n      'port': [null, Validators.compose([Validators.required, Validators.pattern(this.portPattern)])],\n      'dbName': [null, Validators.compose([Validators.required])],\n      'userName': [null, Validators.compose([Validators.required])],\n      'password': [null, Validators.compose([Validators.required])]\n    });\n    this.repositoryFormGroup.valueChanges.subscribe(() => {\n      this.onFormValuesChanged();\n    });\n  }\n  onFormValuesChanged() {\n    for (const field in this.repositoryErrors) {\n      if (!this.repositoryErrors.hasOwnProperty(field)) {\n        continue;\n      }\n      this.repositoryErrors[field] = {};\n      const control = this.repositoryFormGroup.get(field);\n      if (control && control.dirty && !control.valid) {\n        this.repositoryErrors[field] = control.errors;\n      }\n    }\n  }\n\n  duplicateIP() {\n    const q = new Promise((resolve, reject) => {\n      if(this.title == Constants.EVENTS.UPDATE){\n        resolve(null);\n      }else{\n      let ip = this.repositoryFormGroup.controls['ip'].value;\n      ip = ip.replace(/\\./g, '*');     \n      this.repositoryService.existsRepositoryIp(ip).subscribe((duplicate) => {        \n        if (duplicate) {\n          resolve({ 'duplicateIP': true });\n        } else {\n          resolve(null);\n        }\n      }, () => { resolve({ 'duplicateIP': true }); });\n    }\n    });\n    return q;\n  }\n\n  duplicateDivisionName() {\n    const q = new Promise((resolve, reject) => {     \n      if(this.title == Constants.EVENTS.UPDATE){\n        resolve(null);\n      }else{ \n      this.repositoryService.existsRepositoryName(this.repositoryFormGroup.controls['divisionName'].value).subscribe((duplicate) => {\n        if (duplicate) {\n          resolve({ 'duplicateDivisionName': true });\n        } else {\n          resolve(null);\n        }\n      }, () => { resolve({ 'duplicateDivisionName': true }); });\n    }\n    });\n    return q;\n  }\n  duplicateDivisionCode() {\n    const q = new Promise((resolve, reject) => {      \n      //console.log(\"title: \"+this.title);\n      if(this.title == Constants.EVENTS.UPDATE){\n        resolve(null);\n      }else{\n      this.repositoryService.existsRepositoryCode(this.repositoryFormGroup.controls['divisionCode'].value).subscribe((duplicate) => {\n        if (duplicate) {\n          resolve({ 'duplicateDivisionCode': true });\n        } else {\n          resolve(null);\n        }\n      }, () => { resolve({ 'duplicateDivisionCode': true }); });\n    }\n    });\n    return q;\n  }\n\n\n\n  onAddRepositoryFormSubmit() {\n    let divisionCode: string = this.repositoryFormGroup.value.divisionCode;\n    let divisionName: string = this.repositoryFormGroup.value.divisionName;\n    let ip: string = this.repositoryFormGroup.value.ip;\n    let port: number = this.repositoryFormGroup.value.port;\n    let dbName: string = this.repositoryFormGroup.value.dbName;\n    let userName: string = this.repositoryFormGroup.value.userName;\n    let password: string = this.repositoryFormGroup.value.password;\n\n    if (!this.repositoryFormGroup.valid) {\n      return;\n    }\n   // console.log('title: ' + this.title);\n    if (this.title == Constants.EVENTS.ADD || this.title == Constants.EVENTS.SAVE) {\n      RepositoryPayload.ADD_PAYLOAD.createdBy = this.loggedUserData.id;\n      RepositoryPayload.ADD_PAYLOAD.modifiedBy = this.loggedUserData.id;\n      RepositoryPayload.ADD_PAYLOAD.repositoryCode = divisionCode;\n      RepositoryPayload.ADD_PAYLOAD.repositoryName = divisionName;\n      RepositoryPayload.ADD_PAYLOAD.repositoryIp = ip;\n      RepositoryPayload.ADD_PAYLOAD.repositoryPort = port;\n      RepositoryPayload.ADD_PAYLOAD.repositoryDbName = dbName;\n      RepositoryPayload.ADD_PAYLOAD.repositoryUser = userName;\n      RepositoryPayload.ADD_PAYLOAD.repositoryPassword = password;\n      //console.log('Add Payload =' + JSON.stringify(RepositoryPayload.ADD_PAYLOAD));\n      this.spinnerService.show();\n      this.addRepository = false;\n      this.repositoryService.AddRepository(RepositoryPayload.ADD_PAYLOAD).subscribe((response) => {\n        //console.log('Response: ' + JSON.stringify(response));\n        this.spinnerService.hide();\n        this.repositoryResponse = response;\n        if (!!this.repositoryResponse && this.repositoryResponse.code == 200) {\n          this.commonService.showAlertMessage(this.repositoryResponse.message);\n          this.saveRepository = false;\n          this.findAllRepositoryData();\n          this.repositoryFormGroup.reset();\n          this.addRepository = false;\n        } else {\n          this.commonService.showAlertMessage(\"Repository Addition Failed\");\n        }\n      },\n        error => error => {\n          this.repositoryErrors = error\n          console.log(' >>> ERROR ' + error);\n          this.commonService.showAlertMessage(this.repositoryErrors);\n          this.spinnerService.hide();\n        })\n    }\n    else if (this.title == Constants.EVENTS.UPDATE) {\n      this.spinnerService.show();\n      this.saveRepository = false;\n      //console.log(\"repositoryResponse: \" + JSON.stringify(this.repositoryResponse));\n      let repositoryId: number = this.repositoryResponse.repositoryId;\n      RepositoryPayload.UPDATE_PAYLOAD.repositoryId = repositoryId;\n      RepositoryPayload.UPDATE_PAYLOAD.modifiedBy = this.loggedUserData.id;\n      RepositoryPayload.UPDATE_PAYLOAD.repositoryCode = divisionCode;\n      RepositoryPayload.UPDATE_PAYLOAD.repositoryName = divisionName;\n      RepositoryPayload.UPDATE_PAYLOAD.repositoryIp = ip;\n      RepositoryPayload.UPDATE_PAYLOAD.repositoryPort = port;\n      RepositoryPayload.UPDATE_PAYLOAD.repositoryDbName = dbName;\n      RepositoryPayload.UPDATE_PAYLOAD.repositoryUser = userName;\n      RepositoryPayload.UPDATE_PAYLOAD.repositoryPassword = password;\n      //console.log(\"Update Payload =\" + JSON.stringify(RepositoryPayload.UPDATE_PAYLOAD))\n      this.repositoryService.updateRepository(RepositoryPayload.UPDATE_PAYLOAD).subscribe((response) => {\n        //console.log('Update Response: ' + JSON.stringify(response));\n        this.spinnerService.hide();\n        this.repositoryResponse = response;\n        if (!!this.repositoryResponse && this.repositoryResponse.code == 200) {\n          this.commonService.showAlertMessage(this.repositoryResponse.message);\n          this.saveRepository = false;\n          this.findAllRepositoryData();\n          this.repositoryFormGroup.reset();\n          this.addRepository = false;\n        } else {\n          this.commonService.showAlertMessage(\"Repository Updating Failed\");\n        }\n      },\n        error => error => {\n          this.repositoryErrors = error\n          console.log(' >>> ERROR ' + error);\n          this.commonService.showAlertMessage(\"Repository Updating Failed\");\n          this.spinnerService.hide();\n        })\n    }\n\n\n  }\n\n  deleteRepository(id) {\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n      disableClose: false\n    });\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete the selected division?';\n    this.confirmDialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.spinnerService.show();\n        this.repositoryService.deleteRepository(id)\n          .subscribe((response) => {\n            this.repositoryResponse = response;\n            if (!!this.repositoryResponse && this.repositoryResponse.code == 200) {\n              this.commonService.showAlertMessage(this.repositoryResponse.message);\n              this.saveRepository = false;\n              this.findAllRepositoryData();\n              this.repositoryFormGroup.reset();\n              this.addRepository = false;\n            } else {\n              this.commonService.showAlertMessage(\"Repository Deletion Failed\");\n            }\n          }, error => {\n            this.repositoryErrors = error\n            console.log(' >>> ERROR ' + error);\n            this.commonService.showAlertMessage(\"Repository Deletion Failed\");\n            this.spinnerService.hide();\n          });\n      }\n      this.confirmDialogRef = null;\n    });\n\n\n    this.spinnerService.hide();\n\n  }\n\n  findAllRepositoryData() {\n    const repositoryData: RepositoryModel[] = [];\n    this.repositoryService.getAllRepositories().subscribe((data) => {\n      this.repositoryData = data;\n      for (let i = 0; i < this.repositoryData.length; i++) {\n        if (!this.rolePermission) {\n          if (this.repositoryData[i].repositoryCode == this.loggedUserData.divisionCode) {\n            this.repositoryData[i].sno = i + 1;\n            repositoryData.push(this.repositoryData[i]);\n          }\n        }\n        else{\n          this.repositoryData[i].sno = i + 1;\n          repositoryData.push(this.repositoryData[i]);\n        }\n      }\n      this.repositoryDataSource = new MatTableDataSource(repositoryData);\n      this.repositoryDataSource.paginator = this.repositoryPaginator;\n      this.repositoryDataSource.sort = this.sort;\n      this.spinnerService.hide();\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.repositoryDataSource.filter = filterValue;\n  }\n\n  repositoryEditAction(id: number) {\n    this.addRepository = true;\n    this.repositoryService.getRepositoryById(id).subscribe((response) => {\n      this.cloneUpdateRepository = false;      \n      this.saveRepository = false;      \n      this.repositoryResponse = response;\n      //console.log(\"resp: \" + JSON.stringify(response));\n      this.repositoryFormGroup.patchValue({\n        divisionCode: this.repositoryResponse.repositoryCode,\n        divisionName: this.repositoryResponse.repositoryName,\n        ip: this.repositoryResponse.repositoryIp,\n        dbName: this.repositoryResponse.repositoryDbName,\n        port: this.repositoryResponse.repositoryPort,\n        userName: this.repositoryResponse.repositoryUser,\n        password: this.repositoryResponse.repositoryPassword,\n      });\n    }, error => this.repositoryErrors = error);\n    this.commonService.scrollTop(\"forms\");\n  }\n\n  editRepositoryById(id) {\n    this.spinnerService.show();\n    this.addRepository = true;\n    this.cloneUpdateRepository = false;\n    this.repositoryEditAction(id);\n    this.title = \"Update\";\n    this.spinnerService.hide();\n  }\n\n  AddRepository() {\n    this.addRepository = true;\n    this.title = \"Add\";\n  }\n  onGoBack() {\n    this.repositoryFormGroup.reset();\n    this.saveRepository = false;\n    this.cloneUpdateRepository = true;\n    this.addRepository = false;\n    this.title = 'Save';\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RepositoryComponent } from './repository.component';\r\nimport { MatMenuModule, MatGridListModule } from '@angular/material';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MaterialModule } from 'src/app/modules/material.modules';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { RepositoryService } from 'src/app/services/repository.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : '',\r\n        component: RepositoryComponent,\r\n       \r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports     : [     \r\n        RouterModule.forChild(routes),\r\n        Ng4LoadingSpinnerModule.forRoot(),\r\n        MatMenuModule,\r\n        MatGridListModule,\r\n        CommonModule,\r\n        MaterialModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [\r\n        RepositoryComponent,        \r\n    ],\r\n    providers   : [        \r\n        RepositoryService\r\n    ],\r\n    exports     : [\r\n        RepositoryComponent\r\n    ]\r\n})\r\nexport class RepositoryModule\r\n{\r\n}\r\n\r\n","export const RepositoryPayload = {\r\n    ADD_PAYLOAD: {\r\n        \"createdBy\": 1,\r\n        \"modifiedBy\": 1,\r\n        \"repositoryCode\": \"\",\r\n        \"repositoryName\": \"\",\r\n        \"repositoryIp\": \"\",\r\n        \"repositoryDbName\": \"\",\r\n        \"repositoryPassword\": \"\",\r\n        \"repositoryPort\": 0,\r\n        \"repositoryUser\": \"\"\r\n    },\r\n    UPDATE_PAYLOAD: {\r\n        \"repositoryId\": 1,\r\n        \"modifiedBy\": 1,\r\n        \"repositoryCode\": \"\",\r\n        \"repositoryName\": \"\",\r\n        \"repositoryIp\": \"\",\r\n        \"repositoryDbName\": \"\",\r\n        \"repositoryPassword\": \"\",\r\n        \"repositoryPort\": 0,\r\n        \"repositoryUser\": \"\"\r\n    },\r\n};"],"sourceRoot":""}