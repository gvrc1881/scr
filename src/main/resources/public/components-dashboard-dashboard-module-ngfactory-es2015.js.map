{"version":3,"sources":["webpack:///./node_modules/angular-fusioncharts/src/fusioncharts.component.d.ts.FusionChartsComponent.html","webpack:///./node_modules/ng4-loading-spinner/ng4-loading-spinner.d.ts.Ng4LoadingSpinnerComponent.html","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/dashboard/dashboard.module.ts","webpack:///./src/app/services/dashboard.service.ts"],"names":[],"mappings":"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","file":"components-dashboard-dashboard-module-ngfactory-es2015.js","sourcesContent":["\n    <div attr.id=\"container-{{ containerId }}\" style=\"width:100%;height:100%\">\n      {{ placeholder }}\n    </div>\n  ","<div #spinnerContainer [class]=\"showSpinner ? 'visible spinner center' : 'hidden spinner center'\" [innerHTML]=\"template\">     </div> <div id=\"loading-spinner-text\" class=\"loading-spinner-text\" [style.zIndex]=\"zIndex\" [class]=\"showSpinner ? 'visible loading-text' : 'hidden loading-text'\"> {{loadingText}} </div> ","<ng4-loading-spinner> </ng4-loading-spinner>\n<div class=\"clearfix\"> </div>\n<div class=\"content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <!--   <div class=\"breadcrumb-section\">\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n            <li class=\"breadcrumb-item\"><a href=\"#\">Library</a></li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">Data</li>\n          </ol>\n        </nav>\n      </div> -->\n\n      <!-- <div class=\"row-fluid\">\n        <div class=\"span12\">\n          <h3 class=\"page-title\">\n            Application Settings\n          </h3>\n        </div>\n      </div>\n      <mat-grid-list cols=\"5\" rowHeight=\"100px\">\n        <div class=\"dashboard-blocks\">\n          <a *ngFor=\"let tile of MenusList\" [routerLink]=\"['/'+tile.menuUrl]\">\n\n            <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\" [style.background]=\"tile.color\" class=\"block-view\">\n              <span> <i class=\"{{tile.icon}}\"></i> </span> {{tile.menuName}}\n            </mat-grid-tile>\n          </a>\n        </div>\n      </mat-grid-list> -->\n    </div>\n  </div>\n  <div class=\"row\" style=\"margin-top: 5%;\">\n    <div class=\"col-12\">\n      <div class=\"row-fluid\">\n        <!--        <div class=\"panel panel-primary\">\n          <div class=\"panel-heading\">Graphs</div>\n          <div class=\"panel-body\"> -->\n\n        <!-- Current Date Tracking Info Graphs -->\n        <div class=\"col-md-12\">\n          <div class=\"panel panel-primary\">\n            <div class=\"panel-heading\">Tracking Info Graphs</div>\n            <div class=\"panel-body\">\n              <div class=\"col-md-4 col-lg-4\" style=\"display: none\">\n                <div class=\"panel panel-primary\">\n                  <div class=\"panel-heading\">Division Wise</div>\n                  <div class=\"panel-body\">\n                    <fusioncharts [width]=\"width\" [height]=\"height\" type=\"Column3D\" dataFormat=\"JSON\"\n                      [dataSource]=\"lastProcessedDivisionDataSource\"></fusioncharts>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-6 col-lg-6\">\n                <div class=\"panel panel-primary\">\n                  <div class=\"panel-heading\">Jobs Wise</div>\n                  <div class=\"panel-body\">\n                    <fusioncharts [width]=\"width\" [height]=\"height\" type=\"scrollstackedcolumn2d\" [dataFormat]=\"dataFormat\"\n                      [dataSource]=\"lastProcessedJobsDataSource\"\n                      (dataplotRollOver)=\"findLastProcessedOperationTypeDataSource($event)\">\n                    </fusioncharts>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-6 col-lg-6\">\n                <div class=\"panel panel-primary\">\n                  <div class=\"panel-heading\">Operation Types Wise</div>\n                  <div class=\"panel-body\">\n                    <fusioncharts [width]=\"width\" [height]=\"height\" [type]=\"multiBarType\" [dataFormat]=\"dataFormat\"\n                      [dataSource]=\"lastProcessedOperationTypeDataSource\">\n                    </fusioncharts>\n                  </div>\n                </div>\n              </div>\n              <!-- Last One Week Division Wise Info Graphs -->\n              <div class=\"col-md-12 col-lg-12\">\n                <div class=\"panel panel-primary\">\n                  <div class=\"panel-heading\">Last One Week Division Wise Tracking Info Graphs</div>\n                  <div class=\"panel-body\">\n                    <div class=\"col-md-12\">\n                      <fusioncharts [width]=\"widthone\" [height]=\"heightone\" [type]=\"type\" [dataFormat]=\"dataFormat\" class=\"division-week-chat\"\n                        [dataSource]=\"lastOneWeekDivisionsDataSourceObj\" >\n                      </fusioncharts>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!--  </div>\n            </div> -->\n\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { DashboardService } from 'src/app/services/dashboard.service';\ndeclare function loadData(id:number, name:string, image:any);\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent implements OnInit {\n  MenusList: any = [];\n  tiles: Tile[] = [];\n  loggedUserData: any = JSON.parse(localStorage.getItem('userData'));\n\n  lastProcessedDivisionDataSource: any = {};\n  lastProcessedJobsDataSource: any = {};\n  lastProcessedOperationTypeDataSource: any = {};\n  lastOneWeekDivisionsDataSourceObj: any = {};\n\n\n  operationTypesDataSet: any = [];\n  dashboardResponse: any;\n\n  barDataSource: Object;\n  jobsDataSource: Object;\n  operationTypesDataSource: Object;\n\n  widthone = 850;\n  heightone = 400;\n  type = \"mscolumn3d\";\n  dataFormat = \"json\";\n\n  width = 400;\n  height = 300;\n\n  multiBarType = \"mscolumn3d\";\n  operationTypesMultiBarDataSource: any = {};\n\n\n  constructor(\n    private spinnerService: Ng4LoadingSpinnerService,\n    private dashboardService: DashboardService,\n  ) {\n\n\n  }\n\n  ngOnInit() {\n    loadData(127,\"Phanendra\",\"\");\n    this.spinnerService.show();\n    this.findDashboardData();\n    //location.reload();\n    \n    this.MenusList = [\n     // { ID: 6, menuName: 'Energy Bill Payments', menuUrl: 'home', icon: \"fa fa-area-chart\", color: \"#64aeed\", isSelected: true },\n      { ID: 2, menuName: 'Reports', menuUrl: 'home', icon: \"fa fa-area-chart\", color: \"#64aeed\", isSelected: true },\n      { ID: 3, menuName: 'Schedule Settings', menuUrl: 'settings', icon: \"fa fa-cogs\", color: \"#efb44e\", isSelected: false },\n      { ID: 4, menuName: 'Schedule Tracking', menuUrl: 'schedule', icon: \"fa fa-briefcase\", color: \"#ff5f4f\", isSelected: false },\n      { ID: 5, menuName: 'Masters', menuUrl: 'masters', icon: \"fa fa-wrench\", color: \"#715fb7\", isSelected: false }];\n\n   \n\n  }\n\n\n  findLastProcessedDivisionDataSource() {\n   //console.log('data:::'+JSON.stringify(this.dashboardResponse));\n    var divisionNameArray = this.dashboardResponse.lastOneWeekDetails\n    .map(item => this.loggedUserData.divisionCode === 'All' ? item.divisionName : item.divisionCode)\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n\n    //console.log('divisionNameArray: '+JSON.stringify(divisionNameArray));\n    //console.log(JSON.stringify(this.loggedUserData.divisionCode))\n    var datapoints= [];\n    for(var k=0;k<divisionNameArray.length;k++){\n      var sum = 0;\n      this.dashboardResponse.lastProcessedDetails.filter((data) => {\n        if(this.loggedUserData.divisionCode === 'All'){\n         // console.log(data)\n          if(data.divisionName === divisionNameArray[k]){\n              sum += data.successTables + data.failedTables;\n            }\n        }else if(this.loggedUserData.divisionCode == divisionNameArray[k]){\n          if(data.divisionCode === divisionNameArray[k]){\n            sum += data.successTables + data.failedTables;\n          }\n        }\n      //console.log(\"sum value::\"+sum);\n    });\n    datapoints.push({\n      label:divisionNameArray[k],\n      value:sum\n    })\n  }\n  //console.log(JSON.stringify(datapoints));\n    return {\n      chart: {\n        caption: 'Division Wise [' + this.dashboardResponse.lastProcessedDetails[this.dashboardResponse.lastProcessedDetails.length-1].date + ']',\n        xAxisName: 'Division Names',\n        yAxisName: 'Tables Count',\n        numberSuffix: 'K',\n        theme: 'fusion'\n      },\n      data: datapoints/* [\n        { label: this.dashboardResponse.lastProcessedDetails[0].divisionName, value: sum }\n      ] */\n    };\n  }\n\n  findLastProcessedJobsDataSource() {\n   \n    var jobTypes = this.dashboardResponse.lastProcessedDetails\n      .map(item => item.jobType)\n      .filter((value, index, self) =>  self.indexOf(value) === index);\n\n      var divisionNameArray = this.dashboardResponse.lastOneWeekDetails\n      .map(item => this.loggedUserData.divisionCode === 'All' ? item.divisionName : item.divisionCode)\n      .filter((value, index, self) => self.indexOf(value) === index);\n  //console.log('divisionNameArray= '+JSON.stringify(divisionNameArray))\n    var job1 = 0;\n    var job2 = 0;\n    this.dashboardResponse.lastProcessedDetails.filter((data) => {\n      if (data.jobType == jobTypes[0]) {\n        job1 += data.successTables + data.failedTables;\n      }\n      else {\n        job2 += data.successTables + data.failedTables;\n      }\n\n    });\n    let category = []\n    for(let i=0;i<divisionNameArray.length;i++){\n      category.push({\n        label:divisionNameArray[i]     \n      })\n    };\n    //console.log('category: '+JSON.stringify(category))\n    return {\n      chart: {\n        caption: 'Divisions Wise ',\n        xAxisName: 'Division Names',\n        yAxisName: 'Tables Count',\n        numberSuffix: 'K',\n        theme: 'fusion',\n        plottooltext:\n        \"<b>Job Type : $seriesname</b> <br> \"+\n        \"<b>Value : $value</b> \",\n      },\n      categories: [\n        {\n          category: category\n        }\n      ],\n      dataset: [\n        {\n        seriesname: jobTypes[0],\n        data: [\n          {\n            value: job1\n          }\n        ]\n      },\n      {\n        seriesname: jobTypes[1],\n        data: [\n          {\n            value: job2\n          }\n        ]\n      }        \n      ]\n    };\n  }\n\n  findLastProcessedOperationTypeDataSource(jobName) {    \n    this.lastProcessedOperationTypeDataSource = {};\n    if (!!jobName.dataObj) {\n      jobName = jobName.dataObj.datasetName;\n    }\n    this.lastProcessedOperationTypeDataSource = {\n      chart: {\n        caption: jobName + ' Job Division Wise [' + this.dashboardResponse.lastProcessedDetails[this.dashboardResponse.lastProcessedDetails.length-1].date + ']',\n        xaxisname: \"Division Names\",\n        yaxisname: \"Tables Count\",\n        formatnumberscale: \"1\",\n        plottooltext:\n          \"<b>$dataValue</b> $label in <b>$seriesName</b> Operation Type\",\n        theme: \"fusion\",\n        drawcrossline: \"1\"\n      },\n      categories: [\n        {\n          category: [\n            {\n              label: \"Success Tables\"\n            },\n            {\n              label: \"Failed Tables\"\n            }\n          ]\n        }\n      ],\n      dataset: this.prepareOperationTypesDataSet(jobName)\n    };\n  }\n  prepareOperationTypesDataSet(jobName) {\n    return [\n      {\n        seriesname: \"CREATE\",\n        data: this.findOperationTypePoints(jobName, 'CREATE')\n      },\n      {\n        seriesname: \"UPDATE\",\n        data: this.findOperationTypePoints(jobName, 'UPDATE')\n      },\n      {\n        seriesname: \"DELETE\",\n        data: this.findOperationTypePoints(jobName, 'DELETE')\n      }\n    ]\n  }\n\n  findOperationTypePoints(jobName, type) {\n    var data = [];\n    this.dashboardResponse.lastProcessedDetails.filter((values) => {\n      if (values.jobType == jobName && values.operationType == type) {\n        data.push({\n          value: values.successTables\n        }, {\n            value: values.failedTables\n          }\n        )\n      }\n    });\n    return data;\n  }\n\n  findLastOneWeekDivisionsDataSource() {\n    var divisionNameArray = this.dashboardResponse.lastOneWeekDetails\n      .map(item => this.loggedUserData.divisionCode === 'All' ? item.divisionName : item.divisionCode)\n      .filter((value, index, self) => self.indexOf(value) === index);\n    this.lastOneWeekDivisionsDataSourceObj = {\n      chart: {\n        caption: \"Last One Week Division Wise Tracking Info\",\n        xaxisname: \"Dates\",\n        yaxisname: \"Tables Count\",\n        formatnumberscale: \"1\",\n        plottooltext:\n          \"Division <b>$seriesName</b> Tables Count <b>$dataValue</b>  in $label\",\n        theme: \"fusion\"\n      },\n      categories: [\n        {\n          category: this.findLastOneWeekDates()\n        }\n      ],\n      dataset: this.findLastOneWeekDataSet(divisionNameArray)\n    };\n  }\n\n  findLastOneWeekDataSet(divisionNameArray) {\n    var dates = this.findLastOneWeekDates();\n    var dataset = [];\n    for (var d = 0; d < divisionNameArray.length; d++) {\n      var data = [];\n      for (var i = 0; i < dates.length; i++) {\n        data.push(this.getDataSet(dates[i].label));\n      }\n      dataset.push({\n        seriesname: divisionNameArray[d],\n        data: data\n      })\n    }\n    return dataset;\n  }\n  getDataSet(date) {\n    const jobData = this.dashboardResponse.lastOneWeekDetails.filter((values) => {\n      return values.date === date;\n    });\n    var sum = 0;\n    !!jobData && jobData.filter((data) => {\n      sum += data.successTables + data.failedTables\n    });\n    return { value: sum };\n  }\n\n  findLastOneWeekDates() {\n    var divisionNameArray = this.dashboardResponse.lastOneWeekDetails\n    .map(item => item.divisionName)\n    .filter((value, index, self) => self.indexOf(value) === index);\n    console.log('divisionNameArray: '+JSON.stringify(divisionNameArray));\n    \n    var datesArray = this.dashboardResponse.lastOneWeekDetails\n      .map(item => item.date)\n      .filter((value, index, self) => \n        //console.log('value: '+JSON.stringify(self));\n        self.indexOf(value) === index);\n      datesArray.sort();      \n      datesArray.reverse();    \n      console.log(datesArray)  \n      var len = !!datesArray && datesArray.length <= 7 ? datesArray.length : 7\n    var dates = [];\n    for (var i = 0; i < len; i++) {\n      dates.push({\n        label: datesArray[i]\n      });\n    }\n    return dates;\n  }\n\n\n  startGraphs() {\n    this.lastProcessedDivisionDataSource = this.findLastProcessedDivisionDataSource();\n    this.lastProcessedJobsDataSource = this.findLastProcessedJobsDataSource();\n    this.findLastProcessedOperationTypeDataSource('DIVISIONTOSTAGING');\n    this.findLastOneWeekDivisionsDataSource();\n    this.spinnerService.hide();\n  }\n\n  findDashboardData() {\n\n    this.dashboardService.findDashboardData(this.loggedUserData.divisionCode).subscribe(response => {\n      this.dashboardResponse = response;      \n      if(response){\n       console.log(JSON.stringify(response));\n        this.startGraphs();\n      }\n     // this.spinnerService.hide();\n    }, error => {\n      console.log(\"ERROR >>> \" + error)\n    });\n  }\n\n\n}\n\n\nexport interface Tile {\n  color: string;\n  cols: number;\n  rows: number;\n  text: string;\n  url: string;\n  icon: string\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\nimport { MatMenuModule, MatGridListModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\nimport { FusionChartsModule } from 'angular-fusioncharts';\nimport { DashboardService } from 'src/app/services/dashboard.service';\n\nconst routes: Routes = [\n    {\n        path     : '',\n        component: DashboardComponent,\n       \n    }\n];\n\n@NgModule({\n    imports     : [     \n        RouterModule.forChild(routes),\n        Ng4LoadingSpinnerModule.forRoot(),\n        MatMenuModule,\n        MatGridListModule,\n        CommonModule,\n        FusionChartsModule\n    ],\n    declarations: [\n        DashboardComponent\n    ],\n    providers   : [\n        Ng4LoadingSpinnerService,\n        DashboardService\n    ],\n    exports     : [\n        DashboardComponent\n    ]\n})\nexport class DashboardModule\n{\n}\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { TimeIntervalModel } from '../models/time-interval.model';\r\n@Injectable()\r\nexport class DashboardService {\r\n    myAppUrl: string = environment.apiUrl;\r\n    header: any;\r\n    accessToken: any = JSON.parse(localStorage.getItem('accessToken'));\r\n    constructor(private http: HttpClient) {\r\n        this.header = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `Bearer ${this.accessToken}`\r\n        });\r\n    }\r\n\r\n    findDashboardData(divisionCode: string) {\r\n        return this.http.get(environment.apiUrl + '/dashboard/' + divisionCode, { headers: this.header });\r\n    }\r\n\r\n    existsTimeInterval(timeInterval: number) {\r\n        return this.http.get(environment.apiUrl + '/existsTimeInterval/' + timeInterval, { headers: this.header });\r\n    }\r\n\r\n    addTimeInterval(timeInterval) {\r\n        return this.http.post(environment.apiUrl + '/addTimeInterval', timeInterval, { headers: this.header });\r\n    }\r\n\r\n    updateTimeInterval(timeInterval) {\r\n        return this.http.put(environment.apiUrl + '/updateTimeInterval', timeInterval, { headers: this.header });\r\n    }\r\n\r\n    deleteTimeInterval(id: string) {\r\n        return this.http.delete(environment.apiUrl + '/deleteTimeInterval/' + id, { headers: this.header });\r\n    }\r\n}"],"sourceRoot":""}