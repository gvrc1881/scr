{"version":3,"sources":["./src/app/components/masters/users/user-menu/user-menu.component.html","./src/app/components/masters/users/user-menu/user-menu.component.ts","./src/app/components/masters/users/users.component.html","./src/app/components/masters/users/users.component.ts","./src/app/components/masters/users/users.module.ts","./src/app/services/users.service.ts"],"names":[],"mappings":"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","file":"components-masters-users-users-module-ngfactory-es5.js","sourcesContent":["<ng4-loading-spinner> </ng4-loading-spinner>\n<div class=\"content container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n                <div class=\"breadcrumb-section\">\n                        <nav aria-label=\"breadcrumb\">\n                            <ol class=\"breadcrumb\">\n                                    <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Home</a></li>\n                                    <li class=\"breadcrumb-item\"><a [routerLink]=\"['/master']\">Masters </a></li>\n                                      <li class=\"breadcrumb-item active\" aria-current=\"page\">Users</li>\n                            </ol>\n                        </nav>\n                      </div>\n            \n            <div class=\"clear\"> </div>\n                <div class=\"row-fluid\">\n                        <div class=\"panel panel-primary\">\n                            <div class=\"panel-heading\">User Information</div>\n                            <div class=\"panel-body\">\n            <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\" fusePerfectScrollbar>\n              \n                <div class=\"p-24\" style=\"text-align: right\" *ngIf=\"addPermission\">\n                    <button class=\"mat-raised-button mat-accent\" color=\"accent\" mat-raised-button=\"\" *ngIf=\"rolePermission\"\n                        [routerLink]=\"['add-user']\">\n                        Add New User\n                    </button></div>\n              \n                <div class=\"p-24\">\n\n                    <div class=\"example-header\">\n                        <div class=\"col-sm-4\">\n                        <mat-form-field>\n                            <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n                        </mat-form-field>\n                        </div>\n                        <div class=\"clear\"> </div>\n                    </div>\n\n                    <div class=\"example-container mat-elevation-z8\">\n\n                        <mat-table [dataSource]=\"dataSource\" matSort>\n\n                            <ng-container matColumnDef=\"sno\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Sno.</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.sno}}</mat-cell>\n                            </ng-container>                           \n                           \n                            <ng-container matColumnDef=\"userid\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>User ID</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.id}}</mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"email\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.email}}</mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"userName\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>User Name</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.username}}</mat-cell>\n                            </ng-container>\n                            <ng-container matColumnDef=\"divisionCode\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Division Code</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.divisionCode}}</mat-cell>\n                            </ng-container>\n                           <!--  <ng-container matColumnDef=\"lastName\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Last Name</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.last_name}}</mat-cell>\n                            </ng-container> -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\"> {{row.statusId}}</mat-cell>\n                            </ng-container>                           \n                            <ng-container matColumnDef=\"id\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\n                                <mat-cell *matCellDef=\"let row\">\n                                    <a mat-icon-button matTooltip=\"Edit\" *ngIf=\"editPermission\">\n                                        <button mat-icon-button matTooltip=\"Edit\" (click)=\"processEditAction(row.id)\">\n                                            <mat-icon style=\"color: rgb(0, 145, 234);\">edit</mat-icon>\n                                        </button>\n                                    </a>\n                                    <button mat-icon-button matTooltip=\"Delete\" (click)=\"deleteUserList(row.id)\" *ngIf=\"rolePermission && (userdata.email != row.email ) && deletePermission\">\n                                        <mat-icon style=\"color: rgb(244, 67, 54);\">delete</mat-icon>\n                                    </button>                                  \n                                </mat-cell>\n                            </ng-container>\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n                            </mat-row>\n                        </mat-table>\n                        <div [hidden]=\"!status\" style=\"color: rgb(244, 67, 54);text-align: center\">deleted Successfully!!!\n                        </div>\n                        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n        </div></div></div>","import { Component, ViewChild, OnInit, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog, MatDialogRef } from '@angular/material';\nimport { UsersService } from '../../../../services/users.service';\nimport { UsersModel } from '../../../../models/users.model';\nimport { Subscription } from 'rxjs';\nimport { UsersComponent } from '../users.component';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { FuseConfirmDialogComponent } from '../../../../components/confirm-dialog/confirm-dialog.component';\nimport { CommonService } from 'src/app/common/common.service';\n\n\n\n@Component({\n    selector: 'app-user-menu',\n    templateUrl: './user-menu.component.html',\n    styleUrls: ['./user-menu.component.scss']\n})\nexport class UserMenuComponent implements OnInit {\n    editPermission:boolean=true;\n    addPermission:boolean=true;\n    deletePermission:boolean=true;\n    saveUserList:boolean = false;\n    updateUserList:boolean = false;\n    message:string;\n    confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n    usersList :FormGroup;\n    status:boolean ;\n    data: any ;\n    rolePermission:boolean=true;\n  // users : UsersComponent;\n    loggedDelete:boolean=true;\n    userdata: any = JSON.parse(localStorage.getItem('userData'));\n    ID: number = 0;\n    action: string = \"\";\n    title: string = \"Create\";\n    displayedColumns = ['sno', 'userid', 'email','userName', 'divisionCode', 'status', 'id'];\n    dataSource: MatTableDataSource<UsersModel>;\n    paramSubscription: Subscription;\n    \n    @ViewChild(MatPaginator, {static:true}) paginator: MatPaginator;\n    @ViewChild(MatSort, {static:true}) sort: MatSort;\n    @ViewChild('filter', {static:true}) filter: ElementRef;\n    constructor(\n        private _userMenuService: UsersService, \n        private actRoute: ActivatedRoute,\n        public dialog: MatDialog,\n        private _router: Router,\n        private router:ActivatedRoute,\n        private spinnerService: Ng4LoadingSpinnerService,\n        private commonService:CommonService\n    ) { }\n\n    ngOnInit() {                \n        this.addPermission = this.commonService.getPermission(\"Add\");\n        this.editPermission = this.commonService.getPermission(\"Edit\");\n        this.deletePermission = this.commonService.getPermission(\"Delete\");     \n    \n        this.rolePermission = this.commonService.rolePermission();\n        this.spinnerService.show();        \n        this.getAllUsersData();\n    }\n    processEditAction(id: number) {          \n        this._userMenuService.getUsersListById(id)\n        this._router.navigate([id],{relativeTo: this.router});\n    }\n       \n      \n    \n\n    deleteUserList(id) {\n        \n        this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n            disableClose: false\n        });\n\n        this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete the selected user?';\n\n        this.confirmDialogRef.afterClosed().subscribe(result => {\n            if ( result )\n            {\n                this.spinnerService.show();\n            this._userMenuService.deleteUserList(id)\n            .subscribe((data) => {\n                if(data){\n                    this.status = false;\n                }\n                setTimeout(()=>{ this.status = false }, 4000)\n                this.getAllUsersData();\n                this.status = true;\n            });\n            }\n            this.confirmDialogRef = null;\n        });       \n\n        this.spinnerService.hide();\n    }\n    getAllUsersData(){\n        \n       const users: UsersModel[] = [];\n        this._userMenuService.getUsersList().subscribe((data) => {\n            this.data = data;                    \n           // console.log(JSON.stringify(data))\n            for (let i = 0; i < this.data.length; i++) {\n                if(!this.rolePermission){                                      \n                     if(this.data[i].id == this.userdata.id){\n                        this.data[i].sno = i+1;\n                        users.push(this.data[i]);\n                     }else if(this.userdata.divisionCode == 'All'){\n                        this.data[i].sno = i+1;\n                        users.push(this.data[i]);\n                     }\n                }else{\n                    if(this.data[i].id == this.userdata.id){\n                        this.data[i].sno = i + 1;\n                        users.push(this.data[i]);\n                    }else if(this.userdata.divisionCode == 'All'){\n                        this.data[i].sno = i+1;\n                        users.push(this.data[i]);\n                     }\n                }\n            }            \n            this.dataSource = new MatTableDataSource(users);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;            \n            this.spinnerService.hide();\n        }, error => {           \n            this.spinnerService.hide();\n        } );\n    }\n    applyFilter(filterValue: string) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n    }\n    // ngOnDestroy() {\n    //     this.paramSubscription.unsubscribe();\n    // }\n    }\n","<ng4-loading-spinner> </ng4-loading-spinner>\n\n<div class=\"content\">\n    <div class=\"\">\n        <div class=\"col-12\">\n                <div class=\"breadcrumb-section\">\n                        <nav aria-label=\"breadcrumb\">\n                            <ol class=\"breadcrumb\">\n                                    <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Home</a></li>\n                                    <li class=\"breadcrumb-item\"><a [routerLink]=\"['/master']\">Masters </a></li>\n                                      <li class=\"breadcrumb-item active\" aria-current=\"page\">Users</li>\n                            </ol>\n                        </nav>\n                      </div>\n            \n            <div class=\"clear\"> </div>\n            <div class=\"row-fluid\">\n                <div class=\"panel panel-primary\">\n                    <div class=\"panel-heading\">User Master Information</div>\n                    <div class=\"panel-body\">\n                        <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\" fusePerfectScrollbar>\n                            <div class=\"panel panel-primary\">\n                                <div class=\"panel-heading\">Add User Form</div>\n                                <div class=\"panel-body\">\n                                    <!-- <div class=\"h1 mt-12\">Add User Form</div> -->\n                                    <div class=\"p-24\">\n                                        <div fxLayout=\"column\" fxLayoutAlign=\"start start\" fxLayout.gt-md=\"row\">\n\n                                            <form class=\"mat-white-bg mat-elevation-z4 p-24 mr-24 mb-24\"\n                                                fxLayout=\"column\" fxLayoutAlign=\"start\" fxFlex=\"1 0 auto\" name=\"form\"\n                                                [formGroup]=\"users\" (ngSubmit)=\"onUserFormSubmit();\">\n                                                <!-- <div class=\"h2 mb-24\">User Details</div> -->\n\n                                                <div class=\"col-md-12\">\n                                                    <!--Repository Name-->\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <input matInput placeholder=\"User Name\"\n                                                                size=\"12\" maxlength=\"12\"\n                                                                [formControl]=\"users.controls['userName']\" required>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['userName'].hasError('required') && users.controls['userName'].touched\"\n                                                                class=\"alert alert-danger\">Enter UserName</mat-error>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['userName'].hasError('minlength') && users.controls['userName'].touched\"\n                                                                class=\"alert alert-danger\">User Name minimum of 3\n                                                                charecters\n                                                            </mat-error>\n\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['userName'].hasError('pattern') && users.controls['userName'].touched\"\n                                                                class=\"alert alert-danger\">Only alphabets allowed\n                                                            </mat-error>\n\n                                                        </mat-form-field>\n                                                    </div>\n\n                \n\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <input matInput placeholder=\"First Name\" size=\"12\"\n                                                                maxlength=\"12\"\n                                                                [formControl]=\"users.controls['firstName']\" required>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['firstName'].hasError('required') && users.controls['firstName'].touched\"\n                                                                class=\"alert alert-danger\">Enter FirstName</mat-error>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['firstName'].hasError('pattern') && users.controls['firstName'].touched\"\n                                                                class=\"alert alert-danger\">Only alphabets allowed\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <input matInput placeholder=\"Last Name\" size=\"12\"\n                                                                maxlength=\"12\"\n                                                                [formControl]=\"users.controls['lastName']\" required>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['lastName'].hasError('required') && users.controls['lastName'].touched\"\n                                                                class=\"alert alert-danger\">Enter LastName.</mat-error>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['lastName'].hasError('pattern') && users.controls['lastName'].touched\"\n                                                                class=\"alert alert-danger\">Only alphabets allowed\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <mat-select placeholder=\"Gender\"\n                                                                [formControl]=\"users.controls['gender']\">\n                                                                <mat-option *ngFor=\"let gender of genders\"\n                                                                    [value]=\"gender.ID\">\n                                                                    {{ gender.Gender}}\n                                                                </mat-option>\n                                                            </mat-select>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['gender'].hasError('required') && users.controls['gender'].touched\"\n                                                                class=\"alert alert-danger\">Select Gender</mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"clearfix\"></div>\n                                                </div>\n\n                                                <div class=\"col-md-12\">\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <input matInput placeholder=\"Email\" [readonly]=\"checkInput\"\n                                                                pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                                                                formControlName=\"email\" required\n                                                                [formControl]=\"users.controls['email']\">\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['email'].hasError('required') && users.controls['email'].touched\"\n                                                                class=\"alert alert-danger\">\n                                                                Email is required\n                                                            </mat-error>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['email'].hasError('pattern')  && users.controls['email'].touched\">\n                                                                Please enter a valid email address\n                                                            </mat-error>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['email'].hasError('emailValidation')\">\n                                                                Email already exits\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <input matInput placeholder=\"Mobile Number\"\n                                                                (keypress)=\"keyPress($event)\" size=\"10\" maxlength=\"12\"\n                                                                [formControl]=\"users.controls['mobilenum']\"\n                                                                required>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['mobilenum'].hasError('required') && users.controls['mobilenum'].touched\"\n                                                                class=\"alert alert-danger\">Enter Mobile Number\n                                                            </mat-error>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['mobilenum'].hasError('minlength') && users.controls['mobilenum'].touched\"\n                                                                class=\"alert alert-danger\">Mobile Number Minimum 10\n                                                                digits\n                                                            </mat-error>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['mobilenum'].hasError('maxlength') && users.controls['mobilenum'].touched\"\n                                                                class=\"alert alert-danger\">Mobile Number Maximum 10\n                                                                digits\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-md-3\" *ngIf=\"saveUser\">\n                                                        <mat-form-field fxFlex=\"30\" >\n                                                            <input matInput placeholder=\"Password\" type=\"password\"\n                                                                size=\"15\" maxlength=\"15\"\n                                                                pattern=\"^(?=.{8,})(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^!&*+=]).*$\"\n                                                                [formControl]=\"users.controls['password']\">\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['password'].hasError('required') && users.controls['password'].touched\"\n                                                                class=\"alert alert-danger\">Enter Password</mat-error>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['password'].hasError('minlength') && users.controls['password'].touched\"\n                                                                class=\"alert alert-danger\">Password contain minimum 8\n                                                                charecters</mat-error>\n                                                             <mat-error\n                                                                *ngIf=\"users.controls['password'].hasError('pattern') && users.controls['password'].touched\"\n                                                                class=\"alert alert-danger\">Your password must contain at least one uppercase, one lowercase, one number and one special character</mat-error> \n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\" class=\"example-full-width\">\n                                                            <mat-select placeholder=\"Select Role\" [disabled] =\"!rolePermission\"\n                                                                [formControl]=\"users.controls['role']\">\n                                                                <mat-option *ngFor=\"let role of rolesList\"\n                                                                    [value]=\"role.id\">\n                                                                    {{ role.roleType }}\n                                                                </mat-option>\n                                                            </mat-select>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['role'].hasError('required') && users.controls['role'].touched\"\n                                                                class=\"alert alert-danger\">Select Role</mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"clearfix\"></div>\n                                                </div>\n\n                                                <div class=\"col-md-12\">\n                                                    <div class=\"col-md-3\">\n\n                                                        <mat-form-field fxFlex=\"30\">\n\n                                                            <mat-select placeholder=\"Select Department\"  [disabled] =\"!rolePermission\"\n                                                                [formControl]=\"users.controls['department']\">\n                                                                <mat-option *ngFor=\"let department of departmentList\"\n                                                                    [value]=\"department.departmentId\">\n                                                                    {{ department.departmentName }}\n                                                                </mat-option>\n                                                            </mat-select>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['department'].hasError('required') && users.controls['department'].touched\"\n                                                                class=\"alert alert-danger\">Select department</mat-error>\n\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <mat-select placeholder=\"Select Division\"  [disabled] =\"!rolePermission\"\n                                                                [formControl]=\"users.controls['repositoryCode']\">\n                                                                <mat-option value=\"All\">All</mat-option>\n                                                                <mat-option *ngFor=\"let repository of repositoryList\"\n                                                                    [value]=\"repository.repositoryCode\">\n                                                                    {{ repository.repositoryCode }}\n                                                                </mat-option>\n                                                            </mat-select>\n                                                            <mat-error\n                                                                *ngIf=\"users.controls['repositoryCode'].hasError('required') && users.controls['repositoryCode'].touched\"\n                                                                class=\"alert alert-danger\">Select Division</mat-error>\n                                                        </mat-form-field>\n                                                        <div class=\"clearfix\"></div>\n                                                    </div>\n                                                    <div class=\"col-md-6 mt-15\">\n                                                         <div class=\"float-right\" style=\"float: right;\" >\n                                                                <button class=\"mat-raised-button mat-accent\" color=\"accent\" class=\"d-inline\"\n                                                                mat-raised-button=\"\" type=\"submit\"\n                                                                [disabled]=\"users.invalid\" *ngIf=\"saveUser\">\n                                                                Submit\n                                                            </button>\n                                                            <button class=\"mat-raised-button mat-accent  d-inline\"\n                                                                [disabled]=\"users.invalid\" color=\"accent\"\n                                                                mat-raised-button=\"\" *ngIf=\"updateUser\">\n                                                                Update\n                                                            </button>&nbsp;&nbsp;\n                                                            <span class=\"mat-raised-button mat-accent d-inline\" (click)=\"onGoBack()\"\n                                                                color=\"warn\" mat-raised-button=\"\">\n                                                                Back\n                                                            </span>\n                                                         </div>\n                                                    </div>\n                                                    <div class=\"clearfix\"></div>\n                                                </div>\n\n\n                                                <div [hidden]=\"!status\" style=\"color:darkgreen;text-align: center\">Added\n                                                    Successfully!!!\n                                                </div>\n\n\n                                            </form>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl, NgForm } from '@angular/forms';\nimport { UsersService } from '../../../services/users.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { UsersModel } from '../../../models/users.model';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { CommonService } from '../../../common/common.service';\nimport { RepositoryService } from 'src/app/services/repository.service';\n@Component({\n    selector: 'app-users',\n    templateUrl: './users.component.html',\n    styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n    saveUser: boolean = false;\n    updateUser: boolean = false;\n    checkInput: boolean = false;\n    genders = [{ ID: 1, Gender: 'Male' },\n    { ID: 2, Gender: 'Female' }];\n    rolesList:any = [];\n    departmentList:any = [];\n    repositoryList:any=[];\n    active: boolean;\n    dublicateemail: boolean;\n    id: number = 0;\n    users: FormGroup;\n    resp:any;\n    status: boolean;\n    userFormErrors: any;\n    title: string = \"User\";\n    userdata: any = JSON.parse(localStorage.getItem('userData'));\n    dataSource: MatTableDataSource<UsersModel>;\n    response: any;\n    rolePermission:boolean= true;\n    data: any;\n\n    pattern = \"[a-zA-Z][a-zA-Z ]*\";\n\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n    constructor(private formBuilder: FormBuilder,\n        private _userMenuService: UsersService,\n        private _router: Router,\n        public dialog: MatDialog,\n        private route: ActivatedRoute,\n        private spinnerService: Ng4LoadingSpinnerService,\n        private commonService: CommonService,\n        private repositoryService: RepositoryService,\n    ) {\n        // Reactive form errors\n        this.userFormErrors = {\n            userName: {},\n            firstName: {},\n            lastName: {},\n            gender: {},\n            email: {},\n            mobilenum: {},\n            password: {},\n            role: {},\n            department: {},\n            repositoryCode:{}\n        };\n    }\n\n    ngOnInit() {\n\n        this.id = +this.route.snapshot.params['id'];\n        this.rolePermission = this.commonService.rolePermission();        \n        if (!isNaN(this.id)) {\n\n            this.users = this.formBuilder.group({\n                id: 0,\n                'userName': [null, Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z0-9_.-]+$')])],\n                'firstName': [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.pattern(this.pattern)])],\n                'lastName': [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.pattern(this.pattern)])],\n                'gender': [null, Validators.required],\n                'email': [null, Validators.compose([Validators.required])],\n                'mobilenum': [null, Validators.compose([Validators.required, Validators.minLength(10),Validators.maxLength(10)])],\n                'role': [null, Validators.required],\n                'department': [null, Validators.required],\n                'repositoryCode': [null, Validators.required]\n            });\n\n\n\n            this.users.valueChanges.subscribe(() => {\n                this.onFormValuesChanged();\n            });\n            this.spinnerService.show();\n            this.saveUser = false;\n            this.updateUser = true;\n            this.checkInput = true;\n            this._userMenuService.getUsersListById(this.id)\n\n                .subscribe(resp => {\n                    \nthis.resp = resp;\n                    this.users.patchValue({\n                        id: this.resp.id,\n                        userName: this.resp.username,\n                        firstName: this.resp.first_name,\n                        lastName: this.resp.last_name,\n                        email: this.resp.email,\n                        gender: this.resp.gender,\n                        mobilenum: this.resp.phone,\n                        role: this.resp.roleTypeId,\n                        department: this.resp.department,\n                        repositoryCode:this.resp.divisionCode,\n                    });\n                    this.spinnerService.hide();\n                });\n        } else {\n            this.users = this.formBuilder.group({\n                id: 0,\n                'userName': [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.pattern(this.pattern)])],\n                'firstName': [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.pattern(this.pattern)])],\n                'lastName': [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.pattern(this.pattern)])],\n                'gender': [null, Validators.required],\n                'email': [null, Validators.compose([Validators.required]), this.emailValidation.bind(this)],               \n                'mobilenum': [null, Validators.compose([Validators.required, Validators.minLength(10)])],\n                'password': [null, Validators.compose([Validators.required, Validators.minLength(8)])],\n                'role': [null, Validators.required],\n                'department': [null, Validators.required],\n                'repositoryCode': [null, Validators.required]\n            });\n\n\n\n            this.users.valueChanges.subscribe(() => {\n                this.onFormValuesChanged();\n            });\n            this.saveUser = true;\n            this.updateUser = false;\n            this.checkInput = false;\n        }\n\n        this._userMenuService.roletypeMaster()\n            .subscribe((roles) => {\n                \n                this.rolesList = roles;\n            })\n        this._userMenuService.departmentNameList().subscribe((department) => {\n           \n            this.departmentList = department;\n        })\n        this.repositoryService.getAllRepositories().subscribe((repository) => {\n          \n            this.repositoryList = repository;\n        })\n        \n        \n    }\n\n\n    keyPress(event: any) {\n        const pattern = /^[0-9]*$/;\n        let inputChar = String.fromCharCode(event.charCode);\n        if (event.keyCode != 8 && !pattern.test(inputChar)) {\n            event.preventDefault();\n        }\n    }\n\n\n\n    emailValidation() {\n        const q = new Promise((resolve, reject) => {\n            this._userMenuService.duplicateEmail({\n\n                'modifiedBy': null,\n                'createdBy': null,\n\n                'userID': null,\n                'userName': null,\n                'firstName': null,\n                'lastName': null,\n                'password': null,\n                'roleType': null,\n                'employeeId': null,\n                'email': this.users.controls['email'].value,\n                'privilegeId': null,\n                'gender': null,\n                'phone': null,\n                'department': null,\n                'id': null,\n            }).subscribe((dublicate) => {\n                if (dublicate) {\n                    resolve({ 'emailValidation': true });\n\n                } else {\n                    resolve(null);\n                }\n\n            }, () => { resolve({ 'emailValidation': true }); });\n\n        });\n        return q;\n\n    }\n\n\n    onFormValuesChanged() {\n        for (const field in this.userFormErrors) {\n            if (!this.userFormErrors.hasOwnProperty(field)) {\n                continue;\n            }\n\n            // Clear previous errors\n            this.userFormErrors[field] = {};\n\n            // Get the control\n            const control = this.users.get(field);\n\n            if (control && control.dirty && !control.valid) {\n                this.userFormErrors[field] = control.errors;\n            }\n        }\n    }\n    clearFields() {\n        \n        this.users = this.formBuilder.group({\n            userName: [null],\n            firstName: [null],\n            lastName: [null],\n            gender: [null],\n            email: [null],\n            mobilenum: [null],\n            password: [null],\n            role: [null],\n            department: [null],\n            repositoryCode:[null]\n        });\n\n\n    }\n\n    onUserFormSubmit() {\n\n        let var_id: number = this.users.value.id;\n        let var_userName: string = this.users.value.userName;\n        let var_firstName: string = this.users.value.firstName;\n        let var_lastName: string = this.users.value.lastName;\n        let var_email: string = this.users.value.email;\n        let var_password: string = this.users.value.password;\n        let var_gender: number = this.users.value.gender;\n        let var_mobilenumber: number = this.users.value.mobilenum;\n        let var_role: string = this.users.value.role;\n        let var_department: number = this.users.value.department;\n        let repositoryCode:string = this.users.value.repositoryCode;       \n\n        if (this.saveUser) {\n            if (!this.users.valid) {\n                return;\n            }\n\n            this._userMenuService.saveUsersList({              \n                \"user_id\": null,\n                \"username\": var_userName,\n                \"email\": var_email,\n                \"password\": var_password,\n                \"first_name\": var_firstName,\n                \"last_name\": var_lastName,\n                \"gender\": var_gender,\n                \"day_of_birth\":null,               \n                \"department\": var_department,\n                \"designation\":null,\n                \"address\":null,\n                \"phone\": var_mobilenumber,\n                \"issue_date\":null,\n                \"expire_date\":null,\n                \"privilege_id\": \"87\",\n                \"createdBy\": null,                \n                \"roleTypeId\": var_role,\n                \"status_id\": 1,\n                \"divisionCode\":repositoryCode             \n            }).subscribe((data) => {\n                this.data = data;\n                this.commonService.showAlertMessage('User Added Successfully.')\n                if (this.data) {\n                    this.status = false;\n                }\n                setTimeout(() => { this.status = false }, 4000)              \n                if (this.users.valid) {\n                    this.users.reset();\n                }               \n                this._router.navigate(['../'], { relativeTo: this.route });\n                this.status = true;\n\n            }, error => {\n                this.commonService.showAlertMessage(error.statusText)\n                this.userFormErrors = error\n            })\n\n        }\n\n        else if (this.updateUser) {\n         \n            this._userMenuService.editUser({\n\n                \"user_id\": var_id,\n                \"id\":var_id,\n                \"username\": var_userName,\n                \"email\": var_email,\n                \"password\": var_password,\n                \"first_name\": var_firstName,\n                \"last_name\": var_lastName,\n                \"gender\": var_gender,\n                \"day_of_birth\":null,               \n                \"department\": var_department,\n                \"designation\":null,\n                \"address\":null,\n                \"phone\": var_mobilenumber,\n                \"issue_date\":null,\n                \"expire_date\":null,\n                \"privilege_id\": \"87\",\n                \"createdBy\": null,                \n                \"roleTypeId\": var_role,\n                \"status_id\": 1,\n                \"divisionCode\":repositoryCode\n            }, var_id)\n                .subscribe((data) => {\n                   \n                    this.commonService.showAlertMessage('User Data Updated Successfully.')                  \n                    setTimeout(() => { this.status = false }, 4000)                   \n                    if (this.users.valid) {\n                        this.users.reset();\n                    }\n                    this._router.navigate(['../'], { relativeTo: this.route });\n                    this.status = true;\n                }, error => {\n                    this.commonService.showAlertMessage(error.statusText)\n                    this.userFormErrors = error\n                })\n        }\n\n\n    }\n\n\n    onGoBack() {\n        this._router.navigate(['../'], { relativeTo: this.route });\n\n\n    }\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { UsersComponent } from './users.component';\nimport { UsersService } from '../../../services/users.service';\nimport { UserMenuComponent } from './user-menu/user-menu.component';\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\nimport { MaterialModule } from 'src/app/modules/material.modules';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RepositoryService } from 'src/app/services/repository.service';\n\n\n\n\nconst routes: Routes = [\n    {\n        path     : '',\n        component: UserMenuComponent\n    },\n   \n    {\n        path     : ':id',\n        component: UsersComponent\n    },\n    {\n        path        : 'add-user',\n        component:   UsersComponent\n        //canActivate: [AuthGuard]\n        //redirectTo:'dashboard'\n    },\n    \n\n];\n\n@NgModule({\n    imports     : [        \n        RouterModule.forChild(routes),\n        Ng4LoadingSpinnerModule.forRoot(),\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        UsersComponent,\n        UserMenuComponent,\n       \n    ],\n    providers: [\n        UsersService,\n        RepositoryService\n    ],\n    exports     : [\n        UsersComponent\n    ]\n})\nexport class UserModule\n{\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Router } from '@angular/router';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class UsersService {\n    myAppUrl: string = environment.apiUrl;\n    header:any;\n    accessToken:any = JSON.parse(localStorage.getItem('accessToken'));\n    \n    constructor(private _http: HttpClient) {\n        this.header = new HttpHeaders({\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${this.accessToken}`\n        });\n         \n    }\n\n    getUsersList() {\n        return this._http.get(this.myAppUrl + '/allUsers', {headers:this.header})\n            .map((response: Response) =>response)\n            .catch(this.errorHandler);\n            \n    }\n    roletypeMaster(){\n        return this._http.get(this.myAppUrl + '/findAllRoles', {headers : this.header})\n        .map((response: Response) =>response)\n        .catch(this.errorHandler);\n         \n    }\n    departmentNameList(){\n        return this._http.get(this.myAppUrl + '/findAllDepartments', {headers : this.header})\n        .map((response: Response) =>response)\n        .catch(this.errorHandler);\n    }\n    \n    saveUsersList(UserList) {\n        console.log('data in save users list service');\n        console.log('UserList: '+JSON.stringify(UserList));\n        //return this._http.post(this.myAppUrl + '/api/userMaster/1/add?access_token='+this.accessToken.access_token, UserList)\n        return this._http.post(this.myAppUrl + '/addUser', UserList, {headers:this.header})\n            .map((response: Response) => { \n                console.log(response);\n                //response;\n            })\n            .catch(this.errorHandler)\n    }\n    getUsersListById(ID: number) {\n        console.log(\"id: \"+ID)\n        return this._http.get(this.myAppUrl +'/findUserById/' +ID, {headers:this.header})\n            .map((response: Response) => response)\n            .catch(this.errorHandler)\n    }\n    \n    \n    deleteUserList(ID){\n        return this._http.get(this.myAppUrl + \"/deleteUser/\" +ID, {headers:this.header})\n        .map((response: Response) => response)\n        .catch(this.errorHandler);\n    }\n    \n    editUser(UserList,ID){\n        console.log('data will be edited in users list service');\n        console.log(UserList);\n        console.log(ID);\n        return this._http.post(this.myAppUrl +'/editUser', UserList, {headers:this.header})\n        .map((response: Response) => response)\n       \n        .catch(this.errorHandler);\n       \n    }\n    duplicateEmail(UserList){\n      \n        return this._http.post(this.myAppUrl +'/duplicateEmail', UserList, {headers:this.header})\n        .map((response: Response) => response)\n       \n        .catch(this.errorHandler);\n    }\n\n    errorHandler(error: Response) {\n        console.log(error);\n        return Observable.throw(error);\n    }\n}"],"sourceRoot":""}