{"version":3,"sources":["webpack:///./node_modules/@angular/material/icon/typings/index.d.ts.MatIcon.html","webpack:///./node_modules/ng4-loading-spinner/ng4-loading-spinner.d.ts.Ng4LoadingSpinnerComponent.html","webpack:///./src/app/components/scheduler-settings/job-type/job-type.component.html","webpack:///./src/app/components/scheduler-settings/job-type/job-type.component.ts","webpack:///./src/app/components/scheduler-settings/job-type/job-type.module.ts","webpack:///./src/app/payloads/job-type.payload.ts","webpack:///./src/app/services/job-type.service.ts"],"names":[],"mappings":"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","file":"components-scheduler-settings-job-type-job-type-module-ngfactory-es5.js","sourcesContent":["<ng-content></ng-content>","<div #spinnerContainer [class]=\"showSpinner ? 'visible spinner center' : 'hidden spinner center'\" [innerHTML]=\"template\">     </div> <div id=\"loading-spinner-text\" class=\"loading-spinner-text\" [style.zIndex]=\"zIndex\" [class]=\"showSpinner ? 'visible loading-text' : 'hidden loading-text'\"> {{loadingText}} </div> ","<ng4-loading-spinner> </ng4-loading-spinner>\n<div class=\"content\">\n    <div class=\"\">\n        <div class=\"col-12\">\n                <div class=\"breadcrumb-section\">\n                        <nav aria-label=\"breadcrumb\">\n                            <ol class=\"breadcrumb\">\n                                    <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Home</a></li>\n                                    <li class=\"breadcrumb-item\"><a [routerLink]=\"['/settings']\">Schedule Settings </a></li>\n                                    <li class=\"breadcrumb-item active\" aria-current=\"page\">Job Type</li>\n                            </ol>\n                        </nav>\n                      </div>\n\n            <div class=\"clear\"> </div>\n            <div class=\"row-fluid\">\n                <div class=\"panel panel-primary\">\n                    <div class=\"panel-heading\">JobType</div>\n                    <div class=\"panel-body\">\n                        <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\" fusePerfectScrollbar>\n\n                        <div class=\"p-24\">\n                                <div fxLayout=\"column\" fxLayoutAlign=\"start start\" fxLayout.gt-md=\"row\">\n                                    <div class=\"p-12\" style=\"text-align: right;\" *ngIf=\"addPermission\">\n                                        <span class=\"mat-raised-button mat-accent\" (click)=\"addJobTypeName()\"\n                                            *ngIf=\"!addJobType\" color=\"accent\" mat-raised-button=\"\">\n                                            Add JobType\n                                        </span>\n                                    </div>\n\n\n                                    <form class=\"mat-white-bg mat-elevation-z4 p-24 mr-24 mb-24\" *ngIf=\"addJobType\"\n                                        fxLayout=\"column\" fxLayoutAlign=\"start\" [formGroup]=\"jobTypeFormGroup\"\n                                        fxFlex=\"1 0 auto\" (ngSubmit)=\"onAddJobTypeFormSubmit();\">\n                                        <div class=\"panel panel-primary\">\n                                            <div class=\"panel-heading\">{{title}} JobType</div>\n                                            <div class=\"panel-body\">                                                \n\n                                                <div class=\"col-md-12\">\n                                                    <!--JobType Name-->\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                                <mat-select placeholder=\"JobType Name\"\n                                                                [formControl]=\"jobTypeFormGroup.controls['jobTypeName']\">\n                                                                <mat-option *ngFor=\"let jobTypeName of jobTypeNames\"\n                                                                    [value]=\"jobTypeName.jobTypeName\">\n                                                                    {{ jobTypeName.jobTypeName}}\n                                                                </mat-option>\n                                                            </mat-select>\n                                                            <mat-error\n                                                                *ngIf=\"jobTypeFormGroup.controls['jobTypeName'].hasError('required') && jobTypeFormGroup.controls['jobTypeName'].touched\"\n                                                                class=\"alert alert-danger\">Select JobType Name</mat-error>\n                                                            <mat-error\n                                                                *ngIf=\"jobTypeFormGroup.controls['jobTypeName'].hasError('duplicateJobTypeName')\"\n                                                                class=\"alert alert-danger\">\n                                                                JobType Name Already Exits\n                                                            </mat-error>\n                                                           <!--  <input matInput placeholder=\"JobType Name\"\n                                                                [formControl]=\"jobTypeFormGroup.controls['jobTypeName']\" required/>\n                                                            <mat-error\n                                                                *ngIf=\"jobTypeFormGroup.controls['jobTypeName'].hasError('required')\">\n                                                                Enter JobType Name\n                                                            </mat-error>\n                                                             <mat-error\n                                                                *ngIf=\"jobTypeFormGroup.controls['jobTypeName'].hasError('duplicateJobTypeName')\"\n                                                                class=\"alert alert-danger\">\n                                                                JobType Name Already Exits\n                                                            </mat-error>  -->\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                    <div class=\"col-md-3 mt-10\">\n                                                        <div fxFlex=\"10\" fxLayoutAlign=\"center center\" class=\"pr-5 d-inline\"\n                                                            style=\"padding-bottom:10px;\">\n                                                            <button mat-raised-button color=\"accent\"\n                                                                [disabled]=\"jobTypeFormGroup.invalid\"\n                                                                class=\"submit-button\" aria-label=\"Submit\">\n                                                                {{title}}\n                                                            </button></div>\n\n                                                            <div class=\"p-12 pr-5 d-inline\">\n                                                                    <span class=\"mat-raised-button mat-warn\"\n                                                                        (click)=\"onGoBack()\" color=\"warn\" mat-raised-button=\"\">\n                                                                        Close\n                                                                    </span>\n                                                                </div>\n                                                                <div [hidden]=\"!status\" style=\"color:darkgreen;text-align: center\">Added\n                                                                        Successfully!!!</div>\n                                                    </div>\n                                                    \n                                                </div>\n                                                \n                                                \n                                            </div>\n\n                                        </div>\n                                    </form>\n                                </div>\n\n\n                                <div class=\"example-header\">\n                                <div class=\"col-sm-4\">\n                                    <mat-form-field>\n                                        <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n                                    </mat-form-field>\n                                </div>\n                                </div>\n                                <div class=\"clear\"> </div>\n\n                                <div class=\"example-container mat-elevation-z8\">\n\n                                    <mat-table [dataSource]=\"jobTypeDataSource\" matSort>\n\n                                        <ng-container matColumnDef=\"sno\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Sno.</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.sno}}</mat-cell>\n                                        </ng-container>\n\n                                     <!--    <ng-container matColumnDef=\"jobTypeId\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Job Type Id</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.jobTypeId}}</mat-cell>\n                                        </ng-container> -->\n\n                                        <ng-container matColumnDef=\"jobTypeName\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>JobType Name\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.jobTypeName}}</mat-cell>\n                                        </ng-container>\n\n                                      <!--   <ng-container matColumnDef=\"isActive\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.isActive}}</mat-cell>\n                                        </ng-container> -->\n                                        <ng-container matColumnDef=\"id\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\">\n                                                <a mat-icon-button matTooltip=\"Edit\">\n                                                    <button mat-icon-button matTooltip=\"Edit\" *ngIf=\"editPermission\"\n                                                        (click)=\"editJobTypeById(row.jobTypeId)\">\n                                                        <mat-icon style=\"color: rgb(0, 145, 234);\">edit</mat-icon>\n                                                    </button>\n                                                </a>\n                                                <button mat-icon-button matTooltip=\"Delete\" *ngIf=\"deletePermission\"\n                                                    (click)=\"deleteJobType(row.jobTypeId)\">\n                                                    <mat-icon style=\"color: rgb(244, 67, 54);\">delete</mat-icon>\n                                                </button>\n                                            </mat-cell>\n                                        </ng-container>\n                                        <mat-header-row *matHeaderRowDef=\"jobTypeDisplayedColumns\"></mat-header-row>\n                                        <mat-row *matRowDef=\"let row; columns: jobTypeDisplayedColumns;\">\n                                        </mat-row>\n                                    </mat-table>\n                                    <div [hidden]=\"!status\" style=\"color: rgb(244, 67, 54);text-align: center\">delected\n                                        Successfully!!!\n                                    </div>\n                                    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, ViewChild, OnInit, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog, MatDialogRef } from '@angular/material';\n\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { FuseConfirmDialogComponent } from '../../../components/confirm-dialog/confirm-dialog.component';\n\n\nimport { Constants } from 'src/app/common/constants';\nimport { CommonService } from 'src/app/common/common.service';\nimport { JobTypeModel } from 'src/app/models/job-type.model';\nimport { JobTypeService } from 'src/app/services/job-type.service';\nimport { JobTypePayload } from 'src/app/payloads/job-type.payload';\n@Component({\n  selector: 'app-job-type',\n  templateUrl: './job-type.component.html',\n  styleUrls: ['./job-type.component.css']\n})\nexport class JobTypeComponent implements OnInit {\n  \n  rolePermission:boolean=true;\n  editPermission:boolean=true;\n  addPermission:boolean=true;\n  deletePermission:boolean=true;\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n  status: boolean;\n  addJobType: boolean = false;\n  saveJobType: boolean;\n  cloneUpdateJobType: boolean = true;\n  jobTypeData: any;\n  jobTypeFormGroup: FormGroup;\n  jobTypeErrors: any;\n  jobTypeResponse: any;\n  pattern = \"[a-zA-Z][a-zA-Z ]*\";\n  jobTypeNames=[{ id: 1, jobTypeName: 'Staging To Zonal' }]; //{ id: 1, jobTypeName: 'Divisions To Staging' },\n  loggedUserData: any = JSON.parse(localStorage.getItem('userData'));\n  title: string = \"Add\";\n  jobTypeDisplayedColumns = ['sno', 'jobTypeName', 'id'];\n  jobTypeDataSource: MatTableDataSource<JobTypeModel>;\n  @ViewChild(MatPaginator, { static: true }) jobTypePaginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  constructor(\n    private formBuilder: FormBuilder,\n    private jobTypeService: JobTypeService,\n    public dialog: MatDialog,\n    private spinnerService: Ng4LoadingSpinnerService,\n    private commonService: CommonService,\n  ) {\n    this.jobTypeErrors = {\n      jobTypeName: {},\n    };\n  }\n\n  ngOnInit() {\n    this.rolePermission = this.commonService.rolePermission();\n    this.addPermission = this.commonService.getPermission(\"Add\");\n    this.editPermission = this.commonService.getPermission(\"Edit\");\n    this.deletePermission = this.commonService.getPermission(\"Delete\");\n    this.spinnerService.show();\n    this.findAllJobTypeData();\n    this.jobTypeFormGroup = this.formBuilder.group({\n      id: 0,\n      'jobTypeName': [null, Validators.compose([Validators.required]), this.duplicateJobTypeName.bind(this)],\n    });\n    this.jobTypeFormGroup.valueChanges.subscribe(() => {\n      this.onFormValuesChanged();\n    });\n  }\n  onFormValuesChanged() {\n    for (const field in this.jobTypeErrors) {\n      if (!this.jobTypeErrors.hasOwnProperty(field)) {\n        continue;\n      }\n      this.jobTypeErrors[field] = {};\n      const control = this.jobTypeFormGroup.get(field);\n      if (control && control.dirty && !control.valid) {\n        this.jobTypeErrors[field] = control.errors;\n      }\n    }\n  }\n\n  duplicateJobTypeName() {\n    const q = new Promise((resolve, reject) => {\n      let jobTypeName: string = this.jobTypeFormGroup.controls['jobTypeName'].value;      \n      //this.jobTypeService.existsJobTypeName(this.jobTypeFormGroup.controls['jobTypeName'].value).subscribe((duplicate) => {\n        var filteredArray = !!this.jobTypeData && this.jobTypeData.filter(function(jobType){          \n          return jobType.jobTypeName == jobTypeName;\n        });    \n        if(filteredArray.length !== 0) {\n          resolve({ 'duplicateJobTypeName': true });\n        } else {\n          resolve(null);\n        }\n      //}, () => { resolve({ 'duplicateJobTypeName': true }); });\n    });\n    return q;\n  }\n  \n\n  onAddJobTypeFormSubmit() {\n\n    let jobTypeName: string = this.jobTypeFormGroup.value.jobTypeName;\n    var filteredArray = !!this.jobTypeData && this.jobTypeData.filter(function(jobType){   \n      return jobType.jobTypeName == jobTypeName;\n    });    \n    if(filteredArray.length !== 0){\n      this.commonService.showAlertMessage(jobTypeName+' job type already selected.');\n      return\n    }\n    if (!this.jobTypeFormGroup.valid) {\n      return;\n    }\n   \n    if (this.title == Constants.EVENTS.ADD || this.title == Constants.EVENTS.SAVE) {\n      JobTypePayload.ADD_PAYLOAD.createdBy = this.loggedUserData.id;\n      JobTypePayload.ADD_PAYLOAD.modifiedBy = this.loggedUserData.id;\n      JobTypePayload.ADD_PAYLOAD.jobTypeName = jobTypeName;\n     // console.log('Add Payload =' + JSON.stringify(JobTypePayload.ADD_PAYLOAD));\n      this.spinnerService.show();\n      this.addJobType = false;\n      this.jobTypeService.addJobType(JobTypePayload.ADD_PAYLOAD).subscribe((response) => {\n       // console.log('Response: ' + JSON.stringify(response));\n        this.spinnerService.hide();\n        this.jobTypeResponse = response;\n        if (!!this.jobTypeResponse && this.jobTypeResponse.code == 200) {\n          this.commonService.showAlertMessage(this.jobTypeResponse.message);\n          this.saveJobType = false;\n          this.findAllJobTypeData();\n          this.jobTypeFormGroup.reset();\n          this.addJobType = false;\n        } else {\n          this.commonService.showAlertMessage(\"JobType Addition Failed\");\n        }\n      },\n        error => error => {\n          this.jobTypeErrors = error\n          console.log(' >>> ERROR ' + error);\n          this.commonService.showAlertMessage(this.jobTypeErrors);\n          this.spinnerService.hide();\n        })\n    }\n    else if (this.title == Constants.EVENTS.UPDATE) {\n      this.spinnerService.show();\n      this.saveJobType = false;\n     // console.log(\"jobTypeResponse: \" + JSON.stringify(this.jobTypeResponse));\n      let jobTypeId: number = this.jobTypeResponse.jobTypeId;\n      JobTypePayload.UPDATE_PAYLOAD.jobTypeId = jobTypeId;\n      JobTypePayload.UPDATE_PAYLOAD.modifiedBy = this.loggedUserData.id;\n      JobTypePayload.UPDATE_PAYLOAD.jobTypeName = jobTypeName;\n      //console.log(\"Update Payload =\" + JSON.stringify(JobTypePayload.UPDATE_PAYLOAD))\n      this.jobTypeService.updateJobType(JobTypePayload.UPDATE_PAYLOAD).subscribe((response) => {\n       // console.log('Update Response: ' + JSON.stringify(response));\n        this.spinnerService.hide();\n        this.jobTypeResponse = response;\n        if (!!this.jobTypeResponse && this.jobTypeResponse.code == 200) {\n          this.commonService.showAlertMessage(this.jobTypeResponse.message);\n          this.saveJobType = false;\n          this.findAllJobTypeData();\n          this.jobTypeFormGroup.reset();\n          this.addJobType = false;\n        } else {\n          this.commonService.showAlertMessage(\"JobType Updating Failed\");\n        }\n      },\n        error => error => {\n          this.jobTypeErrors = error\n         // console.log(' >>> ERROR ' + error);\n          this.commonService.showAlertMessage(\"JobType Updating Failed\");\n          this.spinnerService.hide();\n        })\n    }\n\n\n  }\n\n  deleteJobType(id) {\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n      disableClose: false\n    });\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete the selected job type?';\n    this.confirmDialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.spinnerService.show();\n        this.jobTypeService.deleteJobType(id)\n          .subscribe((response) => {\n            this.jobTypeResponse = response;\n            if (!!this.jobTypeResponse && this.jobTypeResponse.code == 200) {\n              this.commonService.showAlertMessage(this.jobTypeResponse.message);\n              this.saveJobType = false;\n              this.findAllJobTypeData();\n              this.jobTypeFormGroup.reset();\n              this.addJobType = false;\n            } else {\n              this.commonService.showAlertMessage(\"JobType Name Deletion Failed\");\n            }\n          }, error => {\n            this.jobTypeErrors = error\n            console.log(' >>> ERROR ' + error);\n            this.commonService.showAlertMessage(\"JobType Name Deletion Failed\");\n            this.spinnerService.hide();\n          });\n      }\n      this.confirmDialogRef = null;\n    });\n\n\n    this.spinnerService.hide();\n\n  }\n\n  findAllJobTypeData() {\n    const jobTypeData: JobTypeModel[] = [];\n    this.jobTypeService.getAllJobTypes().subscribe((data) => {\n      this.jobTypeData = data;\n      for (let i = 0; i < this.jobTypeData.length; i++) {\n        this.jobTypeData[i].sno = i + 1;\n        jobTypeData.push(this.jobTypeData[i]);\n      }\n      this.jobTypeDataSource = new MatTableDataSource(jobTypeData);\n      this.jobTypeDataSource.paginator = this.jobTypePaginator;\n      this.jobTypeDataSource.sort = this.sort;\n      this.spinnerService.hide();\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.jobTypeDataSource.filter = filterValue;\n  }\n\n  jobTypeEditAction(id: number) {\n    this.addJobType = true;\n    this.jobTypeService.getJobTypeById(id).subscribe((response) => {\n      this.cloneUpdateJobType = false;\n      this.saveJobType = false;  \n      this.jobTypeResponse = response;\n      //console.log(\"resp: \" + JSON.stringify(response));\n      this.jobTypeFormGroup.patchValue({\n        jobTypeName: this.jobTypeResponse.jobTypeName\n      });\n    }, error => this.jobTypeErrors = error);\n    this.commonService.scrollTop(\"forms\");\n  }\n\n  editJobTypeById(id) {\n    this.spinnerService.show();\n    this.addJobType = true;\n    this.cloneUpdateJobType = false;\n    this.jobTypeEditAction(id);\n    this.title = \"Update\";\n    this.spinnerService.hide();\n  }\n\n  addJobTypeName() {\n    this.addJobType = true;\n    this.title = 'Add';\n  }\n  onGoBack() {\n    this.jobTypeFormGroup.reset();\n    this.saveJobType = false;\n    this.cloneUpdateJobType = true;\n    this.addJobType = false;\n    this.title = 'Save';\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { JobTypeComponent } from './job-type.component';\r\nimport { MatMenuModule, MatGridListModule } from '@angular/material';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\r\nimport { MaterialModule } from 'src/app/modules/material.modules';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RepositoryService } from 'src/app/services/repository.service';\r\nimport { JobTypeService } from 'src/app/services/job-type.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : '',\r\n        component: JobTypeComponent,\r\n       \r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports     : [     \r\n        RouterModule.forChild(routes),\r\n        Ng4LoadingSpinnerModule.forRoot(),\r\n        MatMenuModule,\r\n        MatGridListModule,\r\n        CommonModule,\r\n        MaterialModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [\r\n        JobTypeComponent,        \r\n    ],\r\n    providers   : [\r\n       JobTypeService\r\n    ],\r\n    exports     : [\r\n        JobTypeComponent\r\n    ]\r\n})\r\nexport class JobTypeModule\r\n{\r\n}\r\n\r\n","export const JobTypePayload = {\r\n    ADD_PAYLOAD: {\r\n        \"createdBy\": 1,\r\n        \"modifiedBy\": 1,\r\n        \"jobTypeName\": \"\"\r\n    },\r\n    UPDATE_PAYLOAD: {\r\n        \"jobTypeId\": 1,\r\n        \"modifiedBy\": 1,\r\n        \"jobTypeName\": \"\"\r\n    },\r\n};","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { JobTypeModel } from '../models/job-type.model';\r\n@Injectable()\r\nexport class JobTypeService {\r\n    myAppUrl: string = environment.apiUrl;\r\n    header: any;\r\n    accessToken: any = JSON.parse(localStorage.getItem('accessToken'));\r\n    constructor(private http: HttpClient) {\r\n        this.header = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `Bearer ${this.accessToken}`\r\n        });\r\n    }\r\n\r\n    getAllJobTypes() {\r\n        return this.http.get<JobTypeModel[]>(environment.apiUrl + '/findAllJobTypes', { headers: this.header });\r\n    }\r\n\r\n    getJobTypeById(id: number) {\r\n        return this.http.get(environment.apiUrl + '/findJobTypeById/' + id, { headers: this.header });\r\n    }\r\n\r\n    existsJobTypeName(jobTypeName: string) {\r\n        return this.http.get(environment.apiUrl + '/existsjobTypeName/' + jobTypeName, { headers: this.header });\r\n    }\r\n\r\n    addJobType(jobType) {\r\n        return this.http.post(environment.apiUrl + '/addJobType', jobType, { headers: this.header });\r\n    }\r\n\r\n    updateJobType(jobType) {\r\n        return this.http.put(environment.apiUrl + '/updateJobType', jobType, { headers: this.header });\r\n    }\r\n\r\n    deleteJobType(id: string) {\r\n        return this.http.delete(environment.apiUrl + '/deleteJobType/' + id, { headers: this.header });\r\n    }\r\n}"],"sourceRoot":""}