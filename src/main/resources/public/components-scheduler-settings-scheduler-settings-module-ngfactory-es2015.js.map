{"version":3,"sources":["webpack:///./node_modules/@angular/material/icon/typings/index.d.ts.MatIcon.html","webpack:///./node_modules/ng4-loading-spinner/ng4-loading-spinner.d.ts.Ng4LoadingSpinnerComponent.html","webpack:///./src/app/components/scheduler-settings/scheduler-settings.component.html","webpack:///./src/app/components/scheduler-settings/scheduler-settings.component.ts","webpack:///./src/app/components/scheduler-settings/scheduler-settings.module.ts","webpack:///./src/app/payloads/schedule-job.payload.ts","webpack:///./src/app/services/schedule-job.service.ts"],"names":[],"mappings":"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","file":"components-scheduler-settings-scheduler-settings-module-ngfactory-es2015.js","sourcesContent":["<ng-content></ng-content>","<div #spinnerContainer [class]=\"showSpinner ? 'visible spinner center' : 'hidden spinner center'\" [innerHTML]=\"template\">     </div> <div id=\"loading-spinner-text\" class=\"loading-spinner-text\" [style.zIndex]=\"zIndex\" [class]=\"showSpinner ? 'visible loading-text' : 'hidden loading-text'\"> {{loadingText}} </div> ","<ng4-loading-spinner> </ng4-loading-spinner>\n<div class=\"content\">\n    <div class=\"\">\n        <div class=\"col-12\">\n\n                <div class=\"breadcrumb-section\">\n                        <nav aria-label=\"breadcrumb\">\n                            <ol class=\"breadcrumb\">\n                                    <li class=\"breadcrumb-item\"><a [routerLink]=\"['/dashboard']\">Home</a></li>\n                                    <li class=\"breadcrumb-item\"><a [routerLink]=\"['/settings']\">Schedule Settings </a></li>\n                                      <li class=\"breadcrumb-item active\" aria-current=\"page\">Schedule</li>\n                            </ol>\n                        </nav>\n                      </div>\n\n            <div class=\"clear\"> </div>\n                      \n            <div class=\"row-fluid\">\n                <div class=\"panel panel-primary\">\n                    <div class=\"panel-heading\">Scheduled Jobs</div>\n                    <div class=\"panel-body\">\n                        <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\" fusePerfectScrollbar>\n\n                            <div class=\"p-24\">\n                                <div fxLayout=\"column\" fxLayoutAlign=\"start start\" fxLayout.gt-md=\"row\">\n                                    <div class=\"p-12\" style=\"text-align: right;\" *ngIf=\"addPermission\">\n                                        <span class=\"mat-raised-button mat-accent\" (click)=\"AddScheduleJob()\"\n                                            *ngIf=\"!addScheduleJob\" color=\"accent\" mat-raised-button=\"\">\n                                            Add Job\n                                        </span>\n                                    </div>\n\n                                    <form class=\"mat-white-bg mat-elevation-z4 p-24 mr-24 mb-24\" *ngIf=\"addScheduleJob\"\n                                        fxLayout=\"column\" fxLayoutAlign=\"start\" [formGroup]=\"scheduleJobFormGroup\"\n                                        fxFlex=\"1 0 auto\" (ngSubmit)=\"onAddScheduleJobFormSubmit();\">\n                                        <div class=\"panel panel-primary\">\n                                            <div class=\"panel-heading\">{{title}} ScheduleJob</div>\n                                            <div class=\"panel-body\">\n\n                                                <div class=\"col-md-12\">\n                                                    <!--Repository Name-->\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <mat-select placeholder=\"Select Repository Name\"\n                                                                [formControl]=\"scheduleJobFormGroup.controls['repository']\" required>\n                                                                <mat-option *ngFor=\"let repository of repositoryList\"\n                                                                    [value]=\"repository.repositoryId\">\n                                                                    {{ repository.repositoryName }}\n                                                                </mat-option>\n                                                            </mat-select>\n                                                            <mat-error\n                                                                *ngIf=\"scheduleJobFormGroup.controls['repository'].hasError('required') && scheduleJobFormGroup.controls['repository'].touched\"\n                                                                class=\"alert alert-danger\">Select Repository Name\n                                                            </mat-error>\n                                                           <!--  <mat-error *ngIf=\"scheduleJobFormGroup.controls['repository'].hasError('duplicateDivisionName')\"\n                                                            class=\"alert alert-danger\">\n                                                            Repository Name Already Exists\n                                                          </mat-error> -->\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                    <!-- Job Type -->\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <mat-select placeholder=\"Select Job Type\"\n                                                                [formControl]=\"scheduleJobFormGroup.controls['jobType']\" required>\n                                                                <mat-option *ngFor=\"let jobType of jobTypeList\"\n                                                                    [value]=\"jobType.jobTypeId\">\n                                                                    {{ jobType.jobTypeName }}\n                                                                </mat-option>\n                                                            </mat-select>\n                                                            <mat-error\n                                                                *ngIf=\"scheduleJobFormGroup.controls['jobType'].hasError('required') && scheduleJobFormGroup.controls['jobType'].touched\"\n                                                                class=\"alert alert-danger\">Select Job Type\n                                                            </mat-error>\n                                                        </mat-form-field>\n\n                                                    </div>\n                                                    <!-- Time Interval -->\n                                                    <div class=\"col-md-3\">\n                                                        <mat-form-field fxFlex=\"30\">\n                                                            <mat-select placeholder=\"Select Time Interval\"\n                                                                [formControl]=\"scheduleJobFormGroup.controls['timeInterval']\" required>\n                                                                <mat-option\n                                                                    *ngFor=\"let timeInterval of timeIntervalList\"\n                                                                    [value]=\"timeInterval.timeIntervalId\">\n                                                                    {{ timeInterval.timeInterval }}\n                                                                </mat-option>\n                                                            </mat-select>\n                                                            <mat-error\n                                                                *ngIf=\"scheduleJobFormGroup.controls['timeInterval'].hasError('required') && scheduleJobFormGroup.controls['timeInterval'].touched\"\n                                                                class=\"alert alert-danger\">Select Time Interval\n                                                            </mat-error>\n                                                            <mat-error *ngIf=\"scheduleJobFormGroup.controls['timeInterval'].hasError('duplicateTimeinterval')\"\n                                                            class=\"alert alert-danger\">\n                                                            Timeinterval Already Exists\n                                                          </mat-error>\n                                                        </mat-form-field>\n\n                                                    </div>\n                                                    <div class=\"col-md-3 mt-10\">\n                                                        <div fxFlex=\"10\" class=\"p-12 d-inline pl-5\" fxLayoutAlign=\"center center\"\n                                                            style=\"padding-bottom:10px;\">\n                                                            <button mat-raised-button color=\"accent\"\n                                                                [disabled]=\"scheduleJobFormGroup.invalid\"\n                                                                class=\"submit-button\" aria-label=\"Submit\">\n                                                                {{title}}\n                                                            </button>\n                                                           \n                                                        </div> &nbsp;\n                                                        <div class=\"p-12 pl-5 d-inline\" fxFlex=\"10\">\n                                                                <span class=\"mat-raised-button mat-warn\"\n                                                                    (click)=\"onGoBack()\" color=\"warn\" mat-raised-button=\"\">\n                                                                    Close\n                                                                </span>\n                                                            </div>\n                                                        <mat-error\n                                                        *ngIf=\"combination\"\n                                                        class=\"alert alert-danger\">This combination already exists.\n                                                    </mat-error>\n                                                    </div>\n                                                    <!-- <div class=\"col-md-1\">\n                                                        \n                                                    </div> -->\n                                                </div>\n                                                <div [hidden]=\"!status\" style=\"color:darkgreen;text-align: center\">Added\n                                                    Successfully!!!</div>\n                                            </div>\n\n                                        </div>\n                                    </form>\n                                </div>\n\n\n                                <div class=\"example-header\">\n                                    <div class=\"col-sm-4\">\n                                    <mat-form-field>\n                                        <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n                                    </mat-form-field>\n                                </div>\n                                </div>\n                                <div class=\"clear\"> </div>\n\n                                <div class=\"example-container mat-elevation-z8\">\n\n                                    <mat-table [dataSource]=\"scheduleJobDataSource\" matSort>\n\n                                        <ng-container matColumnDef=\"sno\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Sno.</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.sno}}</mat-cell>\n                                        </ng-container>\n\n\n                                        <ng-container matColumnDef=\"jobId\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Scheduled Id\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.jobId}}</mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"repositoryCode\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Division Code\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.repositoryCode}}</mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"repositoryName\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Division Name\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.repositoryName}}</mat-cell>\n                                        </ng-container>\n\n                                        <ng-container matColumnDef=\"jobTypeName\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Job Type\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.jobTypeName}}</mat-cell>\n                                        </ng-container>\n                                        <ng-container matColumnDef=\"timeInterval\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Time Interval\n                                            </mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.timeInterval}}</mat-cell>\n                                        </ng-container>\n                                        <!-- <ng-container matColumnDef=\"isActive\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\"> {{row.isActive}}</mat-cell>\n                                        </ng-container> -->\n                                        <ng-container matColumnDef=\"id\">\n                                            <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\n                                            <mat-cell *matCellDef=\"let row\">\n                                                <a mat-icon-button matTooltip=\"Edit\">\n                                                    <button mat-icon-button matTooltip=\"Edit\" *ngIf=\"editPermission\"\n                                                        (click)=\"editScheduleJobById(row.jobId)\">\n                                                        <mat-icon style=\"color: rgb(0, 145, 234);\">edit</mat-icon>\n                                                    </button>\n                                                </a>\n                                                <button mat-icon-button matTooltip=\"Delete\" *ngIf=\"deletePermission\"\n                                                    (click)=\"deleteScheduleJob(row.jobId)\">\n                                                    <mat-icon style=\"color: rgb(244, 67, 54);\">delete</mat-icon>\n                                                </button>\n                                            </mat-cell>\n                                        </ng-container>\n                                        <mat-header-row *matHeaderRowDef=\"scheduleJobDisplayedColumns\"></mat-header-row>\n                                        <mat-row *matRowDef=\"let row; columns: scheduleJobDisplayedColumns;\">\n                                        </mat-row>\n                                    </mat-table>\n                                    <div [hidden]=\"!status\" style=\"color: rgb(244, 67, 54);text-align: center\">delected\n                                        Successfully!!!\n                                    </div>\n                                    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, ViewChild, OnInit, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog, MatDialogRef } from '@angular/material';\nimport { ScheduleJobPayload } from '../../payloads/schedule-job.payload';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { FuseConfirmDialogComponent } from '../../components/confirm-dialog/confirm-dialog.component';\nimport { ScheduleJobModel } from 'src/app/models/schedule-job.model';\nimport { ScheduleJobService } from 'src/app/services/schedule-job.service';\nimport { Constants } from 'src/app/common/constants';\nimport { CommonService } from 'src/app/common/common.service';\n@Component({\n  selector: 'app-scheduler-settings',\n  templateUrl: './scheduler-settings.component.html',\n  styleUrls: ['./scheduler-settings.component.css']\n})\nexport class SchedulerSettingsComponent implements OnInit {\n\n  editPermission: boolean = true;\n  addPermission: boolean = true;\n  deletePermission: boolean = true;\n  rolePermission: boolean = true;\n  repositoryList: any = [];\n  jobTypeList: any = [];\n  timeIntervalList: any = [];\n  confirmDialogRef: MatDialogRef<FuseConfirmDialogComponent>;\n  status: boolean;\n  addScheduleJob: boolean = false;\n  saveScheduleJob: boolean;\n  cloneUpdateScheduleJob: boolean = true;\n  scheduleJobData: any;\n  scheduleJobFormGroup: FormGroup;\n  scheduleJobErrors: any;\n  scheduleJobResponse: any;\n  editScheduleJobResponse: any;\n  combination: boolean = false;\n  portPattern = \"^[0-9]{4}$\";\n  pattern = \"[a-zA-Z][a-zA-Z ]*\";\n  ipPattern = \"(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\";\n  loggedUserData: any = JSON.parse(localStorage.getItem('userData'));\n  title: string = \"Add\";\n  scheduleJobDisplayedColumns = ['sno', 'jobId', 'repositoryCode', 'repositoryName', 'jobTypeName', 'timeInterval', 'id'];\n  scheduleJobDataSource: MatTableDataSource<ScheduleJobModel>;\n  @ViewChild(MatPaginator, { static: true }) scheduleJobPaginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  constructor(\n    private formBuilder: FormBuilder,\n    private scheduleJobService: ScheduleJobService,\n    public dialog: MatDialog,\n    private spinnerService: Ng4LoadingSpinnerService,\n    private commonService: CommonService,\n  ) {\n    this.scheduleJobErrors = {\n      jobTypeId: {},\n      repositoryId: {},\n      timeIntervalId: {}\n    };\n  }\n\n  ngOnInit() {\n    this.rolePermission = this.commonService.rolePermission();\n    this.addPermission = this.commonService.getPermission(\"Add\");\n    this.editPermission = this.commonService.getPermission(\"Edit\");\n    this.deletePermission = this.commonService.getPermission(\"Delete\");\n   \n    this.findAllScheduleJobData();\n    this.scheduleJobFormGroup = this.formBuilder.group({\n      id: 0,\n      //'jobId': [null, Validators.compose([Validators.required])], //, this.duplicateDivisionCode.bind(this)\n      'jobType': [null, Validators.compose([Validators.required])], //, this.duplicateDivisionName.bind(this)\n      'repository': [null, Validators.compose([Validators.required])], //, this.duplicateDivisionName.bind(this)\n      'timeInterval': [null, Validators.compose([Validators.required]), this.duplicateTimeinterval.bind(this)]\n    });\n    this.scheduleJobFormGroup.valueChanges.subscribe(() => {\n      this.onFormValuesChanged();\n    });\n  }\n  onFormValuesChanged() {\n    for (const field in this.scheduleJobErrors) {\n      if (!this.scheduleJobErrors.hasOwnProperty(field)) {\n        continue;\n      }\n      this.scheduleJobErrors[field] = {};\n      const control = this.scheduleJobFormGroup.get(field);\n      if (control && control.dirty && !control.valid) {\n        this.scheduleJobErrors[field] = control.errors;\n      }\n    }\n  }\n  \n  duplicateTimeinterval() {\n    const q = new Promise((resolve, reject) => {\n     /*  if(this.title == Constants.EVENTS.UPDATE){\n        resolve(null);\n      }else{ */\n      let divisionName = this.scheduleJobFormGroup.controls['repository'].value;\n      let timeinterval = this.scheduleJobFormGroup.controls['timeInterval'].value;\n      let jobType = this.scheduleJobFormGroup.controls['jobType'].value;\n      //console.log('jobtype: '+jobType)\n      //console.log(JSON.stringify(this.scheduleJobData))\n      console.log('divisionName='+divisionName+\" timeinterval= \"+timeinterval+' jobtype= '+jobType)\n      console.log('-------------------------------------------------')\n       var filteredArray = !!this.scheduleJobData && this.scheduleJobData.filter(function (division) {\n        //console.log(JSON.stringify(division.interval))\n        console.log('divisionName='+division.repository.repositoryId+\" timeinterval= \"+division.interval.timeIntervalId+' jobtype= '+division.jobType.jobTypeId)\n        return division.repository.repositoryId == divisionName && \n                division.jobType.jobTypeId == jobType && \n                division.interval.timeIntervalId == timeinterval;\n      });\n      console.log('filteredArray.length= '+filteredArray.length)\n      if (filteredArray.length !== 0) {\n        resolve({ 'duplicateTimeinterval': true });\n      } else {\n        resolve(null);\n      }\n      //}\n    });\n    \n    return q;\n  }\n\n  duplicateDivisionName() {\n    const q = new Promise((resolve, reject) => {\n      if(this.title == Constants.EVENTS.UPDATE){\n        resolve(null);\n      }else{\n      let divisionName = this.scheduleJobFormGroup.controls['repository'].value;\n       var filteredArray = !!this.scheduleJobData && this.scheduleJobData.filter(function (division) {\n        return division.repository.repositoryId == divisionName;\n      });\n      if (filteredArray.length !== 0) {\n        resolve({ 'duplicateDivisionName': true });\n      } else {\n        resolve(null);\n      }\n      }\n    });\n    \n    return q;\n  }\n  \n\n  onAddScheduleJobFormSubmit() {\n    let jobTypeId: number = this.scheduleJobFormGroup.value.jobType\n    let repositoryId: number = this.scheduleJobFormGroup.value.repository;\n    let timeIntervalId: number = this.scheduleJobFormGroup.value.timeInterval;\n    if (!this.scheduleJobFormGroup.valid) {\n      return;\n    }\n    if (!!this.editScheduleJobResponse && jobTypeId == this.editScheduleJobResponse.jobType.jobTypeId &&\n      repositoryId == this.editScheduleJobResponse.repository.repositoryId &&\n      timeIntervalId == this.editScheduleJobResponse.timeInterval.timeIntervalId) {\n      this.combination = true;\n      setTimeout(() => {\n        this.combination = false;\n      }, 3000);\n      return false;\n    }\n    if (this.title == Constants.EVENTS.ADD || this.title == Constants.EVENTS.SAVE) {\n      this.spinnerService.show();\n      ScheduleJobPayload.ADD_PAYLOAD.createdBy = this.loggedUserData.id;\n      ScheduleJobPayload.ADD_PAYLOAD.modifiedBy = this.loggedUserData.id;\n      ScheduleJobPayload.ADD_PAYLOAD.jobTypeId = jobTypeId;\n      ScheduleJobPayload.ADD_PAYLOAD.repositoryId = repositoryId;\n      ScheduleJobPayload.ADD_PAYLOAD.timeIntervalId = timeIntervalId;      \n      this.addScheduleJob = false;\n      this.scheduleJobService.addSchedulerSettings(ScheduleJobPayload.ADD_PAYLOAD).subscribe((response) => {        \n        this.scheduleJobResponse = response;\n        if (!!this.scheduleJobResponse && this.scheduleJobResponse.code == 200) {\n          this.commonService.showAlertMessage(this.scheduleJobResponse.message);\n          this.saveScheduleJob = false;\n          this.findAllScheduleJobData();\n          this.scheduleJobFormGroup.reset();\n          this.addScheduleJob = false;\n        } else {\n          this.commonService.showAlertMessage(\"ScheduleJob Addition Failed\");\n        }\n        this.spinnerService.hide();\n      },\n        error => error => {\n          this.scheduleJobErrors = error\n          console.log(' >>> ERROR ' + error);\n          this.commonService.showAlertMessage(this.scheduleJobErrors);\n          this.spinnerService.hide();\n        })\n    }\n    else if (this.title == Constants.EVENTS.UPDATE) {\n      this.spinnerService.show();\n      this.saveScheduleJob = false;\n      let jobId: number = this.editScheduleJobResponse.jobId;\n      ScheduleJobPayload.UPDATE_PAYLOAD.modifiedBy = this.loggedUserData.id;\n      ScheduleJobPayload.UPDATE_PAYLOAD.jobTypeId = jobTypeId;\n      ScheduleJobPayload.UPDATE_PAYLOAD.repositoryId = repositoryId;\n      ScheduleJobPayload.UPDATE_PAYLOAD.timeIntervalId = timeIntervalId;\n      ScheduleJobPayload.UPDATE_PAYLOAD.jobId = jobId;\n      \n\n\n      this.scheduleJobService.updateScheduleJob(ScheduleJobPayload.UPDATE_PAYLOAD).subscribe((response) => {       \n        this.scheduleJobResponse = response;\n        if (!!this.scheduleJobResponse && this.scheduleJobResponse.code == 200) {\n          this.commonService.showAlertMessage(this.scheduleJobResponse.message);\n          this.saveScheduleJob = false;\n          this.findAllScheduleJobData();\n          this.scheduleJobFormGroup.reset();\n          this.addScheduleJob = false;\n        } else {\n          this.commonService.showAlertMessage(\"ScheduleJob Updating Failed\");\n        }\n        this.spinnerService.hide();\n      },\n        error => error => {\n          this.scheduleJobErrors = error\n          console.log(' >>> ERROR ' + error);\n          this.commonService.showAlertMessage(\"ScheduleJob Updating Failed\");\n          this.spinnerService.hide();\n        })\n      \n    }\n\n\n  }\n\n  deleteScheduleJob(id) {\n    this.confirmDialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n      disableClose: false\n    });\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete the selected division?';\n    this.confirmDialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.spinnerService.show();\n        this.scheduleJobService.deleteScheduleJob(id)\n          .subscribe((response) => {\n            this.scheduleJobResponse = response;\n            if (!!this.scheduleJobResponse && this.scheduleJobResponse.code == 200) {\n              this.commonService.showAlertMessage(this.scheduleJobResponse.message);\n              this.saveScheduleJob = false;\n              this.findAllScheduleJobData();\n              this.scheduleJobFormGroup.reset();\n              this.addScheduleJob = false;\n            } else {\n              this.commonService.showAlertMessage(\"ScheduleJob Deletion Failed\");\n            }\n          }, error => {\n            this.scheduleJobErrors = error\n            console.log(' >>> ERROR ' + error);\n            this.commonService.showAlertMessage(\"ScheduleJob Deletion Failed\");\n            this.spinnerService.hide();\n          });\n      }\n      this.confirmDialogRef = null;\n    });\n\n\n    this.spinnerService.hide();\n\n  }\n\n  findAllScheduleJobData() {\n    this.spinnerService.show();\n    const scheduleJobData: ScheduleJobModel[] = [];\n    this.scheduleJobService.findAllSchedulerJobs().subscribe((data) => {\n      this.scheduleJobData = data;\n      //console.log(JSON.stringify(data))\n      for (let i = 0; i < this.scheduleJobData.length; i++) {\n        if (!this.rolePermission) {\n          if (this.scheduleJobData[i].repository.repositoryCode == this.loggedUserData.divisionCode) {\n            this.scheduleJobData[i].sno = i + 1;\n            this.scheduleJobData[i].repositoryName = this.scheduleJobData[i].repository.repositoryName;\n            this.scheduleJobData[i].jobTypeName = this.scheduleJobData[i].jobType.jobTypeName\n            this.scheduleJobData[i].repositoryCode = this.scheduleJobData[i].repository.repositoryCode;\n            this.scheduleJobData[i].interval = this.scheduleJobData[i].timeInterval;\n            this.scheduleJobData[i].timeInterval = this.scheduleJobData[i].timeInterval != null ? this.scheduleJobData[i].timeInterval.timeInterval : 0;           \n            scheduleJobData.push(this.scheduleJobData[i]);\n          }else if(this.loggedUserData.divisionCode == 'All'){\n            this.scheduleJobData[i].sno = i + 1;\n            this.scheduleJobData[i].repositoryName = this.scheduleJobData[i].repository.repositoryName;\n            this.scheduleJobData[i].jobTypeName = this.scheduleJobData[i].jobType.jobTypeName\n            this.scheduleJobData[i].repositoryCode = this.scheduleJobData[i].repository.repositoryCode;\n            this.scheduleJobData[i].interval = this.scheduleJobData[i].timeInterval;\n            this.scheduleJobData[i].timeInterval = this.scheduleJobData[i].timeInterval != null ? this.scheduleJobData[i].timeInterval.timeInterval : 0;            \n            scheduleJobData.push(this.scheduleJobData[i]);\n          }\n        } else {\n          if (this.scheduleJobData[i].repository.repositoryCode == this.loggedUserData.divisionCode) {\n          this.scheduleJobData[i].sno = i + 1;\n          this.scheduleJobData[i].repositoryName = this.scheduleJobData[i].repository.repositoryName;\n          this.scheduleJobData[i].jobTypeName = this.scheduleJobData[i].jobType.jobTypeName\n          this.scheduleJobData[i].repositoryCode = this.scheduleJobData[i].repository.repositoryCode;\n          this.scheduleJobData[i].interval = this.scheduleJobData[i].timeInterval;\n          this.scheduleJobData[i].timeInterval = this.scheduleJobData[i].timeInterval != null ? this.scheduleJobData[i].timeInterval.timeInterval : 0;          \n          scheduleJobData.push(this.scheduleJobData[i]);\n          }else if(this.loggedUserData.divisionCode == 'All'){\n            this.scheduleJobData[i].sno = i + 1;\n            this.scheduleJobData[i].repositoryName = this.scheduleJobData[i].repository.repositoryName;\n            this.scheduleJobData[i].jobTypeName = this.scheduleJobData[i].jobType.jobTypeName\n            this.scheduleJobData[i].repositoryCode = this.scheduleJobData[i].repository.repositoryCode;\n            this.scheduleJobData[i].interval = this.scheduleJobData[i].timeInterval;\n            this.scheduleJobData[i].timeInterval = this.scheduleJobData[i].timeInterval != null ? this.scheduleJobData[i].timeInterval.timeInterval : 0;            \n            scheduleJobData.push(this.scheduleJobData[i]);\n          }\n        }\n\n      }     \n      this.scheduleJobDataSource = new MatTableDataSource(scheduleJobData);\n      this.scheduleJobDataSource.paginator = this.scheduleJobPaginator;\n      this.scheduleJobDataSource.sort = this.sort;\n      this.spinnerService.hide();\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.scheduleJobDataSource.filter = filterValue;\n  }\n\n  scheduleJobEditAction(id: number) {\n    this.addScheduleJob = true;\n    this.scheduleJobService.getScheduleJobById(id).subscribe((response) => {\n      this.cloneUpdateScheduleJob = false;\n      this.saveScheduleJob = false;\n      this.scheduleJobResponse = response;\n      this.editScheduleJobResponse = response;      \n      this.scheduleJobFormGroup.patchValue({\n        repository: this.scheduleJobResponse.repository.repositoryId,\n        jobType: this.scheduleJobResponse.jobType.jobTypeId,\n        timeInterval: this.scheduleJobResponse.timeInterval != null ? this.scheduleJobResponse.timeInterval.timeIntervalId : 0\n      });\n      this.spinnerService.hide();\n    }, error =>{ this.spinnerService.hide(); this.scheduleJobErrors = error});\n    this.commonService.scrollTop(\"forms\");\n    this.updateFields();\n    //this.spinnerService.hide();\n    this.scheduleJobFormGroup.valueChanges.subscribe(() => {\n      this.onFormValuesChanged();\n    });\n  }\n\n  editScheduleJobById(id) {\n    this.spinnerService.show();\n    this.addScheduleJob = true;\n    this.cloneUpdateScheduleJob = false;\n    this.scheduleJobEditAction(id);\n    this.title = \"Update\";   \n  }\n\n  updateFields() {\n    //this.spinnerService.show();\n    this.addScheduleJob = true;\n    this.scheduleJobService.findAllSchedulerJobsList().subscribe((response) => {\n      this.cloneUpdateScheduleJob = false;\n      this.saveScheduleJob = false;\n      this.scheduleJobResponse = response;     \n      this.repositoryList = this.scheduleJobResponse.repositoryList;\n      this.jobTypeList = this.scheduleJobResponse.jobTypeList;\n      this.timeIntervalList = this.scheduleJobResponse.timeIntervalList;    \n      //this.spinnerService.hide(); \n    }, error => {this.scheduleJobErrors = error; this.spinnerService.hide();});\n    this.commonService.scrollTop(\"forms\");\n  }\n\n  AddScheduleJob() {\n    this.addScheduleJob = true;\n    this.title = 'Add';\n    this.updateFields();\n  }\n  onGoBack() {\n    this.scheduleJobFormGroup.reset();\n    this.saveScheduleJob = false;\n    this.cloneUpdateScheduleJob = true;\n    this.addScheduleJob = false;\n    this.title = 'Save';\n  }\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SchedulerSettingsComponent } from './scheduler-settings.component';\r\nimport { MatMenuModule, MatGridListModule } from '@angular/material';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { MaterialModule } from 'src/app/modules/material.modules';\r\nimport { RepositoryService } from 'src/app/services/repository.service';\r\nimport { ScheduleJobService } from 'src/app/services/schedule-job.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path     : '',\r\n        component: SchedulerSettingsComponent,\r\n       \r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports     : [     \r\n        RouterModule.forChild(routes),\r\n        Ng4LoadingSpinnerModule.forRoot(),\r\n        MatMenuModule,\r\n        MatGridListModule,\r\n        CommonModule,\r\n        MatMenuModule,\r\n        MatGridListModule,\r\n        CommonModule,\r\n        MaterialModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [\r\n        SchedulerSettingsComponent,        \r\n    ],\r\n    providers   : [\r\n       ScheduleJobService\r\n    ],\r\n    exports     : [\r\n        SchedulerSettingsComponent\r\n    ]\r\n})\r\nexport class SchedulerSettingsModule\r\n{\r\n}\r\n\r\n","export const ScheduleJobPayload = {\r\n    ADD_PAYLOAD: {\r\n        \"createdBy\": 0,\r\n        \"modifiedBy\": 0,\r\n        \"jobTypeId\": 0,\r\n        \"repositoryId\": 0,\r\n        \"timeIntervalId\": 0\r\n    },\r\n    UPDATE_PAYLOAD: {\r\n        \"modifiedBy\": 0,\r\n        \"jobId\": 0,\r\n        \"jobTypeId\": 0,\r\n        \"repositoryId\": 0,\r\n        \"timeIntervalId\": 0\r\n    },\r\n};","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { ScheduleJobModel } from '../models/schedule-job.model';\r\n@Injectable()\r\nexport class ScheduleJobService {\r\n    myAppUrl: string = environment.apiUrl;\r\n    header: any;\r\n    accessToken: any = JSON.parse(localStorage.getItem('accessToken'));\r\n    constructor(private http: HttpClient) {\r\n        this.header = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `Bearer ${this.accessToken}`\r\n        });\r\n    }\r\n\r\n    findAllSchedulerJobs() {\r\n        return this.http.get<ScheduleJobModel[]>(environment.apiUrl + '/findAllSchedulerJobs', { headers: this.header });\r\n    }\r\n\r\n    getScheduleJobById(id: number) {\r\n        return this.http.get(environment.apiUrl + '/findScheduleJobById/' + id, { headers: this.header });\r\n    }\r\n\r\n    existsRepositoryName(repositoryName: number) {\r\n        return this.http.get(environment.apiUrl + '/existsRepositoryName/' + repositoryName, { headers: this.header });\r\n    }\r\n\r\n    addSchedulerSettings(schedulerJob) {\r\n        return this.http.post(environment.apiUrl + '/addSchedulerSettings', schedulerJob, { headers: this.header });\r\n    }\r\n    findAllSchedulerJobsList(){\r\n        return this.http.get(environment.apiUrl + '/findAllSchedulerJobsList', { headers: this.header });\r\n    }\r\n\r\n    updateScheduleJob(scheduleJob) {\r\n        return this.http.put(environment.apiUrl + '/updateSchedulerSettings', scheduleJob, { headers: this.header });\r\n    }\r\n\r\n    deleteScheduleJob(id: string) {\r\n        return this.http.delete(environment.apiUrl + '/deleteSchedulerSettings/' + id, { headers: this.header });\r\n    }\r\n}"],"sourceRoot":""}