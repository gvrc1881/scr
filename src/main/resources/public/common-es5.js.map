{"version":3,"sources":["webpack:///./src/app/services/report.service.ts","webpack:///./src/app/services/repository.service.ts","webpack:///./src/app/services/roletype.service.ts"],"names":[],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { ReportParameterModel } from '../models/reportParameter.model';\nimport {FacilityModel} from '../models/facility.model';\nimport { ReportModel } from '../models/report.model';\nimport {FailuresTableModel} from '../models/failures-table.model';\nimport { ProductModel } from '../models/product.model';\nimport { ScheduleModel } from '../models/schedule.model';\n@Injectable()\nexport class ReportService {\n    url: string = environment.apiUrl;\n    header: any;\n    accessToken: any = JSON.parse(localStorage.getItem('accessToken'));\n    constructor(private http: HttpClient) {\n        this.header = new HttpHeaders({\n            'Content-Type': 'application/json;charset=UTF-8',\n            'accept': 'application/json',\n            'Authorization': `Bearer ${this.accessToken}`\n        });\n    }\n\n    makeReport(model) {\n        return this.http.post(this.url + '/makeReport' ,model,  { headers: this.header });\n    }\n   \n\nreportParameterNames() {\n    \n    return this.http.get<ReportParameterModel>(environment.apiUrl + '/reportParameterNames' , { headers: this.header });\n}\n\ndailyProgressReports(reportType:string) {\n    \n    return this.http.get(this.url + '/dailyProgressReports/'+reportType,{ headers: this.header });\n}\nfacilityNames(){\n    console.log('facilityNames::')\n    return this.http.get<FacilityModel>(environment.apiUrl + '/facilityNames' , { headers: this.header });\n}\nfailuresTable(){\n    console.log('failuresTable::')\n    return this.http.get<FailuresTableModel>(environment.apiUrl + '/failuresTable' , { headers: this.header });\n}\npowerBlocks(){\n    console.log('powerBlocks::')\n    return this.http.get<FailuresTableModel>(environment.apiUrl + '/powerBlocks' , { headers: this.header });\n}\noheProductData(){\n    console.log('productTable-8-1-2020::')\n    return this.http.get<ProductModel>(environment.apiUrl + '/oheProductData' , { headers: this.header });\n}\ntowerCarAssetTypes(){\n    console.log('towerCarReport::')\n    return this.http.get(this.url+'/towerCarAssetTypes',{headers:this.header});\n}\noheAssetTypes(){\n    console.log('oheAssetTypes::')\n    return this.http.get(this.url+'/oheAssetTypes',{headers:this.header});\n}\noheAssetId(){\n    console.log('oheAssetIdScheduleDate::')\n    return this.http.get(this.url+'/oheAssetId',{headers:this.header});\n}\noheScheduleDate(){\n    console.log('oheAssetIdScheduleDate::')\n    return this.http.get(this.url+'/oheScheduleDate',{headers:this.header});\n}\nscheduleCode(){\n    console.log('scheduleCode Services::')\n    return this.http.get<ScheduleModel>(environment.apiUrl + '/scheduleCode' , { headers: this.header });\n}\npbSwitchControl(){\n    return this.http.get(this.url + '/pbSwitchControl',{ headers: this.header });\n}\nelementarySections(){\n    return this.http.get(this.url + '/elementarySections',{ headers: this.header });\n}\n\nsubmitForm(reportModel: ReportModel) {\n    console.log(\"model2-1-2020\"+JSON.stringify(reportModel.reportId));\n    return this.http.post(this.url + '/submitForm' ,reportModel,  { headers: this.header });\n}\n\n}\n    \n    \n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { RepositoryModel } from '../models/repository.model';\r\n@Injectable()\r\nexport class RepositoryService {\r\n    myAppUrl: string = environment.apiUrl;\r\n    header: any;\r\n    accessToken: any = JSON.parse(localStorage.getItem('accessToken'));\r\n    constructor(private http: HttpClient) {\r\n        this.header = new HttpHeaders({\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            'Accept': 'application/json',\r\n            'Authorization': `Bearer ${this.accessToken}`\r\n        });\r\n    }\r\n\r\n    getAllRepositories() {\r\n        return this.http.get<RepositoryModel[]>(environment.apiUrl + '/findAllRepositories', { headers: this.header });\r\n    }\r\n\r\n    getRepositoryById(id: number) {\r\n        return this.http.get(environment.apiUrl + '/findRepositoryById/' + id, { headers: this.header });\r\n    }\r\n\r\n    existsRepositoryCode(repositoryCode: string) {\r\n        return this.http.get(environment.apiUrl + '/existsRepositoryCode/' + repositoryCode, { headers: this.header });\r\n    }\r\n\r\n    existsRepositoryName(repositoryName: string) {\r\n        return this.http.get(environment.apiUrl + '/existsRepositoryName/' + repositoryName, { headers: this.header });\r\n    }\r\n\r\n    existsRepositoryIp(repositoryIp: string) {\r\n        return this.http.get(environment.apiUrl + '/existsRepositoryIp/' + repositoryIp, { headers: this.header });\r\n    }\r\n\r\n    AddRepository(repository) {\r\n        return this.http.post(environment.apiUrl + '/addRepository', repository, { headers: this.header });\r\n    }\r\n\r\n    updateRepository(repository) {\r\n        return this.http.put(environment.apiUrl + '/updateRepository', repository, { headers: this.header });\r\n    }\r\n\r\n    deleteRepository(id: string) {\r\n        return this.http.delete(environment.apiUrl + '/deleteRepository/' + id, { headers: this.header });\r\n    }\r\n}","import { Injectable, Inject } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Router } from '@angular/router';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class RoleTypeService {\n    myAppUrl: string = environment.apiUrl;\n    header: any;\n    accessToken: any = JSON.parse(localStorage.getItem('accessToken'));\n    constructor(private _http: HttpClient) {\n        this.header = new HttpHeaders({\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${this.accessToken}`\n        });\n    }\n    getRoleList() {        \n        return this._http.get(this.myAppUrl + '/findAllRoles', { headers: this.header })\n            .map((response: Response) => response)\n            .catch(this.errorHandler);\n    }    \n    getMasterRoleList() {        \n        return this._http.get(this.myAppUrl + '/findMasterRoles', { headers: this.header })\n            .map((response: Response) => response)\n            .catch(this.errorHandler);\n    }\n    getRoledata(id) {      \n        return this._http.get(this.myAppUrl + '/roleById/' + id , {headers:this.header})\n            .map((response: Response) => response)\n            .catch(this.errorHandler);\n    }\n    addMroleType(roleType) {\n        console.log(\"roleType:\"+JSON.stringify(roleType))\n        return this._http.post(this.myAppUrl + '/addRole', roleType, {headers:this.header})\n            .map((response: Response) => response)\n            .catch(this.errorHandler);\n    }\n\n    editMroleType(roleType, id) {\n\n        console.log(roleType);\n        console.log(id);\n        return this._http.post(this.myAppUrl + '/editRole',roleType, {headers:this.header})\n            .map((response: Response) => response)\n            .catch(this.errorHandler);\n\n    }\n    saveRolePermission(row, id) {\n\n        console.log(row);\n        console.log(id);\n\n\n        console.log(\"saveRolePermission...........\");\n        return this._http.post(this.myAppUrl + '/api/saveRolePermission/ ' + id + '?access_token=' + this.accessToken.access_token, row)\n            .map((response: Response) => response\n                // {\n                //     console.log(\"data in save role permissions\");\n                //     console.log(response);\n                // }\n            );\n\n        //response;\n    }\n    deleteRole(id) {\n        console.log(\"response\");\n        return this._http.get(this.myAppUrl + \"/deleteRole/\"+ id,{headers:this.header})\n            .map((response: Response) => {\n                console.log(response);\n            }\n                // response\n            )\n            .catch(this.errorHandler);\n    }\n    getPermissions() {\n        return this._http.get(this.myAppUrl + '/permissions',{headers:this.header})\n            .map((response: Response) => response)\n            .catch(this.errorHandler);\n    }\n    deleteRolePermission(id) {\n        return this._http.get(this.myAppUrl + \"/api/api/Permissions/Delete?id=\" + id + '?access_token=' + this.accessToken.access_token)\n            .map((response: Response) => response)\n            .catch(this.errorHandler);\n    }\n\n    getRoleTypePermissons(id) {\n\n        return this._http.get(this.myAppUrl + '/api/getRoleTypePermissons/ ' + id + '?access_token=' + this.accessToken.access_token)\n            .map((response: Response) => response)\n    }\n    duplicateRoletype(roleType) {\n        return this._http.get(this.myAppUrl + '/findDuplicateRole/'+roleType.roleType+'/1', { headers: this.header })\n            .map((response: Response) => response)\n            .catch(this.errorHandler);\n\n    }\n    createdPermissions(permissions, createdBy, obj, id) {\n       const data = {\n            \"createdBy\":createdBy,\n            \"roleTypeId\":id\n        }\n        return this._http.post(this.myAppUrl + '/savePermission', data, {headers:this.header})\n            .map((response: Response) => {\n                console.log(permissions);\n                console.log(createdBy);\n                console.log(obj);\n                console.log(id);\n            }\n                // response\n            )\n\n        //.catch(this.errorHandler);\n\n    }\n    // createdPermissions(permissions,userId,clonedRoleId,createdRoleId){    \n\n    //                      console.log(\"saveRolePermission...........\");    \n    //                          return this._http.post(this.myAppUrl +'/api/createMroleTypePermissions/'+userId+\"/\"+clonedRoleId+\"/\"+createdRoleId+'?access_token='+this.accessToken.access_token,permissions)   \n    //                             .map((response: Response) =>\n    //                                {      \n    //                                         console.log(\"data in save role permissions\"); \n    //                                         console.log(permissions);\n    //                                                 console.log(userId);\n    //                                                console.log(clonedRoleId);\n    //                                               console.log(createdRoleId);        \n    //                                 //  console.log(response);  \n    //                                      }      \n    //                                       );\n    //                                     }\n\n    errorHandler(error: Response) {\n        console.log(error);\n        return Observable.throw(error);\n    }\n}"],"sourceRoot":""}