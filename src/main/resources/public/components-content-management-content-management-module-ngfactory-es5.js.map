{"version":3,"sources":["./node_modules/@angular/material/icon/typings/index.d.ts.MatIcon.html","./src/app/components/content-management/content-management.component.html","./src/app/components/content-management/content-management.component.ts","./src/app/components/content-management/content-management.module.ts"],"names":[],"mappings":"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","file":"components-content-management-content-management-module-ngfactory-es5.js","sourcesContent":["<ng-content></ng-content>","<div class=\"content\">\n  <div class=\"\">\n    <div class=\"col-12\">\n     \n      <div class=\"clear\"></div>\n      <div class=\"row-fluid\">\n        <div class=\"panel panel-primary\">\n          <div class=\"panel-heading\">Content Management</div>\n          <div class=\"panel-body\">\n            <div id=\"forms\" class=\"page-layout simple fullwidth\" fxLayout=\"column\" fusePerfectScrollbar>\n              <div class=\"p-24\">\n                <div fxLayout=\"column\" fxLayoutAlign=\"start start\" fxLayout.gt-md=\"row\">\n                \n                  <div class=\"panel panel-primary\">\n                    <div class=\"panel-heading\"></div>\n                    <div class=\"panel-body\">\n                      <form [formGroup]=\"contentManagementFormGroup\" novalidate\n                        (ngSubmit)=\"onContentManagementSubmit()\">\n                        <div class=\"col-md-12\">\n                          <div class=\"col-md-6\">\n                            <mat-form-field fxFlex=\"30\">\n                              <mat-select placeholder=\"Type\" formControlName=\"GenOps\" [(ngModel)]=\"selectedGenOps\" (ngModelChange)=\"genOpsChange()\">\n                                <mat-option *ngFor=\"let GenOps of GenOpsArray\" [value]=\"GenOps.ID\">\n                                  {{ GenOps.VALUE}}\n                                </mat-option>\n                              </mat-select>\n                              <mat-error *ngIf=\"isSubmit && f.GenOps.errors && f.GenOps.errors.required\"\n                                class=\"alert alert-danger\">Select Gender</mat-error>\n                            </mat-form-field>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <mat-form-field fxFlex=\"30\" *ngIf=\"addPermission\">\n                              <input matInput placeholder=\"Description\" formControlName=\"description\"\n                                required />\n                              <mat-error *ngIf=\"isSubmit && f.description.errors && f.description.errors.required\"\n                                class=\"alert alert-danger\">Description required</mat-error>\n                              <mat-error *ngIf=\"isSubmit && f.description.errors && f.description.errors.pattern\"\n                                class=\"alert alert-danger\">Only alphabets allowed\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n                        </div>\n\n                        <div class=\"col-md-12\" *ngIf=\"onlyDrawing && addPermission\">\n                          <div class=\"col-md-6\">\n                            <mat-form-field fxFlex=\"30\">\n                              <input matInput placeholder=\"Asset type/Rly id\" formControlName=\"assetTypeRlyId\"\n                                required />\n                              <mat-error *ngIf=\"isSubmit && f.assetTypeRlyId.errors && f.assetTypeRlyId.errors.required\"\n                                class=\"alert alert-danger\">Asset type/Rly id required</mat-error>\n                              <mat-error *ngIf=\"isSubmit && f.assetTypeRlyId.errors && f.assetTypeRlyId.errors.pattern\"\n                                class=\"alert alert-danger\">Only alphabets allowed\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <mat-form-field fxFlex=\"30\">\n                              <input matInput placeholder=\"Make\" formControlName=\"make\"\n                                required />\n                              <mat-error *ngIf=\"isSubmit && f.make.errors && f.make.errors.required\"\n                                class=\"alert alert-danger\">Make required</mat-error>\n                              <mat-error *ngIf=\"isSubmit && f.make.errors && f.make.errors.pattern\"\n                                class=\"alert alert-danger\">Only alphabets allowed\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <mat-form-field fxFlex=\"30\">\n                              <input matInput placeholder=\"Model\" formControlName=\"model\"\n                                required />\n                              <mat-error *ngIf=\"isSubmit && f.model.errors && f.model.errors.required\"\n                                class=\"alert alert-danger\">Model required</mat-error>\n                              <mat-error *ngIf=\"isSubmit && f.model.errors && f.model.errors.pattern\"\n                                class=\"alert alert-danger\">Only alphabets allowed\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <mat-form-field fxFlex=\"30\">\n                              <input matInput placeholder=\"Doc Category\" formControlName=\"docCategory\"\n                                required />\n                              <mat-error *ngIf=\"isSubmit && f.docCategory.errors && f.docCategory.errors.required\"\n                                class=\"alert alert-danger\">Doc Category required</mat-error>\n                              <mat-error *ngIf=\"isSubmit && f.docCategory.errors && f.docCategory.errors.pattern\"\n                                class=\"alert alert-danger\">Only alphabets allowed\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n                        </div>\n\n                        <div class=\"clear\"> </div>\n                        <div class=\"col-md-12\">\n                          \n                            <input type=\"file\" *ngIf=\"addPermission\" formControlName=\"uploadFiles\" name=\"uploadFile\" id=\"uploadFile\" multiple (change)=\"upload($event)\" />\n                            <mat-error *ngIf=\"isSubmit && f.uploadFiles.errors && f.uploadFiles.errors.required\"\n                                class=\"alert alert-danger\">File required</mat-error>\n                            <div>\n                              <table class=\"table\" *ngIf=\"filesExists\">\n                                <thead>\n                                  <th>Sno</th>\n                                  <th>File Name</th>\n                                  <th>Size</th>\n                                  <th>Action</th>\n                                </thead>\n                                <tbody id=\"uploadedFilesTBodyId\">\n                                    <tr *ngFor=\"let file of selectedFiles;let i=index\">\n                                        <td>{{i+1}}</td>\n                                        <td>{{file.name}}</td>\n                                        <td>{{(file.size/1024) | number : '1.2-2'}} MB</td>\n                                        <td> <button mat-icon-button matTooltip=\"Delete\" (click)=\"removeFile(i)\">\n                                          <mat-icon style=\"color: rgb(244, 67, 54);\">delete</mat-icon>\n                                      </button>  </td>\n                                    </tr>\n                                </tbody>\n                              </table>\n                            </div>\n                            \n                        </div>\n                        <button *ngIf=\"addPermission\" class=\"mat-raised-button mat-accent\" color=\"accent\" class=\"d-inline\"\n                        mat-raised-button=\"\" type=\"submit\">\n                        Submit\n                    </button>                       \n                      </form>\n                    </div>\n                  </div>\n\n                </div>\n\n                <div class=\"clear\"> </div>\n\n              </div>\n            </div>\n            <div class=\"example-header\">\n              <div class=\"col-sm-4\">\n              <mat-form-field>\n                <input class=\"filter\" matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n              </mat-form-field>\n            </div>\n            </div>\n            <div class=\"clear\"> </div>\n            <div class=\"example-container mat-elevation-z8\">\n              <mat-table #table [dataSource]=\"dataSource\" matSort>\n          \n                 <!-- Name Column -->\n                 <ng-container matColumnDef=\"sno\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header> Sno </mat-header-cell>\n                  <mat-cell *matCellDef=\"let element\"> {{element.sno}} </mat-cell>\n                </ng-container>\n\n                <!-- Name Column -->\n                <ng-container matColumnDef=\"originalFileName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\n                  <mat-cell *matCellDef=\"let element\"> {{element.originalFileName}} </mat-cell>\n                </ng-container>\n          \n                <!-- Symbol Column -->\n                <ng-container matColumnDef=\"genOps\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header> Gen/Ops </mat-header-cell>\n                  <mat-cell *matCellDef=\"let element\"> {{element.genOps}} </mat-cell>\n                </ng-container>\n          \n                <!-- Comment Column -->\n                <ng-container matColumnDef=\"description\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header> Description </mat-header-cell>\n                  <mat-cell *matCellDef=\"let element\">                   \n                    {{element.description}}\n                  </mat-cell>                 \n                </ng-container>\n                \n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">\n                    <a mat-icon-button matTooltip=\"Edit\"  *ngIf=\"editPermission\"\n                      (click)=\"editDescription(row.id)\">\n                      <mat-icon style=\"color: #0091ea;\">edit</mat-icon>\n                    </a> \n                    <button mat-icon-button matTooltip=\"Delete\" *ngIf=\"deletePermission\"\n                      (click)=\"deleteFile(row.id)\">\n                      <mat-icon style=\"color: rgb(244, 67, 54);\">delete</mat-icon>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n              </mat-table>\n              <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n            </div>\n\n            \n          </div>\n        </div>\n\n \n      </div>\n      </div>\n    </div>\n\n    <div class=\"col-12\">\n      \n  </div>\n</div>","import { OnInit, Component, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ContentManagementService } from 'src/app/services/content-management.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog, MatDialogRef } from '@angular/material';\nimport { ContentManagementModel } from 'src/app/models/content-management.model';\nimport { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';\nimport { CommonService } from 'src/app/common/common.service';\nimport { ContentManagementDialogComponent } from '../content-management-edit-dialog/content-management-edit-dialog.component';\n\n@Component({\n    selector: 'content-management',\n    templateUrl: './content-management.component.html',\n    styleUrls: ['./content-management.component.scss']\n})\nexport class ContentManagementComponent implements OnInit {\n    editPermission: boolean = true;\n    addPermission: boolean = true;\n    deletePermission: boolean = true;\n    filesExists: boolean = false;\n    isSubmit: boolean = false;\n    isReadOnly: boolean = true;\n    onlyDrawing: boolean = false;\n    update: boolean = false;\n    selectedFiles: File[] = [];\n    uploadedFilesList: any;\n    selectedGenOps;\n    selected:string;\n    userdata: any = JSON.parse(localStorage.getItem('userData'));\n    contentManagementFormGroup: FormGroup;\n    progress: { percentage: number } = { percentage: 0 }\n    pattern = \"[a-zA-Z][a-zA-Z ]*\";\n    GenOpsArray = [{ ID: 1, VALUE: 'Circulars' }, { ID: 2, VALUE: 'Drawing' }, { ID: 3, VALUE: 'Tech Specs' }, { ID: 4, VALUE: 'Operational Manual' }, { ID: 5, VALUE: 'User manuals' }];\n\n    displayedColumns = ['sno', 'originalFileName', 'genOps', 'description', 'actions'];\n    // dataSource = new ExampleDataSource(initialData);\n    dataSource: MatTableDataSource<ContentManagementModel>;\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\n    contentManagementDialogRef: MatDialogRef<ContentManagementDialogComponent>;\n    constructor(\n        public dialog: MatDialog,\n        private formBuilder: FormBuilder,\n        private service: ContentManagementService,\n        private spinnerService: Ng4LoadingSpinnerService,\n        private commonService: CommonService,\n    ) {\n        console.log('in constructor');\n    }\n    ngOnInit() {\n        // console.log(JSON.stringify(this.userdata))\n        this.createCMForm();\n\n        var permissionName = this.commonService.getPermissionNameByLoggedData(\"CONTENT MANAGEMENT\",\"CONTENT MANAGEMENT\") ;\n  \t\tconsole.log(\"permissionName = \"+permissionName);\n  \t\tthis.addPermission = this.commonService.getPermissionByType(\"Add\", permissionName); \n    \tthis.editPermission = this.commonService.getPermissionByType(\"Edit\", permissionName);\n    \tthis.deletePermission = this.commonService.getPermissionByType(\"Delete\", permissionName);\n\n        this.contentManagementFormGroup.get('GenOps').valueChanges.subscribe(item => {\n           /*  let ops = this.GenOpsArray.filter(function (value) {\n                return item == value.ID;\n            });\n            if (item == 2) {\n                this.onlyDrawing = true;\n            } else {\n                this.onlyDrawing = false;\n            }\n            console.log(this.selectedGenOps) */\n          //  this.selectedGenOps = ops[0].VALUE;\n            //this.getUploadedFiles();\n        })\n\n    }\n\n    createCMForm() {\n        this.contentManagementFormGroup = this.formBuilder.group({\n            GenOps: ['', Validators.required],\n            description: ['', Validators.compose([Validators.required, Validators.pattern(this.pattern)])],\n            uploadFiles: ['', Validators.required],\n            assetTypeRlyId: ['', Validators.compose([Validators.required, Validators.pattern(this.pattern)])],\n            make: ['', Validators.compose([Validators.required, Validators.pattern(this.pattern)])],\n            model: ['', Validators.compose([Validators.required, Validators.pattern(this.pattern)])],\n            docCategory: ['', Validators.compose([Validators.required, Validators.pattern(this.pattern)])],\n        });\n    }\n\n    getUploadedFiles() {\n        this.spinnerService.show();\n        const uploadedFiles: ContentManagementModel[] = [];\n        this.service.getUploadedFiles(this.userdata.id, this.selected).subscribe(data => {\n           // console.log(JSON.stringify(data))\n            this.spinnerService.hide();\n\n            this.uploadedFilesList = data;\n            for (let i = 0; i < this.uploadedFilesList.length; i++) {\n                this.uploadedFilesList[i].sno = i + 1;\n                uploadedFiles.push(this.uploadedFilesList[i]);\n            }\n            this.dataSource = new MatTableDataSource(uploadedFiles);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n        }, error => {\n            console.log('ERROR >>>');\n            this.spinnerService.hide();\n        })\n    }\n    applyFilter(filterValue: string) {\n        filterValue = filterValue.trim();\n        filterValue = filterValue.toLowerCase();\n        this.dataSource.filter = filterValue;\n    }\n\n    public get f() { return this.contentManagementFormGroup.controls; }\n\n    upload(event) {\n        if (event.target.files.length > 0) { this.filesExists = true; }\n        for (var i = 0; i < event.target.files.length; i++) {\n            this.selectedFiles.push(event.target.files[i]);\n        }\n    }\n    removeFile(id) {\n        this.selectedFiles.splice(id, 1);\n    }\n    onContentManagementSubmit() {\n        console.log(this.contentManagementFormGroup.value.GenOps);\n        if (this.onlyDrawing) {\n            this.isSubmit = true;\n            if (this.contentManagementFormGroup.invalid) {\n                this.isSubmit = false;\n                return;\n            }\n        } else {\n            if (this.contentManagementFormGroup.value.description == '' ||\n                this.contentManagementFormGroup.value.GenOps == '' ||\n                this.contentManagementFormGroup.value.uploadFiles == '') {\n                this.isSubmit = false;\n                return false;\n            } else {\n                this.isSubmit = true;\n            }\n        }\n        if (this.isSubmit) {\n\n            this.spinnerService.show();\n            let opsId = this.contentManagementFormGroup.value.GenOps;\n            let description = this.contentManagementFormGroup.value.description;\n            let ops = this.GenOpsArray.filter(function (value) {\n                return opsId == value.ID;\n            });\n\n            let saveDetails = {\n                'description': this.contentManagementFormGroup.value.description,\n                'divisionCode': this.userdata.divisionCode,\n                'createdBy': this.userdata.id,\n                'createdDate': new Date(),\n                'GenOps': ops[0].VALUE,\n                'zonal': 'zonal',\n                'FU': 'PSI',\n                'topic': 'Indents',\n                \"assetTypeRlyId\": this.contentManagementFormGroup.value.assetTypeRlyId,\n                \"make\": this.contentManagementFormGroup.value.make,\n                \"model\": this.contentManagementFormGroup.value.model,\n                \"docCategory\": this.contentManagementFormGroup.value.docCategory,\n            }\n            this.service.uploadAttachedFiles(this.selectedFiles, saveDetails).subscribe(data => {\n                console.log(JSON.stringify(data));\n                this.spinnerService.hide();\n                this.commonService.showAlertMessage(\"Files Uploaded and Saved Successfully\");\n                this.selectedFiles = [];\n                this.filesExists = false;\n                window.location.reload();\n                //this.contentManagementFormGroup.reset();\n                this.getUploadedFiles();\n            }, error => {\n                console.log('ERROR >>>');\n                this.spinnerService.hide();\n                this.commonService.showAlertMessage(\"Files Uploading Failed.\");\n            })\n        }\n    }\n\n    deleteFile(id: number) {\n        this.spinnerService.show();\n        this.service.deleteFile(id).subscribe(data => {\n            this.spinnerService.hide();\n            this.commonService.showAlertMessage(\"Files Uploaded and Saved Successfully\");\n            this.selectedFiles = [];\n            this.filesExists = false;\n            this.contentManagementFormGroup.reset();\n            this.getUploadedFiles();\n        }, error => {\n            console.log('ERROR >>>');\n            this.spinnerService.hide();\n            this.commonService.showAlertMessage(\"Files Uploading Failed.\");\n        })\n    }\n    editDescription(id: number) {\n        let selectedRow = this.dataSource.filteredData.filter(data => {\n            return id == data.id;\n        });\n        console.log(selectedRow);\n        this.contentManagementDialogRef = this.dialog.open(ContentManagementDialogComponent, {\n            disableClose: false,\n            //height: '200px',\n            width: '40%',\n            data: selectedRow\n        });\n        this.contentManagementDialogRef.afterClosed().subscribe(result => {\n            console.log(`Dialog result: ${result}`);\n            this.getUploadedFiles();\n        });\n    }\n\n\n    genOpsChange() {\n        if(this.selectedGenOps){\n       // console.log('venkat;' + this.selectedGenOps);\n        let id = this.selectedGenOps;\n        let ops = this.GenOpsArray.find(function (value) {\n            return id == value.ID;\n        });\n        if (this.selectedGenOps == 2) {\n            this.onlyDrawing = true;\n        } else {\n            this.onlyDrawing = false;\n        }\n     //  console.log(ops)\n        this.selected = ops.VALUE;\n       // console.log(this.selected)\n        this.getUploadedFiles();\n        }\n    }\n\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { EnergyBillPaymentService } from 'src/app/services/energy-bill-payment.service';\nimport { ContentManagementComponent } from './content-management.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatMenuModule, MatGridListModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from 'src/app/modules/material.modules';\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\nimport { ContentManagementService } from 'src/app/services/content-management.service';\nimport { SatPopoverModule } from '@ncstate/sat-popover';\nimport { InlineEditComponent } from '../inline-edit/inline-edit.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ContentManagementComponent,\n    }\n];\n\n@NgModule({\n    declarations: [\n        ContentManagementComponent,\n        InlineEditComponent\n    ],\n    imports: [\n        RouterModule.forChild(routes),\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,        \n        Ng4LoadingSpinnerModule.forRoot()\n    ],\n    providers: [\n        ContentManagementService\n    ],\n    exports:[\n        ContentManagementComponent\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class ContentManagementModule {\n\n}"],"sourceRoot":""}