{"version":3,"sources":["./src/app/components/reports/reportParameterDisplay.component.html","./src/app/components/reports/reportParameterDisplay.component.ts","./src/app/components/reports/reportParameterDisplay.module.ts","./src/app/models/report.model.ts","./src/app/payloads/report.payload.ts"],"names":[],"mappings":"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","file":"components-reports-reportParameterDisplay-module-ngfactory-es5.js","sourcesContent":["<div class=\"content\">\n     <div class=\"\">\n    \n <div class=\"row-fluid\">\n      <h1>{{id  | uppercase }}</h1>\n      <form>\n          \n     <div class=\"panel panel-primary\"> <table border=\"2\" >   <ul *ngFor=\"let names of parameterData\"> <div *ngIf=\"(names.reportId==id)\">\n      <tr>\n        <td  width= 250px>{{names.parameterName}} :</td>\n     <td *ngIf=\"(names.parameterName=='date')\"><input type=\"Date\" name=\"fromDate\" id=\"fromDate\" [(ngModel)]=\"reportModel.fromDate\"></td> \n     <td *ngIf=\"(names.parameterName=='Date')\"><input type=\"Date\" name=\"fromDate\" id=\"fromDate\" [(ngModel)]=\"reportModel.fromDate\"></td> \n     <td *ngIf=\"(names.parameterName=='DayReadings And ConsumptionDate')\"><input type=\"Date\" name=\"fromDate\" id=\"fromDate\" [(ngModel)]=\"reportModel.fromDate\"></td> \n     <td *ngIf=\"(names.parameterName=='fromDate')\"><input type=\"Date\" name=\"fromDate\" id=\"fromDate\" [(ngModel)]=\"reportModel.fromDate\"></td>\n     <td *ngIf=\"(names.parameterName=='toDate')\"><input type=\"Date\" name=\"toDate\" id=\"toDate\" [(ngModel)]=\"reportModel.toDate\"></td>\n     <td *ngIf=\"(names.parameterName=='failureFromDate')\"><input type=\"Date\" name=\"failureFromDate\" id=\"failureFromDate\" [(ngModel)]=\"reportModel.failureFromDate\"></td>\n     <td *ngIf=\"(names.parameterName=='failureToDate')\"><input type=\"Date\" name=\"failureToDate\" id=\"failureToDate\" [(ngModel)]=\"reportModel.failureToDate\"></td>\n\n     <td *ngIf=\"(names.parameterName=='zone')\">\n          <select name=\"zone\" id=\"zone\"  [(ngModel)]=\"reportModel.zone\"  (change)=\"divisionCode(reportModel.zone)\">\n               <option *ngFor = \"let item of zoneData\" [ngValue]=\"item\">{{item.code}}</option>\n          </select>\n\n     </td>\n     \n     <td *ngIf=\"(names.parameterName=='division')\">\n          <select name=\"division\" id=\"division\"  [(ngModel)]=\"reportModel.division\"  (change)=\"subDivision(reportModel.division)\">\n               <option *ngFor = \"let item of divisionsData\" [ngValue]=\"item\">{{item.code}}</option>\n          </select>\n\n     </td>\n     <td *ngIf=\"(names.parameterName=='subDivision')\">\n          <select name=\"subDivision\" id=\"subDivision\"  [(ngModel)]=\"reportModel.subDivision\"  (change)=\"facility(reportModel.subDivision)\">\n               <option *ngFor = \"let item of subDivisionData\" [ngValue]=\"item\">{{item.code}}</option>\n          </select>\n\n     </td>\n     <td *ngIf=\"(names.parameterName=='depot')\">\n          <select name=\"facilityName\" id=\"facilityName\"  [(ngModel)]=\"reportModel.facility\"  >\n               <option *ngFor = \"let item of facilityId\" [ngValue]=\"item\">{{item.facilityName}}</option>\n          </select>\n    \n     </td>\n     <td *ngIf=\"(names.parameterName=='department')\">\n          <select name=\"department\" id=\"department\"  [(ngModel)]=\"reportModel.department\"  >\n               <option *ngFor = \"let item of department\" [ngValue]=\"item\">{{item.department}}</option>\n          </select>\n\n     </td>\n     <td *ngIf=\"(names.parameterName=='observationCategory')\">\n          <select name=\"observationCategory\" id=\"observationCategory\"  [(ngModel)]=\"reportModel.observationCategory\"  >\n               <option *ngFor = \"let observationCategory of observationCategory\" [ngValue]=\"observationCategory\">{{observationCategory.observationCategory}}</option>\n          </select>\n\n     </td>\n     <td *ngIf=\"(names.parameterName=='scheduleType')\">\n          <select name=\"scheduleCode\" id=\"scheduleCode\"  [(ngModel)]=\"reportModel.scheduleCode\" (change)=\"schAssetIdAndType(reportModel.scheduleCode)\">\n               <option *ngFor = \"let item of schedule\" [ngValue]=\"item\">{{item.scheduleCode}}</option>\n          </select>    \n     </td>\n     <td *ngIf=\"(names.parameterName=='assetType')\">\n          <select name=\"assetType\" id=\"assetType\"  [(ngModel)]=\"reportModel.productId\"  (change)=\"schAssetType(reportModel.productId)\" >\n               <option *ngFor = \"let item of assetType\" [ngValue]=\"item\"   >{{item.productId}}</option>\n          </select>\n    \n     </td>\n     \n     <td *ngIf=\"(names.parameterName=='assetId')\">\n          <select name=\"assetId\" id=\"assetId\"  [(ngModel)]=\"reportModel.assetId\"  >\n               <option *ngFor = \"let item of assetId\" [ngValue]=\"item\">{{item.assetId}}</option>\n          </select>\n     </td>\n     <td *ngIf=\"(names.parameterName=='scheduleDate')\">\n          <select name=\"scheduleDate\" id=\"scheduleDate\"  [(ngModel)]=\"reportModel.scheduleDate\" >\n               <option *ngFor = \"let item of assetId\" [ngValue]=\"item.scheduleDate\">{{item.scheduleDate}}</option>\n          </select>\n     </td>\n     \n     <td *ngIf=\"(names.parameterName=='SwitchType')\">\n          <select name=\"pbSwitchType\" id=\"pbSwitchType\"  [(ngModel)]=\"reportModel.pbSwitchType\" >\n               <option *ngFor = \"let item of pbSwitchType\" [ngValue]=\"item\">{{item}}</option>\n          </select>\n     </td>\n     <td *ngIf=\"(names.parameterName=='elementarySection')\">\n          <select name=\"pbExtentCode\" id=\"pbExtentCode\"  [(ngModel)]=\"reportModel.pbExtentCode\" >\n               <option *ngFor = \"let item of pbSwitchControlData\" [ngValue]=\"item\">{{item.pbExtentCode}}</option>\n          </select>\n     </td>\n     <td *ngIf=\"(names.parameterName=='elementarySectionCode')\">\n          <select name=\"elementarySectionCode\" id=\"elementarySectionCode\"  [(ngModel)]=\"reportModel.elementarySectionCode\" >\n               <option *ngFor = \"let item of elementarySectionCode\" [ngValue]=\"item\">{{item.elementarySectionCode}}</option>\n          </select>\n     </td>\n      <td *ngIf=\"(names.parameterName=='ActivityType')\">\n            <select name=\"activityType\" id=\"activityType\"  [(ngModel)]=\"reportModel.activityType\" >\n                 <option *ngFor = \"let item of activityType\" [ngValue]=\"item\">{{item}}</option>\n            </select>\n       </td>\n     \n     <td *ngIf=\"(names.parameterName=='year')\"><input type=\"text\"  name=\"year\" id=\"year\" size=\"10\" [(ngModel)]=\"reportModel.year\"/></td>\n     <td *ngIf=\"(names.parameterName=='fromkm')\"><input type=\"text\"  name=\"fromkm\" id=\"fromkm\" size=\"10\" [(ngModel)]=\"reportModel.fromkm\"/></td>\n     <td *ngIf=\"(names.parameterName=='tokm')\"><input type=\"text\"  name=\"tokm\" id=\"tokm\" size=\"10\" [(ngModel)]=\"reportModel.tokm\"/></td>\n          </tr>\n       \n     </div>     </ul> <tr > Report Format:                      \n          <select> \n               <option *ngFor = \"let i of otyp\"  id=\"type\">{{i}}</option> \n            </select> \n     </tr>\n     <tr align=\"center\">\n     <input type=\"button\" value=\"Generate\" (click)=\"generateReport()\"></tr>\n     <br>\n          \n     \n</table> \n</div></form> \n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ReportService  } from \"src/app/services/report.service\";\nimport {ActivatedRoute } from '@angular/router';\nimport{Router} from '@angular/router';\nimport { FormBuilder} from '@angular/forms';\nimport {ReportParameterModel} from 'src/app/models/reportParameter.model';\nimport { ReportPayload } from 'src/app/payloads/report.payload';\nimport { ReportModel } from 'src/app/models/report.model';\nimport { FacilityModel } from 'src/app/models/facility.model';\nimport {FailuresTableModel}from 'src/app/models/failures-table.model';\nimport { ProductModel } from 'src/app/models/product.model';\nimport { ScheduleModel } from 'src/app/models/schedule.model';\nimport { PreviousRouteService } from 'src/app/services/previousRoute.service';\n\n@Component({\n    selector: 'app-reportParameterDisplay',\n    templateUrl: 'reportParameterDisplay.component.html',\n    styleUrls: ['./reportParameterDisplay.component.css']\n})\n\nexport class ReportParameterDisplayComponent implements OnInit {\n    \n     schedule:any;\n     elementarySectionCode:any;\n     department:any;\n     oheFixedAsset:any;\n     pbSwitchCode:any;\n     assetId:any;\n     assetType:any;\n     zoneData:any;\n     subDivisionData:any;\n     divisionsData:any;\n     parameterData:any;\n     observationCategory:any;\n     facilityData:FacilityModel;\n     failuresModel:FailuresTableModel;\n     productModel:ProductModel;\n     scheduleData:ScheduleModel;\n     submitedForm:any;\n     facilityId:any;\n     reportModel: ReportModel;\n     formValuses: any;\n     pbSwitchControlData:any;\n     sub;/*It defines to store router map of subscribe*/\n     id;  /* Its used to store the getting name on the report page  */\n     otyp=[\"Adobe portable Document Format(pdf)\",\"Comma Separated Value Text\",\"HTML Text\",\"Microsoft Excel\",\"Plain Text\",\"XML Text\"]\n    constructor(private reportService: ReportService,\n       private Activatedroute:ActivatedRoute,\n        private router:Router,\n        private formBuilder: FormBuilder ,\n        private previousRouterUrl: PreviousRouteService) { }\n     \n    ngOnInit() {\n    \n      \n       let previousUrl = this.previousRouterUrl.getPreviousUrl();\n       console.log('previousUrl::::'+previousUrl);\n       \n       if(previousUrl === '/daily-progress-reports'){\n              console.log(\"routerUrl\"+this.router.url);\n              this.assetType = 'TowerCar';     \n       }\n       else if(previousUrl === '/asset-reports') {\n              this.assetType = 'OHE_FIXED_ASSET';      \n       }\n       else if(previousUrl === '/asset-master-reports') {\n              this.assetType = 'OHE_FIXED_ASSET';      \n       }\n       else if(previousUrl === '/psi-reports'){\n              this.assetType = 'PSI_FIXED_ASSET'\n       }\n      \n       this.reportService.allAssetTypeReports(this.assetType).subscribe((data)=>{\n         this.assetType =data;\n     })\n        this.reportModel = new ReportModel();\n        this.submitedForm=this.formBuilder.group({});\n        this.facilityNames();\n        this.elementarySections();\n        this.observationCheckList();\n        this.observationCategories();\n        this.powerBlocks();\n        this.pbSwitchControl();\n        this.zoneList();\n        this.sub=this.Activatedroute.paramMap.subscribe(params => { \n            console.log(params);\n             this.id = params.get('id'); \n             console.log(\"this is Getting Report Name :::\"+this.id);   \n         });\n         \n   \n         this.reportParameterNames();\n        \n      ReportPayload.GET.reportId = this.id;\n        // ReportPayload.GET.zone = \"kHG\";\n        //ReportPayload.GET.division = \"hyd\";\n        // ReportPayload.GET.reportHeader = \"REport\";\n         //ReportPayload.GET.facilityId = \"30017\";\n         //ReportPayload.GET.permission=\"View\";\n       \n    }\n   reportParameterNames()\n         {\n                const parameterData : FacilityModel[] = [];\n                console.log('facilityModel');\n                this.reportService. reportParameterNames().subscribe((data) => {\n                  this.parameterData = data;\n                  \n                 // console.log('parameter Data '+JSON.stringify(data))\n         }\n                );\n\n        }\n        facilityNames()\n        {\n               const facilityData : ReportParameterModel[] = [];\n               console.log('facilityData27-12-19');\n               this.reportService. facilityNames().subscribe((data) => {\n                 this.facilityData = data;\n                // console.log('facility27-19-19'+this.facilityData);\n                // console.log('facilityData '+JSON.stringify(data))\n        }\n               );\n\n       }\n       powerBlocks()\n        {\n               const failuresModel : FailuresTableModel[] = [];\n               //console.log('failuresModel');\n               this.reportService. powerBlocks().subscribe((data) => {\n                 this.failuresModel = data;\n                 //console.log('failuresModel'+this.facilityData);\n                 \n        }\n               );\n\n       }\n       observationCategories()\n        {\n               \n               this.reportService. observationCategories().subscribe((data) => {\n                 this.department = data;\n        }\n               );\n\n       }\n       zoneList()\n        {\n              \n               this.reportService. zoneList().subscribe((data) => {\n                 this.zoneData = data;\n        }\n               );\n\n       }\n       observationCheckList()\n        {\n               \n               this.reportService. observationCheckList().subscribe((data) => {\n                 this.observationCategory = data;\n        }\n               );\n\n       }\n       elementarySections()\n       {\n               \n              this.reportService. elementarySections().subscribe((data) => {\n                this.elementarySectionCode = data;\n       }\n              );\n\n      }\n      pbSwitchControl()\n      {\n              \n             this.reportService. pbSwitchControl().subscribe((data) => {\n               this.pbSwitchControlData = data;\n      }\n             );\n\n     }\n\n\n      public activityType=['measurement','activity','multi_measure_activity'];\n      public pbSwitchType=['REMOTE','MANUAL'];\n      \n      generateReport()\n       {   \n\n          this.reportModel.reportId=this.id;\n          console.log(\"facilityId6-1-2020:::\"+JSON.stringify(this.reportModel));\n          this.submitedForm = \"\";\n          console.log(\"Report Model::2-1-2020:::\"+this.reportModel);\n          this.reportService.generateReport(this.reportModel).subscribe((response) => {\n          this.submitedForm = response;\n          let pdfWindow = window.open(\"download\",\"\");\n          let content = encodeURIComponent(this.submitedForm.outputData);\n                    // let content=JSON.stringify(ReportPayload.GET.outputData);\n          let iframeStart = \"<\\iframe width='100%' height='100%' src='data:application/pdf;base64, \";\n          let iframeEnd= \"'><\\/iframe>\";\n          pdfWindow.document.write(iframeStart + content + iframeEnd);\n          },\n          error => error => {        \n          console.log(' >>> ERROR ' + error);\n            }) \n        }\n        schAssetType(productCategoryMemObj: Object){\n              //let values = Object.values(productCategoryMemObj)[9] ;\n              var assetType = JSON.stringify(productCategoryMemObj);\n              \n              this.reportService.getScheduleCodesBasedOnAssetType(assetType).subscribe((data) => {\n                     this.schedule = data;\n              }    \n              )\n        }\n        schAssetIdAndType(assetsScheHistObj: Object){\n              var scheduleCode = JSON.stringify(assetsScheHistObj);\n              this.reportService.getAssetIdBasedOnScheduleCodesAndAssetTypes(scheduleCode).subscribe((data) => {\n                 this.assetId=data;    \n              }    \n              )\n        }\n        divisionCode(code: any){\n              var zone = JSON.stringify(code);\n              this.reportService.getDivisionBasedOnZone(zone).subscribe((data) => {\n                this.divisionsData=data;   \n              }    \n              )\n        }\n        subDivision(code: any){\n              var division = JSON.stringify(code);\n              this.reportService.getSubDivisionBasedOnDivision(division).subscribe((data) => {\n                this.subDivisionData=data;   \n              }    \n              )\n        }\n        facility(code: any){\n             var subDivision = JSON.stringify(code);\n             this.reportService.getFacilityBasedOnSubDivision(subDivision).subscribe((data) => {\n               this.facilityId=data;\n             }    \n             )\n       }\n        \n       }\n        \n      ","import { NgModule } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatMenuModule, MatGridListModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { ReportService } from 'src/app/services/report.service';\nimport { MatDatepickerModule, MatInputModule, MatNativeDateModule } from '@angular/material';\nimport { ReportParameterDisplayComponent } from './reportParameterDisplay.component';\nimport{FormsModule}   from '@angular/forms';\n\n\nconst routes: Routes = [\n    {\n        path     : '',\n        component :ReportParameterDisplayComponent\n       \n    },]\n@NgModule({\n    imports: [RouterModule.forChild(routes),\n        //Ng4LoadingSpinnerModule.forRoot(),\n        MatMenuModule,\n        MatGridListModule,\n        CommonModule,\n        MatDatepickerModule,\n        MatInputModule,\n        MatNativeDateModule,\n        FormsModule\n        \n    \n       // MatToolbarModule,\n        //MatSidenavModule,\n         ],\n    exports: [],\n    declarations: [ReportParameterDisplayComponent],\n    providers: [ReportService],\n})\nexport class ReportParameterDisplayModule { }","export class ReportModel{\n    outputData: any;\n    reportName: string;\n    reportHeader: string;\n    zone:any;\n    division: any;\n    subDivision:any;\n    permission:String;\n    depot:string;\n    facility:any;\n    reportId:any;\n    id:any;\n    productId : any;\n    fromDate:any;\n    toDate:any;\n    failureFromDate:any;\n    failureToDate:any;\n    department:any;\n    observationCategory:any;\n    reportCategory:any;\n    scheduleCode:any;\n    assetType:any;\n    assetId:any;\n    scheduleDate:any;\n    activityType:any;\n    year:any;\n    switchType:any;\n    pbSwitchType:any;\n    pbExtentCode:any;\n    elementarySectionCode:any;\n    fromkm:any;\n    tokm:any;\n    locationTypes:any;\n    depotType:any;\n}\n","export const ReportPayload = {\n    GET: {\n        \"outputData\":\"\",\n        \"reportId\": \"\",\n\t\"zone\": \"\",\n\t\"reportHeader\": \"\",\n    \"division\": \"\",\n    \"facilityId\": \"\",\n    \"permission\":  \"\"\n\n    }\n}"],"sourceRoot":""}